#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.Statistician
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class StatistDailyFlightLogDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    partial void InsertEQUIPMENT(EQUIPMENT instance);
    partial void UpdateEQUIPMENT(EQUIPMENT instance);
    partial void DeleteEQUIPMENT(EQUIPMENT instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    partial void InsertCHARGECODE(CHARGECODE instance);
    partial void UpdateCHARGECODE(CHARGECODE instance);
    partial void DeleteCHARGECODE(CHARGECODE instance);
    partial void InsertAVIATORROLE(AVIATORROLE instance);
    partial void UpdateAVIATORROLE(AVIATORROLE instance);
    partial void DeleteAVIATORROLE(AVIATORROLE instance);
    partial void InsertSETTING(SETTING instance);
    partial void UpdateSETTING(SETTING instance);
    partial void DeleteSETTING(SETTING instance);
    partial void InsertDAILYFLIGHTLOG(DAILYFLIGHTLOG instance);
    partial void UpdateDAILYFLIGHTLOG(DAILYFLIGHTLOG instance);
    partial void DeleteDAILYFLIGHTLOG(DAILYFLIGHTLOG instance);
    partial void InsertFLIGHTLOGROW(FLIGHTLOGROW instance);
    partial void UpdateFLIGHTLOGROW(FLIGHTLOGROW instance);
    partial void DeleteFLIGHTLOGROW(FLIGHTLOGROW instance);
    partial void InsertLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void UpdateLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void DeleteLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void InsertOPDETAIL(OPDETAIL instance);
    partial void UpdateOPDETAIL(OPDETAIL instance);
    partial void DeleteOPDETAIL(OPDETAIL instance);
    partial void InsertEQUIPMENTROLE(EQUIPMENTROLE instance);
    partial void UpdateEQUIPMENTROLE(EQUIPMENTROLE instance);
    partial void DeleteEQUIPMENTROLE(EQUIPMENTROLE instance);
    partial void InsertAVIATOR(AVIATOR instance);
    partial void UpdateAVIATOR(AVIATOR instance);
    partial void DeleteAVIATOR(AVIATOR instance);
    partial void InsertEQUIPTYPE(EQUIPTYPE instance);
    partial void UpdateEQUIPTYPE(EQUIPTYPE instance);
    partial void DeleteEQUIPTYPE(EQUIPTYPE instance);
    partial void InsertEQUIPROLESTYPE(EQUIPROLESTYPE instance);
    partial void UpdateEQUIPROLESTYPE(EQUIPROLESTYPE instance);
    partial void DeleteEQUIPROLESTYPE(EQUIPROLESTYPE instance);
    partial void InsertBRIDGE_LAUNCHMETH_EQUIPROLE(BRIDGE_LAUNCHMETH_EQUIPROLE instance);
    partial void UpdateBRIDGE_LAUNCHMETH_EQUIPROLE(BRIDGE_LAUNCHMETH_EQUIPROLE instance);
    partial void DeleteBRIDGE_LAUNCHMETH_EQUIPROLE(BRIDGE_LAUNCHMETH_EQUIPROLE instance);
    partial void InsertOPERATION(OPERATION instance);
    partial void UpdateOPERATION(OPERATION instance);
    partial void DeleteOPERATION(OPERATION instance);
    partial void InsertSPECIALOP(SPECIALOP instance);
    partial void UpdateSPECIALOP(SPECIALOP instance);
    partial void DeleteSPECIALOP(SPECIALOP instance);
    partial void InsertSPECIALOPTYPE(SPECIALOPTYPE instance);
    partial void UpdateSPECIALOPTYPE(SPECIALOPTYPE instance);
    partial void DeleteSPECIALOPTYPE(SPECIALOPTYPE instance);
    #endregion
		
		public StatistDailyFlightLogDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDailyFlightLogDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDailyFlightLogDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDailyFlightLogDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDailyFlightLogDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPMENT> EQUIPMENTs
		{
			get
			{
				return this.GetTable<EQUIPMENT>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<CHARGECODE> CHARGECODEs
		{
			get
			{
				return this.GetTable<CHARGECODE>();
			}
		}
		
		public System.Data.Linq.Table<AVIATORROLE> AVIATORROLEs
		{
			get
			{
				return this.GetTable<AVIATORROLE>();
			}
		}
		
		public System.Data.Linq.Table<SETTING> SETTINGs
		{
			get
			{
				return this.GetTable<SETTING>();
			}
		}
		
		public System.Data.Linq.Table<DAILYFLIGHTLOG> DAILYFLIGHTLOGs
		{
			get
			{
				return this.GetTable<DAILYFLIGHTLOG>();
			}
		}
		
		public System.Data.Linq.Table<FLIGHTLOGROW> FLIGHTLOGROWs
		{
			get
			{
				return this.GetTable<FLIGHTLOGROW>();
			}
		}
		
		public System.Data.Linq.Table<LAUNCHMETHOD> LAUNCHMETHODs
		{
			get
			{
				return this.GetTable<LAUNCHMETHOD>();
			}
		}
		
		public System.Data.Linq.Table<OPDETAIL> OPDETAILs
		{
			get
			{
				return this.GetTable<OPDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPMENTROLE> EQUIPMENTROLEs
		{
			get
			{
				return this.GetTable<EQUIPMENTROLE>();
			}
		}
		
		public System.Data.Linq.Table<AVIATOR> AVIATORs
		{
			get
			{
				return this.GetTable<AVIATOR>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPTYPE> EQUIPTYPEs
		{
			get
			{
				return this.GetTable<EQUIPTYPE>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPROLESTYPE> EQUIPROLESTYPEs
		{
			get
			{
				return this.GetTable<EQUIPROLESTYPE>();
			}
		}
		
		public System.Data.Linq.Table<BRIDGE_LAUNCHMETH_EQUIPROLE> BRIDGE_LAUNCHMETH_EQUIPROLEs
		{
			get
			{
				return this.GetTable<BRIDGE_LAUNCHMETH_EQUIPROLE>();
			}
		}
		
		public System.Data.Linq.Table<TNPV_FlightLogsYearMonth> TNPV_FlightLogsYearMonths
		{
			get
			{
				return this.GetTable<TNPV_FlightLogsYearMonth>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION> OPERATIONs
		{
			get
			{
				return this.GetTable<OPERATION>();
			}
		}
		
		public System.Data.Linq.Table<SPECIALOP> SPECIALOPs
		{
			get
			{
				return this.GetTable<SPECIALOP>();
			}
		}
		
		public System.Data.Linq.Table<SPECIALOPTYPE> SPECIALOPTYPEs
		{
			get
			{
				return this.GetTable<SPECIALOPTYPE>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_PeopleWhoCanTow")]
		public ISingleResult<sp_PeopleWhoCanTowResult> sp_PeopleWhoCanTow([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Date", DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date);
			return ((ISingleResult<sp_PeopleWhoCanTowResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.bTNPF_CheckDupOp", IsComposable=true)]
		public System.Nullable<bool> bTNPF_CheckDupOp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iLaunchMethod, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iTakeoffLoc, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DBegin", DbType="SmallDateTime")] System.Nullable<System.DateTime> dBegin, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DTakeoff", DbType="SmallDateTime")] System.Nullable<System.DateTime> dTakeoff)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iLaunchMethod, iTakeoffLoc, dBegin, dTakeoff).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.iTNPF_ClosestOpInTime", IsComposable=true)]
		public System.Nullable<int> iTNPF_ClosestOpInTime()
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod()))).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_FlightLogRows")]
		public ISingleResult<sp_FlightLogRowsResult> sp_FlightLogRows([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iWhichFliteLog)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iWhichFliteLog);
			return ((ISingleResult<sp_FlightLogRowsResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private System.DateTimeOffset _DAcceptedAUP;
		
		private EntitySet<DAILYFLIGHTLOG> _DAILYFLIGHTLOGs;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    partial void OnDAcceptedAUPChanging(System.DateTimeOffset value);
    partial void OnDAcceptedAUPChanged();
    #endregion
		
		public PEOPLE()
		{
			this._DAILYFLIGHTLOGs = new EntitySet<DAILYFLIGHTLOG>(new Action<DAILYFLIGHTLOG>(this.attach_DAILYFLIGHTLOGs), new Action<DAILYFLIGHTLOG>(this.detach_DAILYFLIGHTLOGs));
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAcceptedAUP", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DAcceptedAUP
		{
			get
			{
				return this._DAcceptedAUP;
			}
			set
			{
				if ((this._DAcceptedAUP != value))
				{
					this.OnDAcceptedAUPChanging(value);
					this.SendPropertyChanging();
					this._DAcceptedAUP = value;
					this.SendPropertyChanged("DAcceptedAUP");
					this.OnDAcceptedAUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_DAILYFLIGHTLOG", Storage="_DAILYFLIGHTLOGs", ThisKey="ID", OtherKey="iMainTowOp")]
		public EntitySet<DAILYFLIGHTLOG> DAILYFLIGHTLOGs
		{
			get
			{
				return this._DAILYFLIGHTLOGs;
			}
			set
			{
				this._DAILYFLIGHTLOGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAILYFLIGHTLOGs(DAILYFLIGHTLOG entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_DAILYFLIGHTLOGs(DAILYFLIGHTLOG entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPMENT")]
	public partial class EQUIPMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iEquipType;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private string _sShortEquipName;
		
		private string _sDescription;
		
		private string _sRegistrationId;
		
		private string _sOwner;
		
		private string _sModelNum;
		
		private System.Nullable<decimal> _AcquisitionCost;
		
		private string _sComment;
		
		private EntitySet<DAILYFLIGHTLOG> _DAILYFLIGHTLOGs;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OnsShortEquipNameChanging(string value);
    partial void OnsShortEquipNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnsRegistrationIdChanging(string value);
    partial void OnsRegistrationIdChanged();
    partial void OnsOwnerChanging(string value);
    partial void OnsOwnerChanged();
    partial void OnsModelNumChanging(string value);
    partial void OnsModelNumChanged();
    partial void OnAcquisitionCostChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionCostChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPMENT()
		{
			this._DAILYFLIGHTLOGs = new EntitySet<DAILYFLIGHTLOG>(new Action<DAILYFLIGHTLOG>(this.attach_DAILYFLIGHTLOGs), new Action<DAILYFLIGHTLOG>(this.detach_DAILYFLIGHTLOGs));
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortEquipName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sShortEquipName
		{
			get
			{
				return this._sShortEquipName;
			}
			set
			{
				if ((this._sShortEquipName != value))
				{
					this.OnsShortEquipNameChanging(value);
					this.SendPropertyChanging();
					this._sShortEquipName = value;
					this.SendPropertyChanged("sShortEquipName");
					this.OnsShortEquipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="VarChar(MAX)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRegistrationId", DbType="VarChar(20)")]
		public string sRegistrationId
		{
			get
			{
				return this._sRegistrationId;
			}
			set
			{
				if ((this._sRegistrationId != value))
				{
					this.OnsRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._sRegistrationId = value;
					this.SendPropertyChanged("sRegistrationId");
					this.OnsRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sOwner", DbType="VarChar(50)")]
		public string sOwner
		{
			get
			{
				return this._sOwner;
			}
			set
			{
				if ((this._sOwner != value))
				{
					this.OnsOwnerChanging(value);
					this.SendPropertyChanging();
					this._sOwner = value;
					this.SendPropertyChanged("sOwner");
					this.OnsOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sModelNum", DbType="VarChar(20)")]
		public string sModelNum
		{
			get
			{
				return this._sModelNum;
			}
			set
			{
				if ((this._sModelNum != value))
				{
					this.OnsModelNumChanging(value);
					this.SendPropertyChanging();
					this._sModelNum = value;
					this.SendPropertyChanged("sModelNum");
					this.OnsModelNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AcquisitionCost
		{
			get
			{
				return this._AcquisitionCost;
			}
			set
			{
				if ((this._AcquisitionCost != value))
				{
					this.OnAcquisitionCostChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionCost = value;
					this.SendPropertyChanged("AcquisitionCost");
					this.OnAcquisitionCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_DAILYFLIGHTLOG", Storage="_DAILYFLIGHTLOGs", ThisKey="ID", OtherKey="iMainTowEquip")]
		public EntitySet<DAILYFLIGHTLOG> DAILYFLIGHTLOGs
		{
			get
			{
				return this._DAILYFLIGHTLOGs;
			}
			set
			{
				this._DAILYFLIGHTLOGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iEquip")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPMENT", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.EQUIPMENTs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.EQUIPMENTs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAILYFLIGHTLOGs(DAILYFLIGHTLOG entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = this;
		}
		
		private void detach_DAILYFLIGHTLOGs(DAILYFLIGHTLOG entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = null;
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATIONS")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sLocation;
		
		private string _sAbbrev;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private decimal _dRunwayAltitude;
		
		private EntitySet<DAILYFLIGHTLOG> _DAILYFLIGHTLOGs;
		
		private EntitySet<OPERATION> _OPERATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsLocationChanging(string value);
    partial void OnsLocationChanged();
    partial void OnsAbbrevChanging(string value);
    partial void OnsAbbrevChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OndRunwayAltitudeChanging(decimal value);
    partial void OndRunwayAltitudeChanged();
    #endregion
		
		public LOCATION()
		{
			this._DAILYFLIGHTLOGs = new EntitySet<DAILYFLIGHTLOG>(new Action<DAILYFLIGHTLOG>(this.attach_DAILYFLIGHTLOGs), new Action<DAILYFLIGHTLOG>(this.detach_DAILYFLIGHTLOGs));
			this._OPERATIONs = new EntitySet<OPERATION>(new Action<OPERATION>(this.attach_OPERATIONs), new Action<OPERATION>(this.detach_OPERATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLocation", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sLocation
		{
			get
			{
				return this._sLocation;
			}
			set
			{
				if ((this._sLocation != value))
				{
					this.OnsLocationChanging(value);
					this.SendPropertyChanging();
					this._sLocation = value;
					this.SendPropertyChanged("sLocation");
					this.OnsLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAbbrev", DbType="NVarChar(6)")]
		public string sAbbrev
		{
			get
			{
				return this._sAbbrev;
			}
			set
			{
				if ((this._sAbbrev != value))
				{
					this.OnsAbbrevChanging(value);
					this.SendPropertyChanging();
					this._sAbbrev = value;
					this.SendPropertyChanged("sAbbrev");
					this.OnsAbbrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dRunwayAltitude", DbType="Decimal(6,0) NOT NULL")]
		public decimal dRunwayAltitude
		{
			get
			{
				return this._dRunwayAltitude;
			}
			set
			{
				if ((this._dRunwayAltitude != value))
				{
					this.OndRunwayAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dRunwayAltitude = value;
					this.SendPropertyChanged("dRunwayAltitude");
					this.OndRunwayAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DAILYFLIGHTLOG", Storage="_DAILYFLIGHTLOGs", ThisKey="ID", OtherKey="iMainLocation")]
		public EntitySet<DAILYFLIGHTLOG> DAILYFLIGHTLOGs
		{
			get
			{
				return this._DAILYFLIGHTLOGs;
			}
			set
			{
				this._DAILYFLIGHTLOGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_OPERATION", Storage="_OPERATIONs", ThisKey="ID", OtherKey="iTakeoffLoc")]
		public EntitySet<OPERATION> OPERATIONs
		{
			get
			{
				return this._OPERATIONs;
			}
			set
			{
				this._OPERATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DAILYFLIGHTLOGs(DAILYFLIGHTLOG entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_DAILYFLIGHTLOGs(DAILYFLIGHTLOG entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
		
		private void attach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHARGECODES")]
	public partial class CHARGECODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sChargeCode;
		
		private char _cChargeCode;
		
		private bool _bCharge4Launch;
		
		private bool _bCharge4Rental;
		
		private EntityRef<CHARGECODE> _CHARGECODE2;
		
		private EntitySet<FLIGHTLOGROW> _FLIGHTLOGROWs;
		
		private EntitySet<OPERATION> _OPERATIONs;
		
		private EntityRef<CHARGECODE> _CHARGECODE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsChargeCodeChanging(string value);
    partial void OnsChargeCodeChanged();
    partial void OncChargeCodeChanging(char value);
    partial void OncChargeCodeChanged();
    partial void OnbCharge4LaunchChanging(bool value);
    partial void OnbCharge4LaunchChanged();
    partial void OnbCharge4RentalChanging(bool value);
    partial void OnbCharge4RentalChanged();
    #endregion
		
		public CHARGECODE()
		{
			this._CHARGECODE2 = default(EntityRef<CHARGECODE>);
			this._FLIGHTLOGROWs = new EntitySet<FLIGHTLOGROW>(new Action<FLIGHTLOGROW>(this.attach_FLIGHTLOGROWs), new Action<FLIGHTLOGROW>(this.detach_FLIGHTLOGROWs));
			this._OPERATIONs = new EntitySet<OPERATION>(new Action<OPERATION>(this.attach_OPERATIONs), new Action<OPERATION>(this.detach_OPERATIONs));
			this._CHARGECODE1 = default(EntityRef<CHARGECODE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._CHARGECODE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sChargeCode
		{
			get
			{
				return this._sChargeCode;
			}
			set
			{
				if ((this._sChargeCode != value))
				{
					this.OnsChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._sChargeCode = value;
					this.SendPropertyChanged("sChargeCode");
					this.OnsChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cChargeCode", DbType="Char(1) NOT NULL")]
		public char cChargeCode
		{
			get
			{
				return this._cChargeCode;
			}
			set
			{
				if ((this._cChargeCode != value))
				{
					this.OncChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._cChargeCode = value;
					this.SendPropertyChanged("cChargeCode");
					this.OncChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bCharge4Launch", DbType="Bit NOT NULL")]
		public bool bCharge4Launch
		{
			get
			{
				return this._bCharge4Launch;
			}
			set
			{
				if ((this._bCharge4Launch != value))
				{
					this.OnbCharge4LaunchChanging(value);
					this.SendPropertyChanging();
					this._bCharge4Launch = value;
					this.SendPropertyChanged("bCharge4Launch");
					this.OnbCharge4LaunchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bCharge4Rental", DbType="Bit NOT NULL")]
		public bool bCharge4Rental
		{
			get
			{
				return this._bCharge4Rental;
			}
			set
			{
				if ((this._bCharge4Rental != value))
				{
					this.OnbCharge4RentalChanging(value);
					this.SendPropertyChanging();
					this._bCharge4Rental = value;
					this.SendPropertyChanged("bCharge4Rental");
					this.OnbCharge4RentalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_CHARGECODE", Storage="_CHARGECODE2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public CHARGECODE CHARGECODE2
		{
			get
			{
				return this._CHARGECODE2.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE2.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE2.Entity = null;
						previousValue.CHARGECODE1 = null;
					}
					this._CHARGECODE2.Entity = value;
					if ((value != null))
					{
						value.CHARGECODE1 = this;
					}
					this.SendPropertyChanged("CHARGECODE2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_FLIGHTLOGROW", Storage="_FLIGHTLOGROWs", ThisKey="ID", OtherKey="iChargeCode")]
		public EntitySet<FLIGHTLOGROW> FLIGHTLOGROWs
		{
			get
			{
				return this._FLIGHTLOGROWs;
			}
			set
			{
				this._FLIGHTLOGROWs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_OPERATION", Storage="_OPERATIONs", ThisKey="ID", OtherKey="iChargeCode")]
		public EntitySet<OPERATION> OPERATIONs
		{
			get
			{
				return this._OPERATIONs;
			}
			set
			{
				this._OPERATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_CHARGECODE", Storage="_CHARGECODE1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public CHARGECODE CHARGECODE1
		{
			get
			{
				return this._CHARGECODE1.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE1.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE1.Entity = null;
						previousValue.CHARGECODE2 = null;
					}
					this._CHARGECODE1.Entity = value;
					if ((value != null))
					{
						value.CHARGECODE2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("CHARGECODE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FLIGHTLOGROWs(FLIGHTLOGROW entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = this;
		}
		
		private void detach_FLIGHTLOGROWs(FLIGHTLOGROW entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = null;
		}
		
		private void attach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = this;
		}
		
		private void detach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVIATORROLES")]
	public partial class AVIATORROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sAviatorRole;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsAviatorRoleChanging(string value);
    partial void OnsAviatorRoleChanged();
    #endregion
		
		public AVIATORROLE()
		{
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAviatorRole", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sAviatorRole
		{
			get
			{
				return this._sAviatorRole;
			}
			set
			{
				if ((this._sAviatorRole != value))
				{
					this.OnsAviatorRoleChanging(value);
					this.SendPropertyChanging();
					this._sAviatorRole = value;
					this.SendPropertyChanged("sAviatorRole");
					this.OnsAviatorRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVIATORROLE_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iAviatorRole")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.AVIATORROLE = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.AVIATORROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETTINGS")]
	public partial class SETTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sSettingName;
		
		private string _sExplanation;
		
		private string _sSettingValue;
		
		private string _sInTable;
		
		private string _sComments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsSettingNameChanging(string value);
    partial void OnsSettingNameChanged();
    partial void OnsExplanationChanging(string value);
    partial void OnsExplanationChanged();
    partial void OnsSettingValueChanging(string value);
    partial void OnsSettingValueChanged();
    partial void OnsInTableChanging(string value);
    partial void OnsInTableChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public SETTING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sSettingName
		{
			get
			{
				return this._sSettingName;
			}
			set
			{
				if ((this._sSettingName != value))
				{
					this.OnsSettingNameChanging(value);
					this.SendPropertyChanging();
					this._sSettingName = value;
					this.SendPropertyChanged("sSettingName");
					this.OnsSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sExplanation", DbType="NVarChar(MAX)")]
		public string sExplanation
		{
			get
			{
				return this._sExplanation;
			}
			set
			{
				if ((this._sExplanation != value))
				{
					this.OnsExplanationChanging(value);
					this.SendPropertyChanging();
					this._sExplanation = value;
					this.SendPropertyChanged("sExplanation");
					this.OnsExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSettingValue", DbType="NVarChar(MAX)")]
		public string sSettingValue
		{
			get
			{
				return this._sSettingValue;
			}
			set
			{
				if ((this._sSettingValue != value))
				{
					this.OnsSettingValueChanging(value);
					this.SendPropertyChanging();
					this._sSettingValue = value;
					this.SendPropertyChanged("sSettingValue");
					this.OnsSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInTable", DbType="NVarChar(MAX)")]
		public string sInTable
		{
			get
			{
				return this._sInTable;
			}
			set
			{
				if ((this._sInTable != value))
				{
					this.OnsInTableChanging(value);
					this.SendPropertyChanging();
					this._sInTable = value;
					this.SendPropertyChanged("sInTable");
					this.OnsInTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DAILYFLIGHTLOGS")]
	public partial class DAILYFLIGHTLOG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTimeOffset _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private System.DateTimeOffset _DFlightOps;
		
		private string _sFldMgr;
		
		private System.Nullable<int> _iMainTowEquip;
		
		private System.Nullable<int> _iMainTowOp;
		
		private System.Nullable<int> _iMainGlider;
		
		private int _iMainLocation;
		
		private System.Nullable<int> _iMainLaunchMethod;
		
		private string _sNotes;
		
		private EntitySet<FLIGHTLOGROW> _FLIGHTLOGROWs;
		
		private EntityRef<EQUIPMENT> _EQUIPMENT;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTimeOffset value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnDFlightOpsChanging(System.DateTimeOffset value);
    partial void OnDFlightOpsChanged();
    partial void OnsFldMgrChanging(string value);
    partial void OnsFldMgrChanged();
    partial void OniMainTowEquipChanging(System.Nullable<int> value);
    partial void OniMainTowEquipChanged();
    partial void OniMainTowOpChanging(System.Nullable<int> value);
    partial void OniMainTowOpChanged();
    partial void OniMainGliderChanging(System.Nullable<int> value);
    partial void OniMainGliderChanged();
    partial void OniMainLocationChanging(int value);
    partial void OniMainLocationChanged();
    partial void OniMainLaunchMethodChanging(System.Nullable<int> value);
    partial void OniMainLaunchMethodChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    #endregion
		
		public DAILYFLIGHTLOG()
		{
			this._FLIGHTLOGROWs = new EntitySet<FLIGHTLOGROW>(new Action<FLIGHTLOGROW>(this.attach_FLIGHTLOGROWs), new Action<FLIGHTLOGROW>(this.detach_FLIGHTLOGROWs));
			this._EQUIPMENT = default(EntityRef<EQUIPMENT>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFlightOps", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFlightOps
		{
			get
			{
				return this._DFlightOps;
			}
			set
			{
				if ((this._DFlightOps != value))
				{
					this.OnDFlightOpsChanging(value);
					this.SendPropertyChanging();
					this._DFlightOps = value;
					this.SendPropertyChanged("DFlightOps");
					this.OnDFlightOpsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFldMgr", DbType="NVarChar(100)")]
		public string sFldMgr
		{
			get
			{
				return this._sFldMgr;
			}
			set
			{
				if ((this._sFldMgr != value))
				{
					this.OnsFldMgrChanging(value);
					this.SendPropertyChanging();
					this._sFldMgr = value;
					this.SendPropertyChanged("sFldMgr");
					this.OnsFldMgrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMainTowEquip", DbType="Int")]
		public System.Nullable<int> iMainTowEquip
		{
			get
			{
				return this._iMainTowEquip;
			}
			set
			{
				if ((this._iMainTowEquip != value))
				{
					if (this._EQUIPMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMainTowEquipChanging(value);
					this.SendPropertyChanging();
					this._iMainTowEquip = value;
					this.SendPropertyChanged("iMainTowEquip");
					this.OniMainTowEquipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMainTowOp", DbType="Int")]
		public System.Nullable<int> iMainTowOp
		{
			get
			{
				return this._iMainTowOp;
			}
			set
			{
				if ((this._iMainTowOp != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMainTowOpChanging(value);
					this.SendPropertyChanging();
					this._iMainTowOp = value;
					this.SendPropertyChanged("iMainTowOp");
					this.OniMainTowOpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMainGlider", DbType="Int")]
		public System.Nullable<int> iMainGlider
		{
			get
			{
				return this._iMainGlider;
			}
			set
			{
				if ((this._iMainGlider != value))
				{
					this.OniMainGliderChanging(value);
					this.SendPropertyChanging();
					this._iMainGlider = value;
					this.SendPropertyChanged("iMainGlider");
					this.OniMainGliderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMainLocation", DbType="Int NOT NULL")]
		public int iMainLocation
		{
			get
			{
				return this._iMainLocation;
			}
			set
			{
				if ((this._iMainLocation != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMainLocationChanging(value);
					this.SendPropertyChanging();
					this._iMainLocation = value;
					this.SendPropertyChanged("iMainLocation");
					this.OniMainLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMainLaunchMethod", DbType="Int")]
		public System.Nullable<int> iMainLaunchMethod
		{
			get
			{
				return this._iMainLaunchMethod;
			}
			set
			{
				if ((this._iMainLaunchMethod != value))
				{
					this.OniMainLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iMainLaunchMethod = value;
					this.SendPropertyChanged("iMainLaunchMethod");
					this.OniMainLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DAILYFLIGHTLOG_FLIGHTLOGROW", Storage="_FLIGHTLOGROWs", ThisKey="ID", OtherKey="iFliteLog")]
		public EntitySet<FLIGHTLOGROW> FLIGHTLOGROWs
		{
			get
			{
				return this._FLIGHTLOGROWs;
			}
			set
			{
				this._FLIGHTLOGROWs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_DAILYFLIGHTLOG", Storage="_EQUIPMENT", ThisKey="iMainTowEquip", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public EQUIPMENT EQUIPMENT
		{
			get
			{
				return this._EQUIPMENT.Entity;
			}
			set
			{
				EQUIPMENT previousValue = this._EQUIPMENT.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENT.Entity = null;
						previousValue.DAILYFLIGHTLOGs.Remove(this);
					}
					this._EQUIPMENT.Entity = value;
					if ((value != null))
					{
						value.DAILYFLIGHTLOGs.Add(this);
						this._iMainTowEquip = value.ID;
					}
					else
					{
						this._iMainTowEquip = default(Nullable<int>);
					}
					this.SendPropertyChanged("EQUIPMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_DAILYFLIGHTLOG", Storage="_LOCATION", ThisKey="iMainLocation", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.DAILYFLIGHTLOGs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.DAILYFLIGHTLOGs.Add(this);
						this._iMainLocation = value.ID;
					}
					else
					{
						this._iMainLocation = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_DAILYFLIGHTLOG", Storage="_PEOPLE", ThisKey="iMainTowOp", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.DAILYFLIGHTLOGs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.DAILYFLIGHTLOGs.Add(this);
						this._iMainTowOp = value.ID;
					}
					else
					{
						this._iMainTowOp = default(Nullable<int>);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FLIGHTLOGROWs(FLIGHTLOGROW entity)
		{
			this.SendPropertyChanging();
			entity.DAILYFLIGHTLOG = this;
		}
		
		private void detach_FLIGHTLOGROWs(FLIGHTLOGROW entity)
		{
			this.SendPropertyChanging();
			entity.DAILYFLIGHTLOG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FLIGHTLOGROWS")]
	public partial class FLIGHTLOGROW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTimeOffset _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iFliteLog;
		
		private char _cStatus;
		
		private int _iTowEquip;
		
		private int _iTowOperator;
		
		private int _iGlider;
		
		private int _iPilot1;
		
		private int _iAviatorRole1;
		
		private decimal _dPctCharge1;
		
		private int _iPilot2;
		
		private int _iAviatorRole2;
		
		private decimal _dPctCharge2;
		
		private int _iLaunchMethod;
		
		private System.Nullable<decimal> _dReleaseAltitude;
		
		private System.Nullable<decimal> _dMaxAltitude;
		
		private int _iLocTakeOff;
		
		private System.DateTimeOffset _DTakeOff;
		
		private int _iLocLanding;
		
		private System.DateTimeOffset _DLanding;
		
		private int _iChargeCode;
		
		private System.Nullable<decimal> _mAmtCollected;
		
		private string _sComments;
		
		private EntityRef<CHARGECODE> _CHARGECODE;
		
		private EntityRef<DAILYFLIGHTLOG> _DAILYFLIGHTLOG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTimeOffset value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniFliteLogChanging(int value);
    partial void OniFliteLogChanged();
    partial void OncStatusChanging(char value);
    partial void OncStatusChanged();
    partial void OniTowEquipChanging(int value);
    partial void OniTowEquipChanged();
    partial void OniTowOperatorChanging(int value);
    partial void OniTowOperatorChanged();
    partial void OniGliderChanging(int value);
    partial void OniGliderChanged();
    partial void OniPilot1Changing(int value);
    partial void OniPilot1Changed();
    partial void OniAviatorRole1Changing(int value);
    partial void OniAviatorRole1Changed();
    partial void OndPctCharge1Changing(decimal value);
    partial void OndPctCharge1Changed();
    partial void OniPilot2Changing(int value);
    partial void OniPilot2Changed();
    partial void OniAviatorRole2Changing(int value);
    partial void OniAviatorRole2Changed();
    partial void OndPctCharge2Changing(decimal value);
    partial void OndPctCharge2Changed();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OndReleaseAltitudeChanging(System.Nullable<decimal> value);
    partial void OndReleaseAltitudeChanged();
    partial void OndMaxAltitudeChanging(System.Nullable<decimal> value);
    partial void OndMaxAltitudeChanged();
    partial void OniLocTakeOffChanging(int value);
    partial void OniLocTakeOffChanged();
    partial void OnDTakeOffChanging(System.DateTimeOffset value);
    partial void OnDTakeOffChanged();
    partial void OniLocLandingChanging(int value);
    partial void OniLocLandingChanged();
    partial void OnDLandingChanging(System.DateTimeOffset value);
    partial void OnDLandingChanged();
    partial void OniChargeCodeChanging(int value);
    partial void OniChargeCodeChanged();
    partial void OnmAmtCollectedChanging(System.Nullable<decimal> value);
    partial void OnmAmtCollectedChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public FLIGHTLOGROW()
		{
			this._CHARGECODE = default(EntityRef<CHARGECODE>);
			this._DAILYFLIGHTLOG = default(EntityRef<DAILYFLIGHTLOG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFliteLog", DbType="Int NOT NULL")]
		public int iFliteLog
		{
			get
			{
				return this._iFliteLog;
			}
			set
			{
				if ((this._iFliteLog != value))
				{
					if (this._DAILYFLIGHTLOG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniFliteLogChanging(value);
					this.SendPropertyChanging();
					this._iFliteLog = value;
					this.SendPropertyChanged("iFliteLog");
					this.OniFliteLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cStatus", DbType="NChar(1) NOT NULL")]
		public char cStatus
		{
			get
			{
				return this._cStatus;
			}
			set
			{
				if ((this._cStatus != value))
				{
					this.OncStatusChanging(value);
					this.SendPropertyChanging();
					this._cStatus = value;
					this.SendPropertyChanged("cStatus");
					this.OncStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTowEquip", DbType="Int NOT NULL")]
		public int iTowEquip
		{
			get
			{
				return this._iTowEquip;
			}
			set
			{
				if ((this._iTowEquip != value))
				{
					this.OniTowEquipChanging(value);
					this.SendPropertyChanging();
					this._iTowEquip = value;
					this.SendPropertyChanged("iTowEquip");
					this.OniTowEquipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTowOperator", DbType="Int NOT NULL")]
		public int iTowOperator
		{
			get
			{
				return this._iTowOperator;
			}
			set
			{
				if ((this._iTowOperator != value))
				{
					this.OniTowOperatorChanging(value);
					this.SendPropertyChanging();
					this._iTowOperator = value;
					this.SendPropertyChanged("iTowOperator");
					this.OniTowOperatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGlider", DbType="Int NOT NULL")]
		public int iGlider
		{
			get
			{
				return this._iGlider;
			}
			set
			{
				if ((this._iGlider != value))
				{
					this.OniGliderChanging(value);
					this.SendPropertyChanging();
					this._iGlider = value;
					this.SendPropertyChanged("iGlider");
					this.OniGliderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPilot1", DbType="Int NOT NULL")]
		public int iPilot1
		{
			get
			{
				return this._iPilot1;
			}
			set
			{
				if ((this._iPilot1 != value))
				{
					this.OniPilot1Changing(value);
					this.SendPropertyChanging();
					this._iPilot1 = value;
					this.SendPropertyChanged("iPilot1");
					this.OniPilot1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole1", DbType="Int NOT NULL")]
		public int iAviatorRole1
		{
			get
			{
				return this._iAviatorRole1;
			}
			set
			{
				if ((this._iAviatorRole1 != value))
				{
					this.OniAviatorRole1Changing(value);
					this.SendPropertyChanging();
					this._iAviatorRole1 = value;
					this.SendPropertyChanged("iAviatorRole1");
					this.OniAviatorRole1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPctCharge1", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPctCharge1
		{
			get
			{
				return this._dPctCharge1;
			}
			set
			{
				if ((this._dPctCharge1 != value))
				{
					this.OndPctCharge1Changing(value);
					this.SendPropertyChanging();
					this._dPctCharge1 = value;
					this.SendPropertyChanged("dPctCharge1");
					this.OndPctCharge1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPilot2", DbType="Int NOT NULL")]
		public int iPilot2
		{
			get
			{
				return this._iPilot2;
			}
			set
			{
				if ((this._iPilot2 != value))
				{
					this.OniPilot2Changing(value);
					this.SendPropertyChanging();
					this._iPilot2 = value;
					this.SendPropertyChanged("iPilot2");
					this.OniPilot2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole2", DbType="Int NOT NULL")]
		public int iAviatorRole2
		{
			get
			{
				return this._iAviatorRole2;
			}
			set
			{
				if ((this._iAviatorRole2 != value))
				{
					this.OniAviatorRole2Changing(value);
					this.SendPropertyChanging();
					this._iAviatorRole2 = value;
					this.SendPropertyChanged("iAviatorRole2");
					this.OniAviatorRole2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPctCharge2", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPctCharge2
		{
			get
			{
				return this._dPctCharge2;
			}
			set
			{
				if ((this._dPctCharge2 != value))
				{
					this.OndPctCharge2Changing(value);
					this.SendPropertyChanging();
					this._dPctCharge2 = value;
					this.SendPropertyChanged("dPctCharge2");
					this.OndPctCharge2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dReleaseAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dReleaseAltitude
		{
			get
			{
				return this._dReleaseAltitude;
			}
			set
			{
				if ((this._dReleaseAltitude != value))
				{
					this.OndReleaseAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dReleaseAltitude = value;
					this.SendPropertyChanged("dReleaseAltitude");
					this.OndReleaseAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dMaxAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dMaxAltitude
		{
			get
			{
				return this._dMaxAltitude;
			}
			set
			{
				if ((this._dMaxAltitude != value))
				{
					this.OndMaxAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dMaxAltitude = value;
					this.SendPropertyChanged("dMaxAltitude");
					this.OndMaxAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLocTakeOff", DbType="Int NOT NULL")]
		public int iLocTakeOff
		{
			get
			{
				return this._iLocTakeOff;
			}
			set
			{
				if ((this._iLocTakeOff != value))
				{
					this.OniLocTakeOffChanging(value);
					this.SendPropertyChanging();
					this._iLocTakeOff = value;
					this.SendPropertyChanged("iLocTakeOff");
					this.OniLocTakeOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTakeOff", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTakeOff
		{
			get
			{
				return this._DTakeOff;
			}
			set
			{
				if ((this._DTakeOff != value))
				{
					this.OnDTakeOffChanging(value);
					this.SendPropertyChanging();
					this._DTakeOff = value;
					this.SendPropertyChanged("DTakeOff");
					this.OnDTakeOffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLocLanding", DbType="Int NOT NULL")]
		public int iLocLanding
		{
			get
			{
				return this._iLocLanding;
			}
			set
			{
				if ((this._iLocLanding != value))
				{
					this.OniLocLandingChanging(value);
					this.SendPropertyChanging();
					this._iLocLanding = value;
					this.SendPropertyChanged("iLocLanding");
					this.OniLocLandingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLanding", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DLanding
		{
			get
			{
				return this._DLanding;
			}
			set
			{
				if ((this._DLanding != value))
				{
					this.OnDLandingChanging(value);
					this.SendPropertyChanging();
					this._DLanding = value;
					this.SendPropertyChanged("DLanding");
					this.OnDLandingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChargeCode", DbType="Int NOT NULL")]
		public int iChargeCode
		{
			get
			{
				return this._iChargeCode;
			}
			set
			{
				if ((this._iChargeCode != value))
				{
					if (this._CHARGECODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._iChargeCode = value;
					this.SendPropertyChanged("iChargeCode");
					this.OniChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAmtCollected", DbType="Money")]
		public System.Nullable<decimal> mAmtCollected
		{
			get
			{
				return this._mAmtCollected;
			}
			set
			{
				if ((this._mAmtCollected != value))
				{
					this.OnmAmtCollectedChanging(value);
					this.SendPropertyChanging();
					this._mAmtCollected = value;
					this.SendPropertyChanged("mAmtCollected");
					this.OnmAmtCollectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_FLIGHTLOGROW", Storage="_CHARGECODE", ThisKey="iChargeCode", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CHARGECODE CHARGECODE
		{
			get
			{
				return this._CHARGECODE.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE.Entity = null;
						previousValue.FLIGHTLOGROWs.Remove(this);
					}
					this._CHARGECODE.Entity = value;
					if ((value != null))
					{
						value.FLIGHTLOGROWs.Add(this);
						this._iChargeCode = value.ID;
					}
					else
					{
						this._iChargeCode = default(int);
					}
					this.SendPropertyChanged("CHARGECODE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DAILYFLIGHTLOG_FLIGHTLOGROW", Storage="_DAILYFLIGHTLOG", ThisKey="iFliteLog", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public DAILYFLIGHTLOG DAILYFLIGHTLOG
		{
			get
			{
				return this._DAILYFLIGHTLOG.Entity;
			}
			set
			{
				DAILYFLIGHTLOG previousValue = this._DAILYFLIGHTLOG.Entity;
				if (((previousValue != value) 
							|| (this._DAILYFLIGHTLOG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DAILYFLIGHTLOG.Entity = null;
						previousValue.FLIGHTLOGROWs.Remove(this);
					}
					this._DAILYFLIGHTLOG.Entity = value;
					if ((value != null))
					{
						value.FLIGHTLOGROWs.Add(this);
						this._iFliteLog = value.ID;
					}
					else
					{
						this._iFliteLog = default(int);
					}
					this.SendPropertyChanged("DAILYFLIGHTLOG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAUNCHMETHODS")]
	public partial class LAUNCHMETHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sLaunchMethod;
		
		private EntitySet<BRIDGE_LAUNCHMETH_EQUIPROLE> _BRIDGE_LAUNCHMETH_EQUIPROLEs;
		
		private EntitySet<OPERATION> _OPERATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsLaunchMethodChanging(string value);
    partial void OnsLaunchMethodChanged();
    #endregion
		
		public LAUNCHMETHOD()
		{
			this._BRIDGE_LAUNCHMETH_EQUIPROLEs = new EntitySet<BRIDGE_LAUNCHMETH_EQUIPROLE>(new Action<BRIDGE_LAUNCHMETH_EQUIPROLE>(this.attach_BRIDGE_LAUNCHMETH_EQUIPROLEs), new Action<BRIDGE_LAUNCHMETH_EQUIPROLE>(this.detach_BRIDGE_LAUNCHMETH_EQUIPROLEs));
			this._OPERATIONs = new EntitySet<OPERATION>(new Action<OPERATION>(this.attach_OPERATIONs), new Action<OPERATION>(this.detach_OPERATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLaunchMethod", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sLaunchMethod
		{
			get
			{
				return this._sLaunchMethod;
			}
			set
			{
				if ((this._sLaunchMethod != value))
				{
					this.OnsLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._sLaunchMethod = value;
					this.SendPropertyChanged("sLaunchMethod");
					this.OnsLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCHMETHOD_BRIDGE_LAUNCHMETH_EQUIPROLE", Storage="_BRIDGE_LAUNCHMETH_EQUIPROLEs", ThisKey="ID", OtherKey="iLaunchMethod")]
		public EntitySet<BRIDGE_LAUNCHMETH_EQUIPROLE> BRIDGE_LAUNCHMETH_EQUIPROLEs
		{
			get
			{
				return this._BRIDGE_LAUNCHMETH_EQUIPROLEs;
			}
			set
			{
				this._BRIDGE_LAUNCHMETH_EQUIPROLEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCHMETHOD_OPERATION", Storage="_OPERATIONs", ThisKey="ID", OtherKey="iLaunchMethod")]
		public EntitySet<OPERATION> OPERATIONs
		{
			get
			{
				return this._OPERATIONs;
			}
			set
			{
				this._OPERATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BRIDGE_LAUNCHMETH_EQUIPROLEs(BRIDGE_LAUNCHMETH_EQUIPROLE entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCHMETHOD = this;
		}
		
		private void detach_BRIDGE_LAUNCHMETH_EQUIPROLEs(BRIDGE_LAUNCHMETH_EQUIPROLE entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCHMETHOD = null;
		}
		
		private void attach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCHMETHOD = this;
		}
		
		private void detach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCHMETHOD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPDETAILS")]
	public partial class OPDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iEquip;
		
		private int _iOperation;
		
		private int _iEquipmentRole;
		
		private System.Nullable<decimal> _dMaxAltitude;
		
		private System.Nullable<decimal> _dReleaseAltitude;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
		private EntityRef<EQUIPMENT> _EQUIPMENT;
		
		private EntityRef<EQUIPMENTROLE> _EQUIPMENTROLE;
		
		private EntityRef<OPERATION> _OPERATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniEquipChanging(int value);
    partial void OniEquipChanged();
    partial void OniOperationChanging(int value);
    partial void OniOperationChanged();
    partial void OniEquipmentRoleChanging(int value);
    partial void OniEquipmentRoleChanged();
    partial void OndMaxAltitudeChanging(System.Nullable<decimal> value);
    partial void OndMaxAltitudeChanged();
    partial void OndReleaseAltitudeChanging(System.Nullable<decimal> value);
    partial void OndReleaseAltitudeChanged();
    #endregion
		
		public OPDETAIL()
		{
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			this._EQUIPMENT = default(EntityRef<EQUIPMENT>);
			this._EQUIPMENTROLE = default(EntityRef<EQUIPMENTROLE>);
			this._OPERATION = default(EntityRef<OPERATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquip", DbType="Int NOT NULL")]
		public int iEquip
		{
			get
			{
				return this._iEquip;
			}
			set
			{
				if ((this._iEquip != value))
				{
					if (this._EQUIPMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipChanging(value);
					this.SendPropertyChanging();
					this._iEquip = value;
					this.SendPropertyChanged("iEquip");
					this.OniEquipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOperation", DbType="Int NOT NULL")]
		public int iOperation
		{
			get
			{
				return this._iOperation;
			}
			set
			{
				if ((this._iOperation != value))
				{
					if (this._OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOperationChanging(value);
					this.SendPropertyChanging();
					this._iOperation = value;
					this.SendPropertyChanged("iOperation");
					this.OniOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipmentRole", DbType="Int NOT NULL")]
		public int iEquipmentRole
		{
			get
			{
				return this._iEquipmentRole;
			}
			set
			{
				if ((this._iEquipmentRole != value))
				{
					if (this._EQUIPMENTROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipmentRoleChanging(value);
					this.SendPropertyChanging();
					this._iEquipmentRole = value;
					this.SendPropertyChanged("iEquipmentRole");
					this.OniEquipmentRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dMaxAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dMaxAltitude
		{
			get
			{
				return this._dMaxAltitude;
			}
			set
			{
				if ((this._dMaxAltitude != value))
				{
					this.OndMaxAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dMaxAltitude = value;
					this.SendPropertyChanged("dMaxAltitude");
					this.OndMaxAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dReleaseAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dReleaseAltitude
		{
			get
			{
				return this._dReleaseAltitude;
			}
			set
			{
				if ((this._dReleaseAltitude != value))
				{
					this.OndReleaseAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dReleaseAltitude = value;
					this.SendPropertyChanged("dReleaseAltitude");
					this.OndReleaseAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPDETAIL_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iOpDetail")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_OPDETAIL", Storage="_EQUIPMENT", ThisKey="iEquip", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENT EQUIPMENT
		{
			get
			{
				return this._EQUIPMENT.Entity;
			}
			set
			{
				EQUIPMENT previousValue = this._EQUIPMENT.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENT.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._EQUIPMENT.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iEquip = value.ID;
					}
					else
					{
						this._iEquip = default(int);
					}
					this.SendPropertyChanged("EQUIPMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_OPDETAIL", Storage="_EQUIPMENTROLE", ThisKey="iEquipmentRole", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENTROLE EQUIPMENTROLE
		{
			get
			{
				return this._EQUIPMENTROLE.Entity;
			}
			set
			{
				EQUIPMENTROLE previousValue = this._EQUIPMENTROLE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENTROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENTROLE.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._EQUIPMENTROLE.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iEquipmentRole = value.ID;
					}
					else
					{
						this._iEquipmentRole = default(int);
					}
					this.SendPropertyChanged("EQUIPMENTROLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_OPDETAIL", Storage="_OPERATION", ThisKey="iOperation", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPERATION OPERATION
		{
			get
			{
				return this._OPERATION.Entity;
			}
			set
			{
				OPERATION previousValue = this._OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iOperation = value.ID;
					}
					else
					{
						this._iOperation = default(int);
					}
					this.SendPropertyChanged("OPERATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.OPDETAIL = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.OPDETAIL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPMENTROLES")]
	public partial class EQUIPMENTROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sEquipmentRole;
		
		private int _iAvgUseDurationMinutes;
		
		private string _sComment;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
		private EntitySet<EQUIPROLESTYPE> _EQUIPROLESTYPEs;
		
		private EntitySet<BRIDGE_LAUNCHMETH_EQUIPROLE> _BRIDGE_LAUNCHMETH_EQUIPROLEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsEquipmentRoleChanging(string value);
    partial void OnsEquipmentRoleChanged();
    partial void OniAvgUseDurationMinutesChanging(int value);
    partial void OniAvgUseDurationMinutesChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPMENTROLE()
		{
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			this._EQUIPROLESTYPEs = new EntitySet<EQUIPROLESTYPE>(new Action<EQUIPROLESTYPE>(this.attach_EQUIPROLESTYPEs), new Action<EQUIPROLESTYPE>(this.detach_EQUIPROLESTYPEs));
			this._BRIDGE_LAUNCHMETH_EQUIPROLEs = new EntitySet<BRIDGE_LAUNCHMETH_EQUIPROLE>(new Action<BRIDGE_LAUNCHMETH_EQUIPROLE>(this.attach_BRIDGE_LAUNCHMETH_EQUIPROLEs), new Action<BRIDGE_LAUNCHMETH_EQUIPROLE>(this.detach_BRIDGE_LAUNCHMETH_EQUIPROLEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sEquipmentRole", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sEquipmentRole
		{
			get
			{
				return this._sEquipmentRole;
			}
			set
			{
				if ((this._sEquipmentRole != value))
				{
					this.OnsEquipmentRoleChanging(value);
					this.SendPropertyChanging();
					this._sEquipmentRole = value;
					this.SendPropertyChanged("sEquipmentRole");
					this.OnsEquipmentRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAvgUseDurationMinutes", DbType="Int NOT NULL")]
		public int iAvgUseDurationMinutes
		{
			get
			{
				return this._iAvgUseDurationMinutes;
			}
			set
			{
				if ((this._iAvgUseDurationMinutes != value))
				{
					this.OniAvgUseDurationMinutesChanging(value);
					this.SendPropertyChanging();
					this._iAvgUseDurationMinutes = value;
					this.SendPropertyChanged("iAvgUseDurationMinutes");
					this.OniAvgUseDurationMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iEquipmentRole")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_EQUIPROLESTYPE", Storage="_EQUIPROLESTYPEs", ThisKey="ID", OtherKey="iEquipRole")]
		public EntitySet<EQUIPROLESTYPE> EQUIPROLESTYPEs
		{
			get
			{
				return this._EQUIPROLESTYPEs;
			}
			set
			{
				this._EQUIPROLESTYPEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_BRIDGE_LAUNCHMETH_EQUIPROLE", Storage="_BRIDGE_LAUNCHMETH_EQUIPROLEs", ThisKey="ID", OtherKey="iEquipRole")]
		public EntitySet<BRIDGE_LAUNCHMETH_EQUIPROLE> BRIDGE_LAUNCHMETH_EQUIPROLEs
		{
			get
			{
				return this._BRIDGE_LAUNCHMETH_EQUIPROLEs;
			}
			set
			{
				this._BRIDGE_LAUNCHMETH_EQUIPROLEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = null;
		}
		
		private void attach_EQUIPROLESTYPEs(EQUIPROLESTYPE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = this;
		}
		
		private void detach_EQUIPROLESTYPEs(EQUIPROLESTYPE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = null;
		}
		
		private void attach_BRIDGE_LAUNCHMETH_EQUIPROLEs(BRIDGE_LAUNCHMETH_EQUIPROLE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = this;
		}
		
		private void detach_BRIDGE_LAUNCHMETH_EQUIPROLEs(BRIDGE_LAUNCHMETH_EQUIPROLE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVIATORS")]
	public partial class AVIATOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iOpDetail;
		
		private int _iAviatorRole;
		
		private decimal _dPercentCharge;
		
		private bool _b1stFlight;
		
		private System.Nullable<decimal> _mInvoiced;
		
		private System.Nullable<System.DateTimeOffset> _DInvoiced;
		
		private EntityRef<OPDETAIL> _OPDETAIL;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
		private EntityRef<AVIATORROLE> _AVIATORROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniOpDetailChanging(int value);
    partial void OniOpDetailChanged();
    partial void OniAviatorRoleChanging(int value);
    partial void OniAviatorRoleChanged();
    partial void OndPercentChargeChanging(decimal value);
    partial void OndPercentChargeChanged();
    partial void Onb1stFlightChanging(bool value);
    partial void Onb1stFlightChanged();
    partial void OnmInvoicedChanging(System.Nullable<decimal> value);
    partial void OnmInvoicedChanged();
    partial void OnDInvoicedChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDInvoicedChanged();
    #endregion
		
		public AVIATOR()
		{
			this._OPDETAIL = default(EntityRef<OPDETAIL>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			this._AVIATORROLE = default(EntityRef<AVIATORROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOpDetail", DbType="Int NOT NULL")]
		public int iOpDetail
		{
			get
			{
				return this._iOpDetail;
			}
			set
			{
				if ((this._iOpDetail != value))
				{
					if (this._OPDETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOpDetailChanging(value);
					this.SendPropertyChanging();
					this._iOpDetail = value;
					this.SendPropertyChanged("iOpDetail");
					this.OniOpDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole", DbType="Int NOT NULL")]
		public int iAviatorRole
		{
			get
			{
				return this._iAviatorRole;
			}
			set
			{
				if ((this._iAviatorRole != value))
				{
					if (this._AVIATORROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniAviatorRoleChanging(value);
					this.SendPropertyChanging();
					this._iAviatorRole = value;
					this.SendPropertyChanged("iAviatorRole");
					this.OniAviatorRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPercentCharge", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPercentCharge
		{
			get
			{
				return this._dPercentCharge;
			}
			set
			{
				if ((this._dPercentCharge != value))
				{
					this.OndPercentChargeChanging(value);
					this.SendPropertyChanging();
					this._dPercentCharge = value;
					this.SendPropertyChanged("dPercentCharge");
					this.OndPercentChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b1stFlight", DbType="Bit NOT NULL")]
		public bool b1stFlight
		{
			get
			{
				return this._b1stFlight;
			}
			set
			{
				if ((this._b1stFlight != value))
				{
					this.Onb1stFlightChanging(value);
					this.SendPropertyChanging();
					this._b1stFlight = value;
					this.SendPropertyChanged("b1stFlight");
					this.Onb1stFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mInvoiced", DbType="Money")]
		public System.Nullable<decimal> mInvoiced
		{
			get
			{
				return this._mInvoiced;
			}
			set
			{
				if ((this._mInvoiced != value))
				{
					this.OnmInvoicedChanging(value);
					this.SendPropertyChanging();
					this._mInvoiced = value;
					this.SendPropertyChanged("mInvoiced");
					this.OnmInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DInvoiced", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DInvoiced
		{
			get
			{
				return this._DInvoiced;
			}
			set
			{
				if ((this._DInvoiced != value))
				{
					this.OnDInvoicedChanging(value);
					this.SendPropertyChanging();
					this._DInvoiced = value;
					this.SendPropertyChanged("DInvoiced");
					this.OnDInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPDETAIL_AVIATOR", Storage="_OPDETAIL", ThisKey="iOpDetail", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPDETAIL OPDETAIL
		{
			get
			{
				return this._OPDETAIL.Entity;
			}
			set
			{
				OPDETAIL previousValue = this._OPDETAIL.Entity;
				if (((previousValue != value) 
							|| (this._OPDETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPDETAIL.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._OPDETAIL.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iOpDetail = value.ID;
					}
					else
					{
						this._iOpDetail = default(int);
					}
					this.SendPropertyChanged("OPDETAIL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_AVIATOR", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVIATORROLE_AVIATOR", Storage="_AVIATORROLE", ThisKey="iAviatorRole", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AVIATORROLE AVIATORROLE
		{
			get
			{
				return this._AVIATORROLE.Entity;
			}
			set
			{
				AVIATORROLE previousValue = this._AVIATORROLE.Entity;
				if (((previousValue != value) 
							|| (this._AVIATORROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVIATORROLE.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._AVIATORROLE.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iAviatorRole = value.ID;
					}
					else
					{
						this._iAviatorRole = default(int);
					}
					this.SendPropertyChanged("AVIATORROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPTYPES")]
	public partial class EQUIPTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sEquipmentType;
		
		private EntitySet<EQUIPMENT> _EQUIPMENTs;
		
		private EntitySet<EQUIPROLESTYPE> _EQUIPROLESTYPEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsEquipmentTypeChanging(string value);
    partial void OnsEquipmentTypeChanged();
    #endregion
		
		public EQUIPTYPE()
		{
			this._EQUIPMENTs = new EntitySet<EQUIPMENT>(new Action<EQUIPMENT>(this.attach_EQUIPMENTs), new Action<EQUIPMENT>(this.detach_EQUIPMENTs));
			this._EQUIPROLESTYPEs = new EntitySet<EQUIPROLESTYPE>(new Action<EQUIPROLESTYPE>(this.attach_EQUIPROLESTYPEs), new Action<EQUIPROLESTYPE>(this.detach_EQUIPROLESTYPEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sEquipmentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sEquipmentType
		{
			get
			{
				return this._sEquipmentType;
			}
			set
			{
				if ((this._sEquipmentType != value))
				{
					this.OnsEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._sEquipmentType = value;
					this.SendPropertyChanged("sEquipmentType");
					this.OnsEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPMENT", Storage="_EQUIPMENTs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<EQUIPMENT> EQUIPMENTs
		{
			get
			{
				return this._EQUIPMENTs;
			}
			set
			{
				this._EQUIPMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPROLESTYPE", Storage="_EQUIPROLESTYPEs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<EQUIPROLESTYPE> EQUIPROLESTYPEs
		{
			get
			{
				return this._EQUIPROLESTYPEs;
			}
			set
			{
				this._EQUIPROLESTYPEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EQUIPMENTs(EQUIPMENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_EQUIPMENTs(EQUIPMENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
		
		private void attach_EQUIPROLESTYPEs(EQUIPROLESTYPE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_EQUIPROLESTYPEs(EQUIPROLESTYPE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPROLESTYPES")]
	public partial class EQUIPROLESTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iEquipType;
		
		private int _iEquipRole;
		
		private string _sComments;
		
		private EntityRef<EQUIPMENTROLE> _EQUIPMENTROLE;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OniEquipRoleChanging(int value);
    partial void OniEquipRoleChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public EQUIPROLESTYPE()
		{
			this._EQUIPMENTROLE = default(EntityRef<EQUIPMENTROLE>);
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipRole", DbType="Int NOT NULL")]
		public int iEquipRole
		{
			get
			{
				return this._iEquipRole;
			}
			set
			{
				if ((this._iEquipRole != value))
				{
					if (this._EQUIPMENTROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipRoleChanging(value);
					this.SendPropertyChanging();
					this._iEquipRole = value;
					this.SendPropertyChanged("iEquipRole");
					this.OniEquipRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_EQUIPROLESTYPE", Storage="_EQUIPMENTROLE", ThisKey="iEquipRole", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENTROLE EQUIPMENTROLE
		{
			get
			{
				return this._EQUIPMENTROLE.Entity;
			}
			set
			{
				EQUIPMENTROLE previousValue = this._EQUIPMENTROLE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENTROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENTROLE.Entity = null;
						previousValue.EQUIPROLESTYPEs.Remove(this);
					}
					this._EQUIPMENTROLE.Entity = value;
					if ((value != null))
					{
						value.EQUIPROLESTYPEs.Add(this);
						this._iEquipRole = value.ID;
					}
					else
					{
						this._iEquipRole = default(int);
					}
					this.SendPropertyChanged("EQUIPMENTROLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPROLESTYPE", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.EQUIPROLESTYPEs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.EQUIPROLESTYPEs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRIDGE_LAUNCHMETH_EQUIPROLE")]
	public partial class BRIDGE_LAUNCHMETH_EQUIPROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iLaunchMethod;
		
		private int _iEquipRole;
		
		private string _sComment;
		
		private EntityRef<EQUIPMENTROLE> _EQUIPMENTROLE;
		
		private EntityRef<LAUNCHMETHOD> _LAUNCHMETHOD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OniEquipRoleChanging(int value);
    partial void OniEquipRoleChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public BRIDGE_LAUNCHMETH_EQUIPROLE()
		{
			this._EQUIPMENTROLE = default(EntityRef<EQUIPMENTROLE>);
			this._LAUNCHMETHOD = default(EntityRef<LAUNCHMETHOD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					if (this._LAUNCHMETHOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipRole", DbType="Int NOT NULL")]
		public int iEquipRole
		{
			get
			{
				return this._iEquipRole;
			}
			set
			{
				if ((this._iEquipRole != value))
				{
					if (this._EQUIPMENTROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipRoleChanging(value);
					this.SendPropertyChanging();
					this._iEquipRole = value;
					this.SendPropertyChanged("iEquipRole");
					this.OniEquipRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_BRIDGE_LAUNCHMETH_EQUIPROLE", Storage="_EQUIPMENTROLE", ThisKey="iEquipRole", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENTROLE EQUIPMENTROLE
		{
			get
			{
				return this._EQUIPMENTROLE.Entity;
			}
			set
			{
				EQUIPMENTROLE previousValue = this._EQUIPMENTROLE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENTROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENTROLE.Entity = null;
						previousValue.BRIDGE_LAUNCHMETH_EQUIPROLEs.Remove(this);
					}
					this._EQUIPMENTROLE.Entity = value;
					if ((value != null))
					{
						value.BRIDGE_LAUNCHMETH_EQUIPROLEs.Add(this);
						this._iEquipRole = value.ID;
					}
					else
					{
						this._iEquipRole = default(int);
					}
					this.SendPropertyChanged("EQUIPMENTROLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCHMETHOD_BRIDGE_LAUNCHMETH_EQUIPROLE", Storage="_LAUNCHMETHOD", ThisKey="iLaunchMethod", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LAUNCHMETHOD LAUNCHMETHOD
		{
			get
			{
				return this._LAUNCHMETHOD.Entity;
			}
			set
			{
				LAUNCHMETHOD previousValue = this._LAUNCHMETHOD.Entity;
				if (((previousValue != value) 
							|| (this._LAUNCHMETHOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAUNCHMETHOD.Entity = null;
						previousValue.BRIDGE_LAUNCHMETH_EQUIPROLEs.Remove(this);
					}
					this._LAUNCHMETHOD.Entity = value;
					if ((value != null))
					{
						value.BRIDGE_LAUNCHMETH_EQUIPROLEs.Add(this);
						this._iLaunchMethod = value.ID;
					}
					else
					{
						this._iLaunchMethod = default(int);
					}
					this.SendPropertyChanged("LAUNCHMETHOD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_FlightLogsYearMonth")]
	public partial class TNPV_FlightLogsYearMonth
	{
		
		private string _YearMonth;
		
		private System.Nullable<int> _FlightLogCount;
		
		public TNPV_FlightLogsYearMonth()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearMonth", DbType="NVarChar(7)")]
		public string YearMonth
		{
			get
			{
				return this._YearMonth;
			}
			set
			{
				if ((this._YearMonth != value))
				{
					this._YearMonth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlightLogCount", DbType="Int")]
		public System.Nullable<int> FlightLogCount
		{
			get
			{
				return this._FlightLogCount;
			}
			set
			{
				if ((this._FlightLogCount != value))
				{
					this._FlightLogCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATIONS")]
	public partial class OPERATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iLaunchMethod;
		
		private int _iTakeoffLoc;
		
		private System.Nullable<System.DateTime> _DBegin;
		
		private int _iLandingLoc;
		
		private System.Nullable<System.DateTime> _DEnd;
		
		private string _sComment;
		
		private int _iChargeCode;
		
		private int _iInvoices2go;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
		private EntitySet<SPECIALOP> _SPECIALOPs;
		
		private EntityRef<CHARGECODE> _CHARGECODE;
		
		private EntityRef<LAUNCHMETHOD> _LAUNCHMETHOD;
		
		private EntityRef<LOCATION> _LOCATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OniTakeoffLocChanging(int value);
    partial void OniTakeoffLocChanged();
    partial void OnDBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDBeginChanged();
    partial void OniLandingLocChanging(int value);
    partial void OniLandingLocChanged();
    partial void OnDEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDEndChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniChargeCodeChanging(int value);
    partial void OniChargeCodeChanged();
    partial void OniInvoices2goChanging(int value);
    partial void OniInvoices2goChanged();
    #endregion
		
		public OPERATION()
		{
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			this._SPECIALOPs = new EntitySet<SPECIALOP>(new Action<SPECIALOP>(this.attach_SPECIALOPs), new Action<SPECIALOP>(this.detach_SPECIALOPs));
			this._CHARGECODE = default(EntityRef<CHARGECODE>);
			this._LAUNCHMETHOD = default(EntityRef<LAUNCHMETHOD>);
			this._LOCATION = default(EntityRef<LOCATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					if (this._LAUNCHMETHOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTakeoffLoc", DbType="Int NOT NULL")]
		public int iTakeoffLoc
		{
			get
			{
				return this._iTakeoffLoc;
			}
			set
			{
				if ((this._iTakeoffLoc != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniTakeoffLocChanging(value);
					this.SendPropertyChanging();
					this._iTakeoffLoc = value;
					this.SendPropertyChanged("iTakeoffLoc");
					this.OniTakeoffLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this.OnDBeginChanging(value);
					this.SendPropertyChanging();
					this._DBegin = value;
					this.SendPropertyChanged("DBegin");
					this.OnDBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLandingLoc", DbType="Int NOT NULL")]
		public int iLandingLoc
		{
			get
			{
				return this._iLandingLoc;
			}
			set
			{
				if ((this._iLandingLoc != value))
				{
					this.OniLandingLocChanging(value);
					this.SendPropertyChanging();
					this._iLandingLoc = value;
					this.SendPropertyChanged("iLandingLoc");
					this.OniLandingLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this.OnDEndChanging(value);
					this.SendPropertyChanging();
					this._DEnd = value;
					this.SendPropertyChanged("DEnd");
					this.OnDEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="VarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChargeCode", DbType="Int NOT NULL")]
		public int iChargeCode
		{
			get
			{
				return this._iChargeCode;
			}
			set
			{
				if ((this._iChargeCode != value))
				{
					if (this._CHARGECODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._iChargeCode = value;
					this.SendPropertyChanged("iChargeCode");
					this.OniChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iInvoices2go", DbType="Int NOT NULL")]
		public int iInvoices2go
		{
			get
			{
				return this._iInvoices2go;
			}
			set
			{
				if ((this._iInvoices2go != value))
				{
					this.OniInvoices2goChanging(value);
					this.SendPropertyChanging();
					this._iInvoices2go = value;
					this.SendPropertyChanged("iInvoices2go");
					this.OniInvoices2goChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iOperation")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_SPECIALOP", Storage="_SPECIALOPs", ThisKey="ID", OtherKey="iOperation")]
		public EntitySet<SPECIALOP> SPECIALOPs
		{
			get
			{
				return this._SPECIALOPs;
			}
			set
			{
				this._SPECIALOPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_OPERATION", Storage="_CHARGECODE", ThisKey="iChargeCode", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CHARGECODE CHARGECODE
		{
			get
			{
				return this._CHARGECODE.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE.Entity = null;
						previousValue.OPERATIONs.Remove(this);
					}
					this._CHARGECODE.Entity = value;
					if ((value != null))
					{
						value.OPERATIONs.Add(this);
						this._iChargeCode = value.ID;
					}
					else
					{
						this._iChargeCode = default(int);
					}
					this.SendPropertyChanged("CHARGECODE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCHMETHOD_OPERATION", Storage="_LAUNCHMETHOD", ThisKey="iLaunchMethod", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LAUNCHMETHOD LAUNCHMETHOD
		{
			get
			{
				return this._LAUNCHMETHOD.Entity;
			}
			set
			{
				LAUNCHMETHOD previousValue = this._LAUNCHMETHOD.Entity;
				if (((previousValue != value) 
							|| (this._LAUNCHMETHOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAUNCHMETHOD.Entity = null;
						previousValue.OPERATIONs.Remove(this);
					}
					this._LAUNCHMETHOD.Entity = value;
					if ((value != null))
					{
						value.OPERATIONs.Add(this);
						this._iLaunchMethod = value.ID;
					}
					else
					{
						this._iLaunchMethod = default(int);
					}
					this.SendPropertyChanged("LAUNCHMETHOD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_OPERATION", Storage="_LOCATION", ThisKey="iTakeoffLoc", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.OPERATIONs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.OPERATIONs.Add(this);
						this._iTakeoffLoc = value.ID;
					}
					else
					{
						this._iTakeoffLoc = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = null;
		}
		
		private void attach_SPECIALOPs(SPECIALOP entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = this;
		}
		
		private void detach_SPECIALOPs(SPECIALOP entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPECIALOPS")]
	public partial class SPECIALOP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iOperation;
		
		private int _iSpecialOpType;
		
		private string _sDescription;
		
		private System.Nullable<int> _iDurationMinutes;
		
		private EntityRef<OPERATION> _OPERATION;
		
		private EntityRef<SPECIALOPTYPE> _SPECIALOPTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniOperationChanging(int value);
    partial void OniOperationChanged();
    partial void OniSpecialOpTypeChanging(int value);
    partial void OniSpecialOpTypeChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OniDurationMinutesChanging(System.Nullable<int> value);
    partial void OniDurationMinutesChanged();
    #endregion
		
		public SPECIALOP()
		{
			this._OPERATION = default(EntityRef<OPERATION>);
			this._SPECIALOPTYPE = default(EntityRef<SPECIALOPTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOperation", DbType="Int NOT NULL")]
		public int iOperation
		{
			get
			{
				return this._iOperation;
			}
			set
			{
				if ((this._iOperation != value))
				{
					if (this._OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOperationChanging(value);
					this.SendPropertyChanging();
					this._iOperation = value;
					this.SendPropertyChanged("iOperation");
					this.OniOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSpecialOpType", DbType="Int NOT NULL")]
		public int iSpecialOpType
		{
			get
			{
				return this._iSpecialOpType;
			}
			set
			{
				if ((this._iSpecialOpType != value))
				{
					if (this._SPECIALOPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSpecialOpTypeChanging(value);
					this.SendPropertyChanging();
					this._iSpecialOpType = value;
					this.SendPropertyChanged("iSpecialOpType");
					this.OniSpecialOpTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDurationMinutes", DbType="Int")]
		public System.Nullable<int> iDurationMinutes
		{
			get
			{
				return this._iDurationMinutes;
			}
			set
			{
				if ((this._iDurationMinutes != value))
				{
					this.OniDurationMinutesChanging(value);
					this.SendPropertyChanging();
					this._iDurationMinutes = value;
					this.SendPropertyChanged("iDurationMinutes");
					this.OniDurationMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_SPECIALOP", Storage="_OPERATION", ThisKey="iOperation", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPERATION OPERATION
		{
			get
			{
				return this._OPERATION.Entity;
			}
			set
			{
				OPERATION previousValue = this._OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION.Entity = null;
						previousValue.SPECIALOPs.Remove(this);
					}
					this._OPERATION.Entity = value;
					if ((value != null))
					{
						value.SPECIALOPs.Add(this);
						this._iOperation = value.ID;
					}
					else
					{
						this._iOperation = default(int);
					}
					this.SendPropertyChanged("OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPECIALOPTYPE_SPECIALOP", Storage="_SPECIALOPTYPE", ThisKey="iSpecialOpType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SPECIALOPTYPE SPECIALOPTYPE
		{
			get
			{
				return this._SPECIALOPTYPE.Entity;
			}
			set
			{
				SPECIALOPTYPE previousValue = this._SPECIALOPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._SPECIALOPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SPECIALOPTYPE.Entity = null;
						previousValue.SPECIALOPs.Remove(this);
					}
					this._SPECIALOPTYPE.Entity = value;
					if ((value != null))
					{
						value.SPECIALOPs.Add(this);
						this._iSpecialOpType = value.ID;
					}
					else
					{
						this._iSpecialOpType = default(int);
					}
					this.SendPropertyChanged("SPECIALOPTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SPECIALOPTYPES")]
	public partial class SPECIALOPTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sSpecialOpType;
		
		private EntitySet<SPECIALOP> _SPECIALOPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsSpecialOpTypeChanging(string value);
    partial void OnsSpecialOpTypeChanged();
    #endregion
		
		public SPECIALOPTYPE()
		{
			this._SPECIALOPs = new EntitySet<SPECIALOP>(new Action<SPECIALOP>(this.attach_SPECIALOPs), new Action<SPECIALOP>(this.detach_SPECIALOPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSpecialOpType", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string sSpecialOpType
		{
			get
			{
				return this._sSpecialOpType;
			}
			set
			{
				if ((this._sSpecialOpType != value))
				{
					this.OnsSpecialOpTypeChanging(value);
					this.SendPropertyChanging();
					this._sSpecialOpType = value;
					this.SendPropertyChanged("sSpecialOpType");
					this.OnsSpecialOpTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SPECIALOPTYPE_SPECIALOP", Storage="_SPECIALOPs", ThisKey="ID", OtherKey="iSpecialOpType")]
		public EntitySet<SPECIALOP> SPECIALOPs
		{
			get
			{
				return this._SPECIALOPs;
			}
			set
			{
				this._SPECIALOPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SPECIALOPs(SPECIALOP entity)
		{
			this.SendPropertyChanging();
			entity.SPECIALOPTYPE = this;
		}
		
		private void detach_SPECIALOPs(SPECIALOP entity)
		{
			this.SendPropertyChanging();
			entity.SPECIALOPTYPE = null;
		}
	}
	
	public partial class sp_PeopleWhoCanTowResult
	{
		
		private int _ID;
		
		private string _sDisplayName;
		
		public sp_PeopleWhoCanTowResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
	}
	
	public partial class sp_FlightLogRowsResult
	{
		
		private int _ID;
		
		private int _iFliteLog;
		
		private char _cStatus;
		
		private int _iTowEquip;
		
		private string _sTowEquipName;
		
		private int _iTowOperator;
		
		private string _sTowOperName;
		
		private int _iGlider;
		
		private string _sGliderName;
		
		private int _iLaunchMethod;
		
		private string _sLaunchMethod;
		
		private int _iPilot1;
		
		private string _sPilot1;
		
		private int _iAviatorRole1;
		
		private string _sAviatorRole1;
		
		private decimal _dPctCharge1;
		
		private int _iPilot2;
		
		private string _sPilot2;
		
		private int _iAviatorRole2;
		
		private string _sAviatorRole2;
		
		private decimal _dPctCharge2;
		
		private System.Nullable<decimal> _dReleaseAltitude;
		
		private System.Nullable<decimal> _dMaxAltitude;
		
		private int _iLocTakeOff;
		
		private string _sLocTakeOff;
		
		private System.DateTimeOffset _DTakeOff;
		
		private int _iLocLanding;
		
		private string _sLocLanding;
		
		private System.DateTimeOffset _DLanding;
		
		private int _iChargeCode;
		
		private char _cChargeCode;
		
		private string _sChargeCode;
		
		private System.Nullable<decimal> _mAmtCollected;
		
		private string _sComments;
		
		public sp_FlightLogRowsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFliteLog", DbType="Int NOT NULL")]
		public int iFliteLog
		{
			get
			{
				return this._iFliteLog;
			}
			set
			{
				if ((this._iFliteLog != value))
				{
					this._iFliteLog = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cStatus", DbType="NChar(1) NOT NULL")]
		public char cStatus
		{
			get
			{
				return this._cStatus;
			}
			set
			{
				if ((this._cStatus != value))
				{
					this._cStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTowEquip", DbType="Int NOT NULL")]
		public int iTowEquip
		{
			get
			{
				return this._iTowEquip;
			}
			set
			{
				if ((this._iTowEquip != value))
				{
					this._iTowEquip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTowEquipName", DbType="VarChar(25)")]
		public string sTowEquipName
		{
			get
			{
				return this._sTowEquipName;
			}
			set
			{
				if ((this._sTowEquipName != value))
				{
					this._sTowEquipName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTowOperator", DbType="Int NOT NULL")]
		public int iTowOperator
		{
			get
			{
				return this._iTowOperator;
			}
			set
			{
				if ((this._iTowOperator != value))
				{
					this._iTowOperator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTowOperName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sTowOperName
		{
			get
			{
				return this._sTowOperName;
			}
			set
			{
				if ((this._sTowOperName != value))
				{
					this._sTowOperName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGlider", DbType="Int NOT NULL")]
		public int iGlider
		{
			get
			{
				return this._iGlider;
			}
			set
			{
				if ((this._iGlider != value))
				{
					this._iGlider = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sGliderName", DbType="VarChar(25)")]
		public string sGliderName
		{
			get
			{
				return this._sGliderName;
			}
			set
			{
				if ((this._sGliderName != value))
				{
					this._sGliderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this._iLaunchMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLaunchMethod", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sLaunchMethod
		{
			get
			{
				return this._sLaunchMethod;
			}
			set
			{
				if ((this._sLaunchMethod != value))
				{
					this._sLaunchMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPilot1", DbType="Int NOT NULL")]
		public int iPilot1
		{
			get
			{
				return this._iPilot1;
			}
			set
			{
				if ((this._iPilot1 != value))
				{
					this._iPilot1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPilot1", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sPilot1
		{
			get
			{
				return this._sPilot1;
			}
			set
			{
				if ((this._sPilot1 != value))
				{
					this._sPilot1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole1", DbType="Int NOT NULL")]
		public int iAviatorRole1
		{
			get
			{
				return this._iAviatorRole1;
			}
			set
			{
				if ((this._iAviatorRole1 != value))
				{
					this._iAviatorRole1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAviatorRole1", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sAviatorRole1
		{
			get
			{
				return this._sAviatorRole1;
			}
			set
			{
				if ((this._sAviatorRole1 != value))
				{
					this._sAviatorRole1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPctCharge1", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPctCharge1
		{
			get
			{
				return this._dPctCharge1;
			}
			set
			{
				if ((this._dPctCharge1 != value))
				{
					this._dPctCharge1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPilot2", DbType="Int NOT NULL")]
		public int iPilot2
		{
			get
			{
				return this._iPilot2;
			}
			set
			{
				if ((this._iPilot2 != value))
				{
					this._iPilot2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPilot2", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sPilot2
		{
			get
			{
				return this._sPilot2;
			}
			set
			{
				if ((this._sPilot2 != value))
				{
					this._sPilot2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole2", DbType="Int NOT NULL")]
		public int iAviatorRole2
		{
			get
			{
				return this._iAviatorRole2;
			}
			set
			{
				if ((this._iAviatorRole2 != value))
				{
					this._iAviatorRole2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAviatorRole2", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sAviatorRole2
		{
			get
			{
				return this._sAviatorRole2;
			}
			set
			{
				if ((this._sAviatorRole2 != value))
				{
					this._sAviatorRole2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPctCharge2", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPctCharge2
		{
			get
			{
				return this._dPctCharge2;
			}
			set
			{
				if ((this._dPctCharge2 != value))
				{
					this._dPctCharge2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dReleaseAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dReleaseAltitude
		{
			get
			{
				return this._dReleaseAltitude;
			}
			set
			{
				if ((this._dReleaseAltitude != value))
				{
					this._dReleaseAltitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dMaxAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dMaxAltitude
		{
			get
			{
				return this._dMaxAltitude;
			}
			set
			{
				if ((this._dMaxAltitude != value))
				{
					this._dMaxAltitude = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLocTakeOff", DbType="Int NOT NULL")]
		public int iLocTakeOff
		{
			get
			{
				return this._iLocTakeOff;
			}
			set
			{
				if ((this._iLocTakeOff != value))
				{
					this._iLocTakeOff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLocTakeOff", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sLocTakeOff
		{
			get
			{
				return this._sLocTakeOff;
			}
			set
			{
				if ((this._sLocTakeOff != value))
				{
					this._sLocTakeOff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTakeOff", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTakeOff
		{
			get
			{
				return this._DTakeOff;
			}
			set
			{
				if ((this._DTakeOff != value))
				{
					this._DTakeOff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLocLanding", DbType="Int NOT NULL")]
		public int iLocLanding
		{
			get
			{
				return this._iLocLanding;
			}
			set
			{
				if ((this._iLocLanding != value))
				{
					this._iLocLanding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLocLanding", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sLocLanding
		{
			get
			{
				return this._sLocLanding;
			}
			set
			{
				if ((this._sLocLanding != value))
				{
					this._sLocLanding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLanding", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DLanding
		{
			get
			{
				return this._DLanding;
			}
			set
			{
				if ((this._DLanding != value))
				{
					this._DLanding = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChargeCode", DbType="Int NOT NULL")]
		public int iChargeCode
		{
			get
			{
				return this._iChargeCode;
			}
			set
			{
				if ((this._iChargeCode != value))
				{
					this._iChargeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cChargeCode", DbType="Char(1) NOT NULL")]
		public char cChargeCode
		{
			get
			{
				return this._cChargeCode;
			}
			set
			{
				if ((this._cChargeCode != value))
				{
					this._cChargeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sChargeCode
		{
			get
			{
				return this._sChargeCode;
			}
			set
			{
				if ((this._sChargeCode != value))
				{
					this._sChargeCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAmtCollected", DbType="Money")]
		public System.Nullable<decimal> mAmtCollected
		{
			get
			{
				return this._mAmtCollected;
			}
			set
			{
				if ((this._mAmtCollected != value))
				{
					this._mAmtCollected = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this._sComments = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
