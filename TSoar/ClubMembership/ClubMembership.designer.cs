#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.ClubMembership
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class ClubMembershipDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMEMBERFROMTO(MEMBERFROMTO instance);
    partial void UpdateMEMBERFROMTO(MEMBERFROMTO instance);
    partial void DeleteMEMBERFROMTO(MEMBERFROMTO instance);
    partial void InsertMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void UpdateMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void DeleteMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void InsertSSA_MEMBERFROMTO(SSA_MEMBERFROMTO instance);
    partial void UpdateSSA_MEMBERFROMTO(SSA_MEMBERFROMTO instance);
    partial void DeleteSSA_MEMBERFROMTO(SSA_MEMBERFROMTO instance);
    partial void InsertSSA_MEMBERCATEGORy(SSA_MEMBERCATEGORy instance);
    partial void UpdateSSA_MEMBERCATEGORy(SSA_MEMBERCATEGORy instance);
    partial void DeleteSSA_MEMBERCATEGORy(SSA_MEMBERCATEGORy instance);
    partial void InsertEQUITYSHARE(EQUITYSHARE instance);
    partial void UpdateEQUITYSHARE(EQUITYSHARE instance);
    partial void DeleteEQUITYSHARE(EQUITYSHARE instance);
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    #endregion
		
		public ClubMembershipDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ClubMembershipDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClubMembershipDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClubMembershipDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ClubMembershipDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this.GetTable<MEMBERFROMTO>();
			}
		}
		
		public System.Data.Linq.Table<MEMBERSHIPCATEGORy> MEMBERSHIPCATEGORies
		{
			get
			{
				return this.GetTable<MEMBERSHIPCATEGORy>();
			}
		}
		
		public System.Data.Linq.Table<SSA_MEMBERFROMTO> SSA_MEMBERFROMTOs
		{
			get
			{
				return this.GetTable<SSA_MEMBERFROMTO>();
			}
		}
		
		public System.Data.Linq.Table<SSA_MEMBERCATEGORy> SSA_MEMBERCATEGORies
		{
			get
			{
				return this.GetTable<SSA_MEMBERCATEGORy>();
			}
		}
		
		public System.Data.Linq.Table<EQUITYSHARE> EQUITYSHAREs
		{
			get
			{
				return this.GetTable<EQUITYSHARE>();
			}
		}
		
		public System.Data.Linq.Table<TNPV_EquityShare> TNPV_EquityShares
		{
			get
			{
				return this.GetTable<TNPV_EquityShare>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERFROMTO")]
	public partial class MEMBERFROMTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iMemberCategory;
		
		private System.DateTimeOffset _DMembershipBegin;
		
		private System.DateTimeOffset _DMembershipEnd;
		
		private string _sAdditionalInfo;
		
		private EntityRef<MEMBERSHIPCATEGORy> _MEMBERSHIPCATEGORy;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniMemberCategoryChanging(int value);
    partial void OniMemberCategoryChanged();
    partial void OnDMembershipBeginChanging(System.DateTimeOffset value);
    partial void OnDMembershipBeginChanged();
    partial void OnDMembershipEndChanging(System.DateTimeOffset value);
    partial void OnDMembershipEndChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public MEMBERFROMTO()
		{
			this._MEMBERSHIPCATEGORy = default(EntityRef<MEMBERSHIPCATEGORy>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMemberCategory", DbType="Int NOT NULL")]
		public int iMemberCategory
		{
			get
			{
				return this._iMemberCategory;
			}
			set
			{
				if ((this._iMemberCategory != value))
				{
					if (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._iMemberCategory = value;
					this.SendPropertyChanged("iMemberCategory");
					this.OniMemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipBegin
		{
			get
			{
				return this._DMembershipBegin;
			}
			set
			{
				if ((this._DMembershipBegin != value))
				{
					this.OnDMembershipBeginChanging(value);
					this.SendPropertyChanging();
					this._DMembershipBegin = value;
					this.SendPropertyChanged("DMembershipBegin");
					this.OnDMembershipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipEnd
		{
			get
			{
				return this._DMembershipEnd;
			}
			set
			{
				if ((this._DMembershipEnd != value))
				{
					this.OnDMembershipEndChanging(value);
					this.SendPropertyChanging();
					this._DMembershipEnd = value;
					this.SendPropertyChanged("DMembershipEnd");
					this.OnDMembershipEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="VarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MEMBERFROMTO", Storage="_MEMBERSHIPCATEGORy", ThisKey="iMemberCategory", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEMBERSHIPCATEGORy MEMBERSHIPCATEGORy
		{
			get
			{
				return this._MEMBERSHIPCATEGORy.Entity;
			}
			set
			{
				MEMBERSHIPCATEGORy previousValue = this._MEMBERSHIPCATEGORy.Entity;
				if (((previousValue != value) 
							|| (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEMBERSHIPCATEGORy.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._MEMBERSHIPCATEGORy.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iMemberCategory = value.ID;
					}
					else
					{
						this._iMemberCategory = default(int);
					}
					this.SendPropertyChanged("MEMBERSHIPCATEGORy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERSHIPCATEGORIES")]
	public partial class MEMBERSHIPCATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sMembershipCategory;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsMembershipCategoryChanging(string value);
    partial void OnsMembershipCategoryChanged();
    #endregion
		
		public MEMBERSHIPCATEGORy()
		{
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMembershipCategory", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sMembershipCategory
		{
			get
			{
				return this._sMembershipCategory;
			}
			set
			{
				if ((this._sMembershipCategory != value))
				{
					this.OnsMembershipCategoryChanging(value);
					this.SendPropertyChanging();
					this._sMembershipCategory = value;
					this.SendPropertyChanged("sMembershipCategory");
					this.OnsMembershipCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iMemberCategory")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSA_MEMBERFROMTO")]
	public partial class SSA_MEMBERFROMTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iSSA_ID;
		
		private int _iSSA_MemberCategory;
		
		private System.DateTimeOffset _DMembershipBegin;
		
		private System.Nullable<System.DateTimeOffset> _DMembershipEnd;
		
		private System.Nullable<System.DateTimeOffset> _DMembershipExpires;
		
		private bool _bRenewsWithChapter;
		
		private string _sChapterAffiliation;
		
		private string _sAdditionalInfo;
		
		private EntityRef<SSA_MEMBERCATEGORy> _SSA_MEMBERCATEGORy;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniSSA_IDChanging(int value);
    partial void OniSSA_IDChanged();
    partial void OniSSA_MemberCategoryChanging(int value);
    partial void OniSSA_MemberCategoryChanged();
    partial void OnDMembershipBeginChanging(System.DateTimeOffset value);
    partial void OnDMembershipBeginChanged();
    partial void OnDMembershipEndChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDMembershipEndChanged();
    partial void OnDMembershipExpiresChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDMembershipExpiresChanged();
    partial void OnbRenewsWithChapterChanging(bool value);
    partial void OnbRenewsWithChapterChanged();
    partial void OnsChapterAffiliationChanging(string value);
    partial void OnsChapterAffiliationChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public SSA_MEMBERFROMTO()
		{
			this._SSA_MEMBERCATEGORy = default(EntityRef<SSA_MEMBERCATEGORy>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSSA_ID", DbType="Int NOT NULL")]
		public int iSSA_ID
		{
			get
			{
				return this._iSSA_ID;
			}
			set
			{
				if ((this._iSSA_ID != value))
				{
					this.OniSSA_IDChanging(value);
					this.SendPropertyChanging();
					this._iSSA_ID = value;
					this.SendPropertyChanged("iSSA_ID");
					this.OniSSA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSSA_MemberCategory", DbType="Int NOT NULL")]
		public int iSSA_MemberCategory
		{
			get
			{
				return this._iSSA_MemberCategory;
			}
			set
			{
				if ((this._iSSA_MemberCategory != value))
				{
					if (this._SSA_MEMBERCATEGORy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSSA_MemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._iSSA_MemberCategory = value;
					this.SendPropertyChanged("iSSA_MemberCategory");
					this.OniSSA_MemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipBegin
		{
			get
			{
				return this._DMembershipBegin;
			}
			set
			{
				if ((this._DMembershipBegin != value))
				{
					this.OnDMembershipBeginChanging(value);
					this.SendPropertyChanging();
					this._DMembershipBegin = value;
					this.SendPropertyChanged("DMembershipBegin");
					this.OnDMembershipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipEnd", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DMembershipEnd
		{
			get
			{
				return this._DMembershipEnd;
			}
			set
			{
				if ((this._DMembershipEnd != value))
				{
					this.OnDMembershipEndChanging(value);
					this.SendPropertyChanging();
					this._DMembershipEnd = value;
					this.SendPropertyChanged("DMembershipEnd");
					this.OnDMembershipEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipExpires", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DMembershipExpires
		{
			get
			{
				return this._DMembershipExpires;
			}
			set
			{
				if ((this._DMembershipExpires != value))
				{
					this.OnDMembershipExpiresChanging(value);
					this.SendPropertyChanging();
					this._DMembershipExpires = value;
					this.SendPropertyChanged("DMembershipExpires");
					this.OnDMembershipExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bRenewsWithChapter", DbType="Bit NOT NULL")]
		public bool bRenewsWithChapter
		{
			get
			{
				return this._bRenewsWithChapter;
			}
			set
			{
				if ((this._bRenewsWithChapter != value))
				{
					this.OnbRenewsWithChapterChanging(value);
					this.SendPropertyChanging();
					this._bRenewsWithChapter = value;
					this.SendPropertyChanged("bRenewsWithChapter");
					this.OnbRenewsWithChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChapterAffiliation", DbType="NVarChar(50)")]
		public string sChapterAffiliation
		{
			get
			{
				return this._sChapterAffiliation;
			}
			set
			{
				if ((this._sChapterAffiliation != value))
				{
					this.OnsChapterAffiliationChanging(value);
					this.SendPropertyChanging();
					this._sChapterAffiliation = value;
					this.SendPropertyChanged("sChapterAffiliation");
					this.OnsChapterAffiliationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSA_MEMBERCATEGORy_SSA_MEMBERFROMTO", Storage="_SSA_MEMBERCATEGORy", ThisKey="iSSA_MemberCategory", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSA_MEMBERCATEGORy SSA_MEMBERCATEGORy
		{
			get
			{
				return this._SSA_MEMBERCATEGORy.Entity;
			}
			set
			{
				SSA_MEMBERCATEGORy previousValue = this._SSA_MEMBERCATEGORy.Entity;
				if (((previousValue != value) 
							|| (this._SSA_MEMBERCATEGORy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSA_MEMBERCATEGORy.Entity = null;
						previousValue.SSA_MEMBERFROMTOs.Remove(this);
					}
					this._SSA_MEMBERCATEGORy.Entity = value;
					if ((value != null))
					{
						value.SSA_MEMBERFROMTOs.Add(this);
						this._iSSA_MemberCategory = value.ID;
					}
					else
					{
						this._iSSA_MemberCategory = default(int);
					}
					this.SendPropertyChanged("SSA_MEMBERCATEGORy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_SSA_MEMBERFROMTO", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.SSA_MEMBERFROMTOs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.SSA_MEMBERFROMTOs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSA_MEMBERCATEGORIES")]
	public partial class SSA_MEMBERCATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sSSA_MemberCategory;
		
		private EntitySet<SSA_MEMBERFROMTO> _SSA_MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsSSA_MemberCategoryChanging(string value);
    partial void OnsSSA_MemberCategoryChanged();
    #endregion
		
		public SSA_MEMBERCATEGORy()
		{
			this._SSA_MEMBERFROMTOs = new EntitySet<SSA_MEMBERFROMTO>(new Action<SSA_MEMBERFROMTO>(this.attach_SSA_MEMBERFROMTOs), new Action<SSA_MEMBERFROMTO>(this.detach_SSA_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSSA_MemberCategory", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sSSA_MemberCategory
		{
			get
			{
				return this._sSSA_MemberCategory;
			}
			set
			{
				if ((this._sSSA_MemberCategory != value))
				{
					this.OnsSSA_MemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._sSSA_MemberCategory = value;
					this.SendPropertyChanged("sSSA_MemberCategory");
					this.OnsSSA_MemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSA_MEMBERCATEGORy_SSA_MEMBERFROMTO", Storage="_SSA_MEMBERFROMTOs", ThisKey="ID", OtherKey="iSSA_MemberCategory")]
		public EntitySet<SSA_MEMBERFROMTO> SSA_MEMBERFROMTOs
		{
			get
			{
				return this._SSA_MEMBERFROMTOs;
			}
			set
			{
				this._SSA_MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.SSA_MEMBERCATEGORy = this;
		}
		
		private void detach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.SSA_MEMBERCATEGORy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUITYSHARES")]
	public partial class EQUITYSHARE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iOwner;
		
		private System.DateTime _DXaction;
		
		private char _cDateQuality;
		
		private decimal _dNumShares;
		
		private char _cXactType;
		
		private string _sInfoSource;
		
		private string _sComment;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniOwnerChanging(int value);
    partial void OniOwnerChanged();
    partial void OnDXactionChanging(System.DateTime value);
    partial void OnDXactionChanged();
    partial void OncDateQualityChanging(char value);
    partial void OncDateQualityChanged();
    partial void OndNumSharesChanging(decimal value);
    partial void OndNumSharesChanged();
    partial void OncXactTypeChanging(char value);
    partial void OncXactTypeChanged();
    partial void OnsInfoSourceChanging(string value);
    partial void OnsInfoSourceChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUITYSHARE()
		{
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOwner", DbType="Int NOT NULL")]
		public int iOwner
		{
			get
			{
				return this._iOwner;
			}
			set
			{
				if ((this._iOwner != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOwnerChanging(value);
					this.SendPropertyChanging();
					this._iOwner = value;
					this.SendPropertyChanged("iOwner");
					this.OniOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DXaction", DbType="Date NOT NULL")]
		public System.DateTime DXaction
		{
			get
			{
				return this._DXaction;
			}
			set
			{
				if ((this._DXaction != value))
				{
					this.OnDXactionChanging(value);
					this.SendPropertyChanging();
					this._DXaction = value;
					this.SendPropertyChanged("DXaction");
					this.OnDXactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cDateQuality", DbType="NChar(1) NOT NULL")]
		public char cDateQuality
		{
			get
			{
				return this._cDateQuality;
			}
			set
			{
				if ((this._cDateQuality != value))
				{
					this.OncDateQualityChanging(value);
					this.SendPropertyChanging();
					this._cDateQuality = value;
					this.SendPropertyChanged("cDateQuality");
					this.OncDateQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dNumShares", DbType="Decimal(12,4) NOT NULL")]
		public decimal dNumShares
		{
			get
			{
				return this._dNumShares;
			}
			set
			{
				if ((this._dNumShares != value))
				{
					this.OndNumSharesChanging(value);
					this.SendPropertyChanging();
					this._dNumShares = value;
					this.SendPropertyChanged("dNumShares");
					this.OndNumSharesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cXactType", DbType="NChar(1) NOT NULL")]
		public char cXactType
		{
			get
			{
				return this._cXactType;
			}
			set
			{
				if ((this._cXactType != value))
				{
					this.OncXactTypeChanging(value);
					this.SendPropertyChanging();
					this._cXactType = value;
					this.SendPropertyChanged("cXactType");
					this.OncXactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInfoSource", DbType="NVarChar(MAX)")]
		public string sInfoSource
		{
			get
			{
				return this._sInfoSource;
			}
			set
			{
				if ((this._sInfoSource != value))
				{
					this.OnsInfoSourceChanging(value);
					this.SendPropertyChanging();
					this._sInfoSource = value;
					this.SendPropertyChanged("sInfoSource");
					this.OnsInfoSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_EQUITYSHARE", Storage="_PEOPLE", ThisKey="iOwner", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.EQUITYSHAREs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.EQUITYSHAREs.Add(this);
						this._iOwner = value.ID;
					}
					else
					{
						this._iOwner = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_EquityShares")]
	public partial class TNPV_EquityShare
	{
		
		private string _sDisplayName;
		
		private System.DateTime _DXaction;
		
		private char _cDateQuality;
		
		private decimal _dNumShares;
		
		private char _cXactType;
		
		private string _sInfoSource;
		
		private string _sComment;
		
		private System.Nullable<int> _SubCount;
		
		private System.Nullable<decimal> _runningSubtotal;
		
		private System.Nullable<int> _Overall_Count;
		
		private System.Nullable<decimal> _RunningTotal;
		
		public TNPV_EquityShare()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DXaction", DbType="Date NOT NULL")]
		public System.DateTime DXaction
		{
			get
			{
				return this._DXaction;
			}
			set
			{
				if ((this._DXaction != value))
				{
					this._DXaction = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cDateQuality", DbType="NChar(1) NOT NULL")]
		public char cDateQuality
		{
			get
			{
				return this._cDateQuality;
			}
			set
			{
				if ((this._cDateQuality != value))
				{
					this._cDateQuality = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dNumShares", DbType="Decimal(12,4) NOT NULL")]
		public decimal dNumShares
		{
			get
			{
				return this._dNumShares;
			}
			set
			{
				if ((this._dNumShares != value))
				{
					this._dNumShares = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cXactType", DbType="NChar(1) NOT NULL")]
		public char cXactType
		{
			get
			{
				return this._cXactType;
			}
			set
			{
				if ((this._cXactType != value))
				{
					this._cXactType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInfoSource", DbType="NVarChar(MAX)")]
		public string sInfoSource
		{
			get
			{
				return this._sInfoSource;
			}
			set
			{
				if ((this._sInfoSource != value))
				{
					this._sInfoSource = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this._sComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubCount", DbType="Int")]
		public System.Nullable<int> SubCount
		{
			get
			{
				return this._SubCount;
			}
			set
			{
				if ((this._SubCount != value))
				{
					this._SubCount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runningSubtotal", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> runningSubtotal
		{
			get
			{
				return this._runningSubtotal;
			}
			set
			{
				if ((this._runningSubtotal != value))
				{
					this._runningSubtotal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Overall Count]", Storage="_Overall_Count", DbType="Int")]
		public System.Nullable<int> Overall_Count
		{
			get
			{
				return this._Overall_Count;
			}
			set
			{
				if ((this._Overall_Count != value))
				{
					this._Overall_Count = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningTotal", DbType="Decimal(38,4)")]
		public System.Nullable<decimal> RunningTotal
		{
			get
			{
				return this._RunningTotal;
			}
			set
			{
				if ((this._RunningTotal != value))
				{
					this._RunningTotal = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private int _iFA_branch_code;
		
		private int _iFA_debtor_no;
		
		private System.DateTimeOffset _DAcceptedAUP;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
		private EntitySet<SSA_MEMBERFROMTO> _SSA_MEMBERFROMTOs;
		
		private EntitySet<EQUITYSHARE> _EQUITYSHAREs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    partial void OniFA_branch_codeChanging(int value);
    partial void OniFA_branch_codeChanged();
    partial void OniFA_debtor_noChanging(int value);
    partial void OniFA_debtor_noChanged();
    partial void OnDAcceptedAUPChanging(System.DateTimeOffset value);
    partial void OnDAcceptedAUPChanged();
    #endregion
		
		public PEOPLE()
		{
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			this._SSA_MEMBERFROMTOs = new EntitySet<SSA_MEMBERFROMTO>(new Action<SSA_MEMBERFROMTO>(this.attach_SSA_MEMBERFROMTOs), new Action<SSA_MEMBERFROMTO>(this.detach_SSA_MEMBERFROMTOs));
			this._EQUITYSHAREs = new EntitySet<EQUITYSHARE>(new Action<EQUITYSHARE>(this.attach_EQUITYSHAREs), new Action<EQUITYSHARE>(this.detach_EQUITYSHAREs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_branch_code", DbType="Int NOT NULL")]
		public int iFA_branch_code
		{
			get
			{
				return this._iFA_branch_code;
			}
			set
			{
				if ((this._iFA_branch_code != value))
				{
					this.OniFA_branch_codeChanging(value);
					this.SendPropertyChanging();
					this._iFA_branch_code = value;
					this.SendPropertyChanged("iFA_branch_code");
					this.OniFA_branch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_debtor_no", DbType="Int NOT NULL")]
		public int iFA_debtor_no
		{
			get
			{
				return this._iFA_debtor_no;
			}
			set
			{
				if ((this._iFA_debtor_no != value))
				{
					this.OniFA_debtor_noChanging(value);
					this.SendPropertyChanging();
					this._iFA_debtor_no = value;
					this.SendPropertyChanged("iFA_debtor_no");
					this.OniFA_debtor_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAcceptedAUP", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DAcceptedAUP
		{
			get
			{
				return this._DAcceptedAUP;
			}
			set
			{
				if ((this._DAcceptedAUP != value))
				{
					this.OnDAcceptedAUPChanging(value);
					this.SendPropertyChanging();
					this._DAcceptedAUP = value;
					this.SendPropertyChanged("DAcceptedAUP");
					this.OnDAcceptedAUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_SSA_MEMBERFROMTO", Storage="_SSA_MEMBERFROMTOs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<SSA_MEMBERFROMTO> SSA_MEMBERFROMTOs
		{
			get
			{
				return this._SSA_MEMBERFROMTOs;
			}
			set
			{
				this._SSA_MEMBERFROMTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_EQUITYSHARE", Storage="_EQUITYSHAREs", ThisKey="ID", OtherKey="iOwner")]
		public EntitySet<EQUITYSHARE> EQUITYSHAREs
		{
			get
			{
				return this._EQUITYSHAREs;
			}
			set
			{
				this._EQUITYSHAREs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_EQUITYSHAREs(EQUITYSHARE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_EQUITYSHAREs(EQUITYSHARE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
}
#pragma warning restore 1591
