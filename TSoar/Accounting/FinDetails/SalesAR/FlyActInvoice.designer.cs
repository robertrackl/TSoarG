#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.Accounting.FinDetails.SalesAR
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ProdSoarDB")]
	public partial class FlyActInvoiceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOPERATION(OPERATION instance);
    partial void UpdateOPERATION(OPERATION instance);
    partial void DeleteOPERATION(OPERATION instance);
    partial void InsertLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void UpdateLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void DeleteLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void InsertOPDETAIL(OPDETAIL instance);
    partial void UpdateOPDETAIL(OPDETAIL instance);
    partial void DeleteOPDETAIL(OPDETAIL instance);
    partial void InsertEQUIPMENT(EQUIPMENT instance);
    partial void UpdateEQUIPMENT(EQUIPMENT instance);
    partial void DeleteEQUIPMENT(EQUIPMENT instance);
    partial void InsertEQUIPTYPE(EQUIPTYPE instance);
    partial void UpdateEQUIPTYPE(EQUIPTYPE instance);
    partial void DeleteEQUIPTYPE(EQUIPTYPE instance);
    partial void InsertEQUIPMENTROLE(EQUIPMENTROLE instance);
    partial void UpdateEQUIPMENTROLE(EQUIPMENTROLE instance);
    partial void DeleteEQUIPMENTROLE(EQUIPMENTROLE instance);
    partial void InsertLOCATION(LOCATION instance);
    partial void UpdateLOCATION(LOCATION instance);
    partial void DeleteLOCATION(LOCATION instance);
    partial void InsertAVIATOR(AVIATOR instance);
    partial void UpdateAVIATOR(AVIATOR instance);
    partial void DeleteAVIATOR(AVIATOR instance);
    partial void InsertCHARGECODESINRATE(CHARGECODESINRATE instance);
    partial void UpdateCHARGECODESINRATE(CHARGECODESINRATE instance);
    partial void DeleteCHARGECODESINRATE(CHARGECODESINRATE instance);
    partial void InsertCHARGECODE(CHARGECODE instance);
    partial void UpdateCHARGECODE(CHARGECODE instance);
    partial void DeleteCHARGECODE(CHARGECODE instance);
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    partial void InsertAVIATORROLE(AVIATORROLE instance);
    partial void UpdateAVIATORROLE(AVIATORROLE instance);
    partial void DeleteAVIATORROLE(AVIATORROLE instance);
    partial void InsertPEOPLEQUALIFIC(PEOPLEQUALIFIC instance);
    partial void UpdatePEOPLEQUALIFIC(PEOPLEQUALIFIC instance);
    partial void DeletePEOPLEQUALIFIC(PEOPLEQUALIFIC instance);
    partial void InsertCERTIFICATION(CERTIFICATION instance);
    partial void UpdateCERTIFICATION(CERTIFICATION instance);
    partial void DeleteCERTIFICATION(CERTIFICATION instance);
    partial void InsertQBO_ITEMNAME(QBO_ITEMNAME instance);
    partial void UpdateQBO_ITEMNAME(QBO_ITEMNAME instance);
    partial void DeleteQBO_ITEMNAME(QBO_ITEMNAME instance);
    partial void InsertINVLINE(INVLINE instance);
    partial void UpdateINVLINE(INVLINE instance);
    partial void DeleteINVLINE(INVLINE instance);
    partial void InsertMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void UpdateMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void DeleteMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void InsertMINFLYCHGPAR(MINFLYCHGPAR instance);
    partial void UpdateMINFLYCHGPAR(MINFLYCHGPAR instance);
    partial void DeleteMINFLYCHGPAR(MINFLYCHGPAR instance);
    partial void InsertINVOICE(INVOICE instance);
    partial void UpdateINVOICE(INVOICE instance);
    partial void DeleteINVOICE(INVOICE instance);
    partial void InsertFLYINGCHARGE(FLYINGCHARGE instance);
    partial void UpdateFLYINGCHARGE(FLYINGCHARGE instance);
    partial void DeleteFLYINGCHARGE(FLYINGCHARGE instance);
    partial void InsertMEMBERFROMTO(MEMBERFROMTO instance);
    partial void UpdateMEMBERFROMTO(MEMBERFROMTO instance);
    partial void DeleteMEMBERFROMTO(MEMBERFROMTO instance);
    partial void InsertRATE(RATE instance);
    partial void UpdateRATE(RATE instance);
    partial void DeleteRATE(RATE instance);
    #endregion
		
		public FlyActInvoiceDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FlyActInvoiceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlyActInvoiceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlyActInvoiceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FlyActInvoiceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<OPERATION> OPERATIONs
		{
			get
			{
				return this.GetTable<OPERATION>();
			}
		}
		
		public System.Data.Linq.Table<LAUNCHMETHOD> LAUNCHMETHODs
		{
			get
			{
				return this.GetTable<LAUNCHMETHOD>();
			}
		}
		
		public System.Data.Linq.Table<OPDETAIL> OPDETAILs
		{
			get
			{
				return this.GetTable<OPDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPMENT> EQUIPMENTs
		{
			get
			{
				return this.GetTable<EQUIPMENT>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPTYPE> EQUIPTYPEs
		{
			get
			{
				return this.GetTable<EQUIPTYPE>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPMENTROLE> EQUIPMENTROLEs
		{
			get
			{
				return this.GetTable<EQUIPMENTROLE>();
			}
		}
		
		public System.Data.Linq.Table<LOCATION> LOCATIONs
		{
			get
			{
				return this.GetTable<LOCATION>();
			}
		}
		
		public System.Data.Linq.Table<AVIATOR> AVIATORs
		{
			get
			{
				return this.GetTable<AVIATOR>();
			}
		}
		
		public System.Data.Linq.Table<CHARGECODESINRATE> CHARGECODESINRATEs
		{
			get
			{
				return this.GetTable<CHARGECODESINRATE>();
			}
		}
		
		public System.Data.Linq.Table<CHARGECODE> CHARGECODEs
		{
			get
			{
				return this.GetTable<CHARGECODE>();
			}
		}
		
		public System.Data.Linq.Table<SFV_InvoiceDetail> SFV_InvoiceDetails
		{
			get
			{
				return this.GetTable<SFV_InvoiceDetail>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
		
		public System.Data.Linq.Table<AVIATORROLE> AVIATORROLEs
		{
			get
			{
				return this.GetTable<AVIATORROLE>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLEQUALIFIC> PEOPLEQUALIFICs
		{
			get
			{
				return this.GetTable<PEOPLEQUALIFIC>();
			}
		}
		
		public System.Data.Linq.Table<CERTIFICATION> CERTIFICATIONs
		{
			get
			{
				return this.GetTable<CERTIFICATION>();
			}
		}
		
		public System.Data.Linq.Table<QBO_ITEMNAME> QBO_ITEMNAMEs
		{
			get
			{
				return this.GetTable<QBO_ITEMNAME>();
			}
		}
		
		public System.Data.Linq.Table<INVLINE> INVLINEs
		{
			get
			{
				return this.GetTable<INVLINE>();
			}
		}
		
		public System.Data.Linq.Table<MEMBERSHIPCATEGORy> MEMBERSHIPCATEGORies
		{
			get
			{
				return this.GetTable<MEMBERSHIPCATEGORy>();
			}
		}
		
		public System.Data.Linq.Table<MINFLYCHGPAR> MINFLYCHGPARs
		{
			get
			{
				return this.GetTable<MINFLYCHGPAR>();
			}
		}
		
		public System.Data.Linq.Table<INVOICE> INVOICEs
		{
			get
			{
				return this.GetTable<INVOICE>();
			}
		}
		
		public System.Data.Linq.Table<FLYINGCHARGE> FLYINGCHARGEs
		{
			get
			{
				return this.GetTable<FLYINGCHARGE>();
			}
		}
		
		public System.Data.Linq.Table<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this.GetTable<MEMBERFROMTO>();
			}
		}
		
		public System.Data.Linq.Table<RATE> RATEs
		{
			get
			{
				return this.GetTable<RATE>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spDDL_ChargeCodes")]
		public ISingleResult<spDDL_ChargeCodesResult> spDDL_ChargeCodes([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iRate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iRate);
			return ((ISingleResult<spDDL_ChargeCodesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spMemberDisplayNames")]
		public ISingleResult<spMemberDisplayNamesResult> spMemberDisplayNames([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DFrom", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DTo", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dFrom, dTo);
			return ((ISingleResult<spMemberDisplayNamesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spMemberDisplayNamesInv")]
		public ISingleResult<spMemberDisplayNamesInvResult> spMemberDisplayNamesInv([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DFrom", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DTo", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dFrom, dTo);
			return ((ISingleResult<spMemberDisplayNamesInvResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFlyOpsFromInvoice")]
		public ISingleResult<spFlyOpsFromInvoiceResult> spFlyOpsFromInvoice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iInvoiceID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iInvoiceID);
			return ((ISingleResult<spFlyOpsFromInvoiceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSelectRate")]
		public ISingleResult<spSelectRateResult> spSelectRate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iOpsID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(6)")] string sLaunchOrGlider)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iOpsID, sLaunchOrGlider);
			return ((ISingleResult<spSelectRateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TNPF_IsInstructor", IsComposable=true)]
		public System.Nullable<bool> TNPF_IsInstructor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iPerson)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iPerson).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCheck4MFCOverlap")]
		public ISingleResult<spCheck4MFCOverlapResult> spCheck4MFCOverlap()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spCheck4MFCOverlapResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGetMFCPars")]
		public ISingleResult<spGetMFCParsResult> spGetMFCPars()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<spGetMFCParsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spGenMFCs")]
		public int spGenMFCs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iuMFCPID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iuUser, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string sStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iuMFCPID, iuUser, sStatus);
			sStatus = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spRemoveMFCs")]
		public int spRemoveMFCs([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iuMFCPID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string sStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iuMFCPID, sStatus);
			sStatus = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spInvoiceTotal")]
		public int spInvoiceTotal([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iuInvoice)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iuInvoice);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spInvoiceDetails")]
		public ISingleResult<spInvoiceDetailsResult> spInvoiceDetails([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DFromInvFO", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dFromInvFO, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DToInvFO", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dToInvFO, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(55)")] string sMemberDisplayNameInv, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> bClosed)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dFromInvFO, dToInvFO, sMemberDisplayNameInv, bClosed);
			return ((ISingleResult<spInvoiceDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spInvoiceSummaries")]
		public ISingleResult<spInvoiceSummariesResult> spInvoiceSummaries([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iUser, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DFrom", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DTo", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dTo, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(700)")] ref string suStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iUser, dFrom, dTo, suStatus);
			suStatus = ((string)(result.GetParameterValue(3)));
			return ((ISingleResult<spInvoiceSummariesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spMembCatFromFlyChg")]
		public ISingleResult<spMembCatFromFlyChgResult> spMembCatFromFlyChg([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iuFlyChg, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string suStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iuFlyChg, suStatus);
			suStatus = ((string)(result.GetParameterValue(1)));
			return ((ISingleResult<spMembCatFromFlyChgResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATIONS")]
	public partial class OPERATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iLaunchMethod;
		
		private int _iTakeoffLoc;
		
		private System.Nullable<System.DateTime> _DBegin;
		
		private int _iLandingLoc;
		
		private System.Nullable<System.DateTime> _DEnd;
		
		private string _sComment;
		
		private int _iChargeCode;
		
		private int _iInvoices2go;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
		private EntityRef<LAUNCHMETHOD> _LAUNCHMETHOD;
		
		private EntityRef<LOCATION> _LOCATION;
		
		private EntityRef<CHARGECODE> _CHARGECODE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OniTakeoffLocChanging(int value);
    partial void OniTakeoffLocChanged();
    partial void OnDBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDBeginChanged();
    partial void OniLandingLocChanging(int value);
    partial void OniLandingLocChanged();
    partial void OnDEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDEndChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniChargeCodeChanging(int value);
    partial void OniChargeCodeChanged();
    partial void OniInvoices2goChanging(int value);
    partial void OniInvoices2goChanged();
    #endregion
		
		public OPERATION()
		{
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			this._LAUNCHMETHOD = default(EntityRef<LAUNCHMETHOD>);
			this._LOCATION = default(EntityRef<LOCATION>);
			this._CHARGECODE = default(EntityRef<CHARGECODE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					if (this._LAUNCHMETHOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTakeoffLoc", DbType="Int NOT NULL")]
		public int iTakeoffLoc
		{
			get
			{
				return this._iTakeoffLoc;
			}
			set
			{
				if ((this._iTakeoffLoc != value))
				{
					if (this._LOCATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniTakeoffLocChanging(value);
					this.SendPropertyChanging();
					this._iTakeoffLoc = value;
					this.SendPropertyChanged("iTakeoffLoc");
					this.OniTakeoffLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this.OnDBeginChanging(value);
					this.SendPropertyChanging();
					this._DBegin = value;
					this.SendPropertyChanged("DBegin");
					this.OnDBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLandingLoc", DbType="Int NOT NULL")]
		public int iLandingLoc
		{
			get
			{
				return this._iLandingLoc;
			}
			set
			{
				if ((this._iLandingLoc != value))
				{
					this.OniLandingLocChanging(value);
					this.SendPropertyChanging();
					this._iLandingLoc = value;
					this.SendPropertyChanged("iLandingLoc");
					this.OniLandingLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this.OnDEndChanging(value);
					this.SendPropertyChanging();
					this._DEnd = value;
					this.SendPropertyChanged("DEnd");
					this.OnDEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="VarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChargeCode", DbType="Int NOT NULL")]
		public int iChargeCode
		{
			get
			{
				return this._iChargeCode;
			}
			set
			{
				if ((this._iChargeCode != value))
				{
					if (this._CHARGECODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._iChargeCode = value;
					this.SendPropertyChanged("iChargeCode");
					this.OniChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iInvoices2go", DbType="Int NOT NULL")]
		public int iInvoices2go
		{
			get
			{
				return this._iInvoices2go;
			}
			set
			{
				if ((this._iInvoices2go != value))
				{
					this.OniInvoices2goChanging(value);
					this.SendPropertyChanging();
					this._iInvoices2go = value;
					this.SendPropertyChanged("iInvoices2go");
					this.OniInvoices2goChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iOperation")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCHMETHOD_OPERATION", Storage="_LAUNCHMETHOD", ThisKey="iLaunchMethod", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LAUNCHMETHOD LAUNCHMETHOD
		{
			get
			{
				return this._LAUNCHMETHOD.Entity;
			}
			set
			{
				LAUNCHMETHOD previousValue = this._LAUNCHMETHOD.Entity;
				if (((previousValue != value) 
							|| (this._LAUNCHMETHOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAUNCHMETHOD.Entity = null;
						previousValue.OPERATIONs.Remove(this);
					}
					this._LAUNCHMETHOD.Entity = value;
					if ((value != null))
					{
						value.OPERATIONs.Add(this);
						this._iLaunchMethod = value.ID;
					}
					else
					{
						this._iLaunchMethod = default(int);
					}
					this.SendPropertyChanged("LAUNCHMETHOD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_OPERATION", Storage="_LOCATION", ThisKey="iTakeoffLoc", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LOCATION LOCATION
		{
			get
			{
				return this._LOCATION.Entity;
			}
			set
			{
				LOCATION previousValue = this._LOCATION.Entity;
				if (((previousValue != value) 
							|| (this._LOCATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOCATION.Entity = null;
						previousValue.OPERATIONs.Remove(this);
					}
					this._LOCATION.Entity = value;
					if ((value != null))
					{
						value.OPERATIONs.Add(this);
						this._iTakeoffLoc = value.ID;
					}
					else
					{
						this._iTakeoffLoc = default(int);
					}
					this.SendPropertyChanged("LOCATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_OPERATION", Storage="_CHARGECODE", ThisKey="iChargeCode", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CHARGECODE CHARGECODE
		{
			get
			{
				return this._CHARGECODE.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE.Entity = null;
						previousValue.OPERATIONs.Remove(this);
					}
					this._CHARGECODE.Entity = value;
					if ((value != null))
					{
						value.OPERATIONs.Add(this);
						this._iChargeCode = value.ID;
					}
					else
					{
						this._iChargeCode = default(int);
					}
					this.SendPropertyChanged("CHARGECODE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAUNCHMETHODS")]
	public partial class LAUNCHMETHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sLaunchMethod;
		
		private EntitySet<OPERATION> _OPERATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsLaunchMethodChanging(string value);
    partial void OnsLaunchMethodChanged();
    #endregion
		
		public LAUNCHMETHOD()
		{
			this._OPERATIONs = new EntitySet<OPERATION>(new Action<OPERATION>(this.attach_OPERATIONs), new Action<OPERATION>(this.detach_OPERATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLaunchMethod", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sLaunchMethod
		{
			get
			{
				return this._sLaunchMethod;
			}
			set
			{
				if ((this._sLaunchMethod != value))
				{
					this.OnsLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._sLaunchMethod = value;
					this.SendPropertyChanged("sLaunchMethod");
					this.OnsLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAUNCHMETHOD_OPERATION", Storage="_OPERATIONs", ThisKey="ID", OtherKey="iLaunchMethod")]
		public EntitySet<OPERATION> OPERATIONs
		{
			get
			{
				return this._OPERATIONs;
			}
			set
			{
				this._OPERATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCHMETHOD = this;
		}
		
		private void detach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LAUNCHMETHOD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPDETAILS")]
	public partial class OPDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iEquip;
		
		private int _iOperation;
		
		private int _iEquipmentRole;
		
		private System.Nullable<decimal> _dMaxAltitude;
		
		private System.Nullable<decimal> _dReleaseAltitude;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
		private EntityRef<OPERATION> _OPERATION;
		
		private EntityRef<EQUIPMENT> _EQUIPMENT;
		
		private EntityRef<EQUIPMENTROLE> _EQUIPMENTROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniEquipChanging(int value);
    partial void OniEquipChanged();
    partial void OniOperationChanging(int value);
    partial void OniOperationChanged();
    partial void OniEquipmentRoleChanging(int value);
    partial void OniEquipmentRoleChanged();
    partial void OndMaxAltitudeChanging(System.Nullable<decimal> value);
    partial void OndMaxAltitudeChanged();
    partial void OndReleaseAltitudeChanging(System.Nullable<decimal> value);
    partial void OndReleaseAltitudeChanged();
    #endregion
		
		public OPDETAIL()
		{
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			this._OPERATION = default(EntityRef<OPERATION>);
			this._EQUIPMENT = default(EntityRef<EQUIPMENT>);
			this._EQUIPMENTROLE = default(EntityRef<EQUIPMENTROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquip", DbType="Int NOT NULL")]
		public int iEquip
		{
			get
			{
				return this._iEquip;
			}
			set
			{
				if ((this._iEquip != value))
				{
					if (this._EQUIPMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipChanging(value);
					this.SendPropertyChanging();
					this._iEquip = value;
					this.SendPropertyChanged("iEquip");
					this.OniEquipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOperation", DbType="Int NOT NULL")]
		public int iOperation
		{
			get
			{
				return this._iOperation;
			}
			set
			{
				if ((this._iOperation != value))
				{
					if (this._OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOperationChanging(value);
					this.SendPropertyChanging();
					this._iOperation = value;
					this.SendPropertyChanged("iOperation");
					this.OniOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipmentRole", DbType="Int NOT NULL")]
		public int iEquipmentRole
		{
			get
			{
				return this._iEquipmentRole;
			}
			set
			{
				if ((this._iEquipmentRole != value))
				{
					if (this._EQUIPMENTROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipmentRoleChanging(value);
					this.SendPropertyChanging();
					this._iEquipmentRole = value;
					this.SendPropertyChanged("iEquipmentRole");
					this.OniEquipmentRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dMaxAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dMaxAltitude
		{
			get
			{
				return this._dMaxAltitude;
			}
			set
			{
				if ((this._dMaxAltitude != value))
				{
					this.OndMaxAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dMaxAltitude = value;
					this.SendPropertyChanged("dMaxAltitude");
					this.OndMaxAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dReleaseAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dReleaseAltitude
		{
			get
			{
				return this._dReleaseAltitude;
			}
			set
			{
				if ((this._dReleaseAltitude != value))
				{
					this.OndReleaseAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dReleaseAltitude = value;
					this.SendPropertyChanged("dReleaseAltitude");
					this.OndReleaseAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPDETAIL_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iOpDetail")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_OPDETAIL", Storage="_OPERATION", ThisKey="iOperation", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPERATION OPERATION
		{
			get
			{
				return this._OPERATION.Entity;
			}
			set
			{
				OPERATION previousValue = this._OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iOperation = value.ID;
					}
					else
					{
						this._iOperation = default(int);
					}
					this.SendPropertyChanged("OPERATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_OPDETAIL", Storage="_EQUIPMENT", ThisKey="iEquip", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENT EQUIPMENT
		{
			get
			{
				return this._EQUIPMENT.Entity;
			}
			set
			{
				EQUIPMENT previousValue = this._EQUIPMENT.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENT.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._EQUIPMENT.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iEquip = value.ID;
					}
					else
					{
						this._iEquip = default(int);
					}
					this.SendPropertyChanged("EQUIPMENT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_OPDETAIL", Storage="_EQUIPMENTROLE", ThisKey="iEquipmentRole", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENTROLE EQUIPMENTROLE
		{
			get
			{
				return this._EQUIPMENTROLE.Entity;
			}
			set
			{
				EQUIPMENTROLE previousValue = this._EQUIPMENTROLE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENTROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENTROLE.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._EQUIPMENTROLE.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iEquipmentRole = value.ID;
					}
					else
					{
						this._iEquipmentRole = default(int);
					}
					this.SendPropertyChanged("EQUIPMENTROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.OPDETAIL = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.OPDETAIL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPMENT")]
	public partial class EQUIPMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iEquipType;
		
		private string _sShortEquipName;
		
		private string _sDescription;
		
		private string _sRegistrationId;
		
		private string _sOwner;
		
		private string _sModelNum;
		
		private System.Nullable<decimal> _AcquisitionCost;
		
		private string _sComment;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OnsShortEquipNameChanging(string value);
    partial void OnsShortEquipNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnsRegistrationIdChanging(string value);
    partial void OnsRegistrationIdChanged();
    partial void OnsOwnerChanging(string value);
    partial void OnsOwnerChanged();
    partial void OnsModelNumChanging(string value);
    partial void OnsModelNumChanged();
    partial void OnAcquisitionCostChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionCostChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPMENT()
		{
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortEquipName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sShortEquipName
		{
			get
			{
				return this._sShortEquipName;
			}
			set
			{
				if ((this._sShortEquipName != value))
				{
					this.OnsShortEquipNameChanging(value);
					this.SendPropertyChanging();
					this._sShortEquipName = value;
					this.SendPropertyChanged("sShortEquipName");
					this.OnsShortEquipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="VarChar(MAX)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRegistrationId", DbType="VarChar(20)")]
		public string sRegistrationId
		{
			get
			{
				return this._sRegistrationId;
			}
			set
			{
				if ((this._sRegistrationId != value))
				{
					this.OnsRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._sRegistrationId = value;
					this.SendPropertyChanged("sRegistrationId");
					this.OnsRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sOwner", DbType="VarChar(50)")]
		public string sOwner
		{
			get
			{
				return this._sOwner;
			}
			set
			{
				if ((this._sOwner != value))
				{
					this.OnsOwnerChanging(value);
					this.SendPropertyChanging();
					this._sOwner = value;
					this.SendPropertyChanged("sOwner");
					this.OnsOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sModelNum", DbType="VarChar(20)")]
		public string sModelNum
		{
			get
			{
				return this._sModelNum;
			}
			set
			{
				if ((this._sModelNum != value))
				{
					this.OnsModelNumChanging(value);
					this.SendPropertyChanging();
					this._sModelNum = value;
					this.SendPropertyChanged("sModelNum");
					this.OnsModelNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AcquisitionCost
		{
			get
			{
				return this._AcquisitionCost;
			}
			set
			{
				if ((this._AcquisitionCost != value))
				{
					this.OnAcquisitionCostChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionCost = value;
					this.SendPropertyChanged("AcquisitionCost");
					this.OnAcquisitionCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iEquip")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPMENT", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.EQUIPMENTs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.EQUIPMENTs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPTYPES")]
	public partial class EQUIPTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sEquipmentType;
		
		private EntitySet<EQUIPMENT> _EQUIPMENTs;
		
		private EntitySet<RATE> _RATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsEquipmentTypeChanging(string value);
    partial void OnsEquipmentTypeChanged();
    #endregion
		
		public EQUIPTYPE()
		{
			this._EQUIPMENTs = new EntitySet<EQUIPMENT>(new Action<EQUIPMENT>(this.attach_EQUIPMENTs), new Action<EQUIPMENT>(this.detach_EQUIPMENTs));
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sEquipmentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sEquipmentType
		{
			get
			{
				return this._sEquipmentType;
			}
			set
			{
				if ((this._sEquipmentType != value))
				{
					this.OnsEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._sEquipmentType = value;
					this.SendPropertyChanged("sEquipmentType");
					this.OnsEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPMENT", Storage="_EQUIPMENTs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<EQUIPMENT> EQUIPMENTs
		{
			get
			{
				return this._EQUIPMENTs;
			}
			set
			{
				this._EQUIPMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_RATE", Storage="_RATEs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EQUIPMENTs(EQUIPMENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_EQUIPMENTs(EQUIPMENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPMENTROLES")]
	public partial class EQUIPMENTROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sEquipmentRole;
		
		private int _iAvgUseDurationMinutes;
		
		private string _sComment;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsEquipmentRoleChanging(string value);
    partial void OnsEquipmentRoleChanged();
    partial void OniAvgUseDurationMinutesChanging(int value);
    partial void OniAvgUseDurationMinutesChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPMENTROLE()
		{
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sEquipmentRole", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sEquipmentRole
		{
			get
			{
				return this._sEquipmentRole;
			}
			set
			{
				if ((this._sEquipmentRole != value))
				{
					this.OnsEquipmentRoleChanging(value);
					this.SendPropertyChanging();
					this._sEquipmentRole = value;
					this.SendPropertyChanged("sEquipmentRole");
					this.OnsEquipmentRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAvgUseDurationMinutes", DbType="Int NOT NULL")]
		public int iAvgUseDurationMinutes
		{
			get
			{
				return this._iAvgUseDurationMinutes;
			}
			set
			{
				if ((this._iAvgUseDurationMinutes != value))
				{
					this.OniAvgUseDurationMinutesChanging(value);
					this.SendPropertyChanging();
					this._iAvgUseDurationMinutes = value;
					this.SendPropertyChanged("iAvgUseDurationMinutes");
					this.OniAvgUseDurationMinutesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENTROLE_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iEquipmentRole")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENTROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOCATIONS")]
	public partial class LOCATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sLocation;
		
		private string _sAbbrev;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private decimal _dRunwayAltitude;
		
		private EntitySet<OPERATION> _OPERATIONs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsLocationChanging(string value);
    partial void OnsLocationChanged();
    partial void OnsAbbrevChanging(string value);
    partial void OnsAbbrevChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OndRunwayAltitudeChanging(decimal value);
    partial void OndRunwayAltitudeChanged();
    #endregion
		
		public LOCATION()
		{
			this._OPERATIONs = new EntitySet<OPERATION>(new Action<OPERATION>(this.attach_OPERATIONs), new Action<OPERATION>(this.detach_OPERATIONs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLocation", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sLocation
		{
			get
			{
				return this._sLocation;
			}
			set
			{
				if ((this._sLocation != value))
				{
					this.OnsLocationChanging(value);
					this.SendPropertyChanging();
					this._sLocation = value;
					this.SendPropertyChanged("sLocation");
					this.OnsLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAbbrev", DbType="NVarChar(6)")]
		public string sAbbrev
		{
			get
			{
				return this._sAbbrev;
			}
			set
			{
				if ((this._sAbbrev != value))
				{
					this.OnsAbbrevChanging(value);
					this.SendPropertyChanging();
					this._sAbbrev = value;
					this.SendPropertyChanged("sAbbrev");
					this.OnsAbbrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,6)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dRunwayAltitude", DbType="Decimal(6,0) NOT NULL")]
		public decimal dRunwayAltitude
		{
			get
			{
				return this._dRunwayAltitude;
			}
			set
			{
				if ((this._dRunwayAltitude != value))
				{
					this.OndRunwayAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dRunwayAltitude = value;
					this.SendPropertyChanged("dRunwayAltitude");
					this.OndRunwayAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOCATION_OPERATION", Storage="_OPERATIONs", ThisKey="ID", OtherKey="iTakeoffLoc")]
		public EntitySet<OPERATION> OPERATIONs
		{
			get
			{
				return this._OPERATIONs;
			}
			set
			{
				this._OPERATIONs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = this;
		}
		
		private void detach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.LOCATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVIATORS")]
	public partial class AVIATOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iOpDetail;
		
		private int _iAviatorRole;
		
		private decimal _dPercentCharge;
		
		private bool _b1stFlight;
		
		private System.Nullable<decimal> _mInvoiced;
		
		private System.Nullable<System.DateTimeOffset> _DInvoiced;
		
		private EntityRef<OPDETAIL> _OPDETAIL;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
		private EntityRef<AVIATORROLE> _AVIATORROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniOpDetailChanging(int value);
    partial void OniOpDetailChanged();
    partial void OniAviatorRoleChanging(int value);
    partial void OniAviatorRoleChanged();
    partial void OndPercentChargeChanging(decimal value);
    partial void OndPercentChargeChanged();
    partial void Onb1stFlightChanging(bool value);
    partial void Onb1stFlightChanged();
    partial void OnmInvoicedChanging(System.Nullable<decimal> value);
    partial void OnmInvoicedChanged();
    partial void OnDInvoicedChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDInvoicedChanged();
    #endregion
		
		public AVIATOR()
		{
			this._OPDETAIL = default(EntityRef<OPDETAIL>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			this._AVIATORROLE = default(EntityRef<AVIATORROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOpDetail", DbType="Int NOT NULL")]
		public int iOpDetail
		{
			get
			{
				return this._iOpDetail;
			}
			set
			{
				if ((this._iOpDetail != value))
				{
					if (this._OPDETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOpDetailChanging(value);
					this.SendPropertyChanging();
					this._iOpDetail = value;
					this.SendPropertyChanged("iOpDetail");
					this.OniOpDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole", DbType="Int NOT NULL")]
		public int iAviatorRole
		{
			get
			{
				return this._iAviatorRole;
			}
			set
			{
				if ((this._iAviatorRole != value))
				{
					if (this._AVIATORROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniAviatorRoleChanging(value);
					this.SendPropertyChanging();
					this._iAviatorRole = value;
					this.SendPropertyChanged("iAviatorRole");
					this.OniAviatorRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPercentCharge", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPercentCharge
		{
			get
			{
				return this._dPercentCharge;
			}
			set
			{
				if ((this._dPercentCharge != value))
				{
					this.OndPercentChargeChanging(value);
					this.SendPropertyChanging();
					this._dPercentCharge = value;
					this.SendPropertyChanged("dPercentCharge");
					this.OndPercentChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b1stFlight", DbType="Bit NOT NULL")]
		public bool b1stFlight
		{
			get
			{
				return this._b1stFlight;
			}
			set
			{
				if ((this._b1stFlight != value))
				{
					this.Onb1stFlightChanging(value);
					this.SendPropertyChanging();
					this._b1stFlight = value;
					this.SendPropertyChanged("b1stFlight");
					this.Onb1stFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mInvoiced", DbType="Money")]
		public System.Nullable<decimal> mInvoiced
		{
			get
			{
				return this._mInvoiced;
			}
			set
			{
				if ((this._mInvoiced != value))
				{
					this.OnmInvoicedChanging(value);
					this.SendPropertyChanging();
					this._mInvoiced = value;
					this.SendPropertyChanged("mInvoiced");
					this.OnmInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DInvoiced", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DInvoiced
		{
			get
			{
				return this._DInvoiced;
			}
			set
			{
				if ((this._DInvoiced != value))
				{
					this.OnDInvoicedChanging(value);
					this.SendPropertyChanging();
					this._DInvoiced = value;
					this.SendPropertyChanged("DInvoiced");
					this.OnDInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPDETAIL_AVIATOR", Storage="_OPDETAIL", ThisKey="iOpDetail", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPDETAIL OPDETAIL
		{
			get
			{
				return this._OPDETAIL.Entity;
			}
			set
			{
				OPDETAIL previousValue = this._OPDETAIL.Entity;
				if (((previousValue != value) 
							|| (this._OPDETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPDETAIL.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._OPDETAIL.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iOpDetail = value.ID;
					}
					else
					{
						this._iOpDetail = default(int);
					}
					this.SendPropertyChanged("OPDETAIL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_AVIATOR", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVIATORROLE_AVIATOR", Storage="_AVIATORROLE", ThisKey="iAviatorRole", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AVIATORROLE AVIATORROLE
		{
			get
			{
				return this._AVIATORROLE.Entity;
			}
			set
			{
				AVIATORROLE previousValue = this._AVIATORROLE.Entity;
				if (((previousValue != value) 
							|| (this._AVIATORROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AVIATORROLE.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._AVIATORROLE.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iAviatorRole = value.ID;
					}
					else
					{
						this._iAviatorRole = default(int);
					}
					this.SendPropertyChanged("AVIATORROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHARGECODESINRATES")]
	public partial class CHARGECODESINRATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iChargeCode;
		
		private int _iRate;
		
		private string _sNotes;
		
		private EntityRef<CHARGECODE> _CHARGECODE;
		
		private EntityRef<RATE> _RATE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniChargeCodeChanging(int value);
    partial void OniChargeCodeChanged();
    partial void OniRateChanging(int value);
    partial void OniRateChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    #endregion
		
		public CHARGECODESINRATE()
		{
			this._CHARGECODE = default(EntityRef<CHARGECODE>);
			this._RATE = default(EntityRef<RATE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChargeCode", DbType="Int NOT NULL")]
		public int iChargeCode
		{
			get
			{
				return this._iChargeCode;
			}
			set
			{
				if ((this._iChargeCode != value))
				{
					if (this._CHARGECODE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._iChargeCode = value;
					this.SendPropertyChanged("iChargeCode");
					this.OniChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRate", DbType="Int NOT NULL")]
		public int iRate
		{
			get
			{
				return this._iRate;
			}
			set
			{
				if ((this._iRate != value))
				{
					if (this._RATE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniRateChanging(value);
					this.SendPropertyChanging();
					this._iRate = value;
					this.SendPropertyChanged("iRate");
					this.OniRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_CHARGECODESINRATE", Storage="_CHARGECODE", ThisKey="iChargeCode", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CHARGECODE CHARGECODE
		{
			get
			{
				return this._CHARGECODE.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE.Entity = null;
						previousValue.CHARGECODESINRATEs.Remove(this);
					}
					this._CHARGECODE.Entity = value;
					if ((value != null))
					{
						value.CHARGECODESINRATEs.Add(this);
						this._iChargeCode = value.ID;
					}
					else
					{
						this._iChargeCode = default(int);
					}
					this.SendPropertyChanged("CHARGECODE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RATE_CHARGECODESINRATE", Storage="_RATE", ThisKey="iRate", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RATE RATE
		{
			get
			{
				return this._RATE.Entity;
			}
			set
			{
				RATE previousValue = this._RATE.Entity;
				if (((previousValue != value) 
							|| (this._RATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RATE.Entity = null;
						previousValue.CHARGECODESINRATEs.Remove(this);
					}
					this._RATE.Entity = value;
					if ((value != null))
					{
						value.CHARGECODESINRATEs.Add(this);
						this._iRate = value.ID;
					}
					else
					{
						this._iRate = default(int);
					}
					this.SendPropertyChanged("RATE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHARGECODES")]
	public partial class CHARGECODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sChargeCode;
		
		private char _cChargeCode;
		
		private bool _bCharge4Launch;
		
		private bool _bCharge4Rental;
		
		private EntitySet<OPERATION> _OPERATIONs;
		
		private EntitySet<CHARGECODESINRATE> _CHARGECODESINRATEs;
		
		private EntityRef<CHARGECODE> _CHARGECODE2;
		
		private EntityRef<CHARGECODE> _CHARGECODE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsChargeCodeChanging(string value);
    partial void OnsChargeCodeChanged();
    partial void OncChargeCodeChanging(char value);
    partial void OncChargeCodeChanged();
    partial void OnbCharge4LaunchChanging(bool value);
    partial void OnbCharge4LaunchChanged();
    partial void OnbCharge4RentalChanging(bool value);
    partial void OnbCharge4RentalChanged();
    #endregion
		
		public CHARGECODE()
		{
			this._OPERATIONs = new EntitySet<OPERATION>(new Action<OPERATION>(this.attach_OPERATIONs), new Action<OPERATION>(this.detach_OPERATIONs));
			this._CHARGECODESINRATEs = new EntitySet<CHARGECODESINRATE>(new Action<CHARGECODESINRATE>(this.attach_CHARGECODESINRATEs), new Action<CHARGECODESINRATE>(this.detach_CHARGECODESINRATEs));
			this._CHARGECODE2 = default(EntityRef<CHARGECODE>);
			this._CHARGECODE1 = default(EntityRef<CHARGECODE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._CHARGECODE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCode", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sChargeCode
		{
			get
			{
				return this._sChargeCode;
			}
			set
			{
				if ((this._sChargeCode != value))
				{
					this.OnsChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._sChargeCode = value;
					this.SendPropertyChanged("sChargeCode");
					this.OnsChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cChargeCode", DbType="Char(1) NOT NULL")]
		public char cChargeCode
		{
			get
			{
				return this._cChargeCode;
			}
			set
			{
				if ((this._cChargeCode != value))
				{
					this.OncChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._cChargeCode = value;
					this.SendPropertyChanged("cChargeCode");
					this.OncChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bCharge4Launch", DbType="Bit NOT NULL")]
		public bool bCharge4Launch
		{
			get
			{
				return this._bCharge4Launch;
			}
			set
			{
				if ((this._bCharge4Launch != value))
				{
					this.OnbCharge4LaunchChanging(value);
					this.SendPropertyChanging();
					this._bCharge4Launch = value;
					this.SendPropertyChanged("bCharge4Launch");
					this.OnbCharge4LaunchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bCharge4Rental", DbType="Bit NOT NULL")]
		public bool bCharge4Rental
		{
			get
			{
				return this._bCharge4Rental;
			}
			set
			{
				if ((this._bCharge4Rental != value))
				{
					this.OnbCharge4RentalChanging(value);
					this.SendPropertyChanging();
					this._bCharge4Rental = value;
					this.SendPropertyChanged("bCharge4Rental");
					this.OnbCharge4RentalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_OPERATION", Storage="_OPERATIONs", ThisKey="ID", OtherKey="iChargeCode")]
		public EntitySet<OPERATION> OPERATIONs
		{
			get
			{
				return this._OPERATIONs;
			}
			set
			{
				this._OPERATIONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_CHARGECODESINRATE", Storage="_CHARGECODESINRATEs", ThisKey="ID", OtherKey="iChargeCode")]
		public EntitySet<CHARGECODESINRATE> CHARGECODESINRATEs
		{
			get
			{
				return this._CHARGECODESINRATEs;
			}
			set
			{
				this._CHARGECODESINRATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_CHARGECODE", Storage="_CHARGECODE2", ThisKey="ID", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public CHARGECODE CHARGECODE2
		{
			get
			{
				return this._CHARGECODE2.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE2.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE2.Entity = null;
						previousValue.CHARGECODE1 = null;
					}
					this._CHARGECODE2.Entity = value;
					if ((value != null))
					{
						value.CHARGECODE1 = this;
					}
					this.SendPropertyChanged("CHARGECODE2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHARGECODE_CHARGECODE", Storage="_CHARGECODE1", ThisKey="ID", OtherKey="ID", IsForeignKey=true)]
		public CHARGECODE CHARGECODE1
		{
			get
			{
				return this._CHARGECODE1.Entity;
			}
			set
			{
				CHARGECODE previousValue = this._CHARGECODE1.Entity;
				if (((previousValue != value) 
							|| (this._CHARGECODE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHARGECODE1.Entity = null;
						previousValue.CHARGECODE2 = null;
					}
					this._CHARGECODE1.Entity = value;
					if ((value != null))
					{
						value.CHARGECODE2 = this;
						this._ID = value.ID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("CHARGECODE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = this;
		}
		
		private void detach_OPERATIONs(OPERATION entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = null;
		}
		
		private void attach_CHARGECODESINRATEs(CHARGECODESINRATE entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = this;
		}
		
		private void detach_CHARGECODESINRATEs(CHARGECODESINRATE entity)
		{
			this.SendPropertyChanging();
			entity.CHARGECODE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SFV_InvoiceDetails")]
	public partial class SFV_InvoiceDetail
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTimeOffset> _DInvoice;
		
		private string _sDisplayName;
		
		private System.DateTimeOffset _DFrom;
		
		private System.DateTimeOffset _DTo;
		
		private bool _bClosed;
		
		private string _sDescription;
		
		private decimal _mUnitPrice;
		
		private System.Nullable<decimal> _InvTotal;
		
		public SFV_InvoiceDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DInvoice", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DInvoice
		{
			get
			{
				return this._DInvoice;
			}
			set
			{
				if ((this._DInvoice != value))
				{
					this._DInvoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFrom
		{
			get
			{
				return this._DFrom;
			}
			set
			{
				if ((this._DFrom != value))
				{
					this._DFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this._DTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bClosed", DbType="Bit NOT NULL")]
		public bool bClosed
		{
			get
			{
				return this._bClosed;
			}
			set
			{
				if ((this._bClosed != value))
				{
					this._bClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this._sDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mUnitPrice", DbType="Money NOT NULL")]
		public decimal mUnitPrice
		{
			get
			{
				return this._mUnitPrice;
			}
			set
			{
				if ((this._mUnitPrice != value))
				{
					this._mUnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvTotal", DbType="Money")]
		public System.Nullable<decimal> InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this._InvTotal = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
		private EntitySet<PEOPLEQUALIFIC> _PEOPLEQUALIFICs;
		
		private EntitySet<INVOICE> _INVOICEs;
		
		private EntitySet<FLYINGCHARGE> _FLYINGCHARGEs;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    #endregion
		
		public PEOPLE()
		{
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			this._PEOPLEQUALIFICs = new EntitySet<PEOPLEQUALIFIC>(new Action<PEOPLEQUALIFIC>(this.attach_PEOPLEQUALIFICs), new Action<PEOPLEQUALIFIC>(this.detach_PEOPLEQUALIFICs));
			this._INVOICEs = new EntitySet<INVOICE>(new Action<INVOICE>(this.attach_INVOICEs), new Action<INVOICE>(this.detach_INVOICEs));
			this._FLYINGCHARGEs = new EntitySet<FLYINGCHARGE>(new Action<FLYINGCHARGE>(this.attach_FLYINGCHARGEs), new Action<FLYINGCHARGE>(this.detach_FLYINGCHARGEs));
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEQUALIFIC", Storage="_PEOPLEQUALIFICs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLEQUALIFIC> PEOPLEQUALIFICs
		{
			get
			{
				return this._PEOPLEQUALIFICs;
			}
			set
			{
				this._PEOPLEQUALIFICs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_INVOICE", Storage="_INVOICEs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<INVOICE> INVOICEs
		{
			get
			{
				return this._INVOICEs;
			}
			set
			{
				this._INVOICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_FLYINGCHARGE", Storage="_FLYINGCHARGEs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<FLYINGCHARGE> FLYINGCHARGEs
		{
			get
			{
				return this._FLYINGCHARGEs;
			}
			set
			{
				this._FLYINGCHARGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_INVOICEs(INVOICE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_FLYINGCHARGEs(FLYINGCHARGE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_FLYINGCHARGEs(FLYINGCHARGE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVIATORROLES")]
	public partial class AVIATORROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sAviatorRole;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsAviatorRoleChanging(string value);
    partial void OnsAviatorRoleChanged();
    #endregion
		
		public AVIATORROLE()
		{
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAviatorRole", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sAviatorRole
		{
			get
			{
				return this._sAviatorRole;
			}
			set
			{
				if ((this._sAviatorRole != value))
				{
					this.OnsAviatorRoleChanging(value);
					this.SendPropertyChanging();
					this._sAviatorRole = value;
					this.SendPropertyChanged("sAviatorRole");
					this.OnsAviatorRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AVIATORROLE_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iAviatorRole")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.AVIATORROLE = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.AVIATORROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLEQUALIFICS")]
	public partial class PEOPLEQUALIFIC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iQualification;
		
		private int _iRating;
		
		private int _iCertification;
		
		private System.Nullable<System.DateTime> _DSince;
		
		private System.Nullable<System.DateTime> _DExpiry;
		
		private string _sAdditionalInfo;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
		private EntityRef<CERTIFICATION> _CERTIFICATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniQualificationChanging(int value);
    partial void OniQualificationChanged();
    partial void OniRatingChanging(int value);
    partial void OniRatingChanged();
    partial void OniCertificationChanging(int value);
    partial void OniCertificationChanged();
    partial void OnDSinceChanging(System.Nullable<System.DateTime> value);
    partial void OnDSinceChanged();
    partial void OnDExpiryChanging(System.Nullable<System.DateTime> value);
    partial void OnDExpiryChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public PEOPLEQUALIFIC()
		{
			this._PEOPLE = default(EntityRef<PEOPLE>);
			this._CERTIFICATION = default(EntityRef<CERTIFICATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQualification", DbType="Int NOT NULL")]
		public int iQualification
		{
			get
			{
				return this._iQualification;
			}
			set
			{
				if ((this._iQualification != value))
				{
					this.OniQualificationChanging(value);
					this.SendPropertyChanging();
					this._iQualification = value;
					this.SendPropertyChanged("iQualification");
					this.OniQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRating", DbType="Int NOT NULL")]
		public int iRating
		{
			get
			{
				return this._iRating;
			}
			set
			{
				if ((this._iRating != value))
				{
					this.OniRatingChanging(value);
					this.SendPropertyChanging();
					this._iRating = value;
					this.SendPropertyChanged("iRating");
					this.OniRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iCertification", DbType="Int NOT NULL")]
		public int iCertification
		{
			get
			{
				return this._iCertification;
			}
			set
			{
				if ((this._iCertification != value))
				{
					if (this._CERTIFICATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniCertificationChanging(value);
					this.SendPropertyChanging();
					this._iCertification = value;
					this.SendPropertyChanged("iCertification");
					this.OniCertificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSince", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DSince
		{
			get
			{
				return this._DSince;
			}
			set
			{
				if ((this._DSince != value))
				{
					this.OnDSinceChanging(value);
					this.SendPropertyChanging();
					this._DSince = value;
					this.SendPropertyChanged("DSince");
					this.OnDSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DExpiry", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DExpiry
		{
			get
			{
				return this._DExpiry;
			}
			set
			{
				if ((this._DExpiry != value))
				{
					this.OnDExpiryChanging(value);
					this.SendPropertyChanging();
					this._DExpiry = value;
					this.SendPropertyChanged("DExpiry");
					this.OnDExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEQUALIFIC", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLEQUALIFICs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLEQUALIFICs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CERTIFICATION_PEOPLEQUALIFIC", Storage="_CERTIFICATION", ThisKey="iCertification", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CERTIFICATION CERTIFICATION
		{
			get
			{
				return this._CERTIFICATION.Entity;
			}
			set
			{
				CERTIFICATION previousValue = this._CERTIFICATION.Entity;
				if (((previousValue != value) 
							|| (this._CERTIFICATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CERTIFICATION.Entity = null;
						previousValue.PEOPLEQUALIFICs.Remove(this);
					}
					this._CERTIFICATION.Entity = value;
					if ((value != null))
					{
						value.PEOPLEQUALIFICs.Add(this);
						this._iCertification = value.ID;
					}
					else
					{
						this._iCertification = default(int);
					}
					this.SendPropertyChanged("CERTIFICATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CERTIFICATIONS")]
	public partial class CERTIFICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sCertification;
		
		private EntitySet<PEOPLEQUALIFIC> _PEOPLEQUALIFICs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsCertificationChanging(string value);
    partial void OnsCertificationChanged();
    #endregion
		
		public CERTIFICATION()
		{
			this._PEOPLEQUALIFICs = new EntitySet<PEOPLEQUALIFIC>(new Action<PEOPLEQUALIFIC>(this.attach_PEOPLEQUALIFICs), new Action<PEOPLEQUALIFIC>(this.detach_PEOPLEQUALIFICs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCertification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sCertification
		{
			get
			{
				return this._sCertification;
			}
			set
			{
				if ((this._sCertification != value))
				{
					this.OnsCertificationChanging(value);
					this.SendPropertyChanging();
					this._sCertification = value;
					this.SendPropertyChanged("sCertification");
					this.OnsCertificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CERTIFICATION_PEOPLEQUALIFIC", Storage="_PEOPLEQUALIFICs", ThisKey="ID", OtherKey="iCertification")]
		public EntitySet<PEOPLEQUALIFIC> PEOPLEQUALIFICs
		{
			get
			{
				return this._PEOPLEQUALIFICs;
			}
			set
			{
				this._PEOPLEQUALIFICs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.CERTIFICATION = this;
		}
		
		private void detach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.CERTIFICATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QBO_ITEMNAMES")]
	public partial class QBO_ITEMNAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sQBO_ItemName;
		
		private EntitySet<INVLINE> _INVLINEs;
		
		private EntitySet<RATE> _RATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsQBO_ItemNameChanging(string value);
    partial void OnsQBO_ItemNameChanged();
    #endregion
		
		public QBO_ITEMNAME()
		{
			this._INVLINEs = new EntitySet<INVLINE>(new Action<INVLINE>(this.attach_INVLINEs), new Action<INVLINE>(this.detach_INVLINEs));
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sQBO_ItemName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sQBO_ItemName
		{
			get
			{
				return this._sQBO_ItemName;
			}
			set
			{
				if ((this._sQBO_ItemName != value))
				{
					this.OnsQBO_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._sQBO_ItemName = value;
					this.SendPropertyChanged("sQBO_ItemName");
					this.OnsQBO_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QBO_ITEMNAME_INVLINE", Storage="_INVLINEs", ThisKey="ID", OtherKey="iQBO_ItemName")]
		public EntitySet<INVLINE> INVLINEs
		{
			get
			{
				return this._INVLINEs;
			}
			set
			{
				this._INVLINEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QBO_ITEMNAME_RATE", Storage="_RATEs", ThisKey="ID", OtherKey="iQBO_ItemName")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INVLINEs(INVLINE entity)
		{
			this.SendPropertyChanging();
			entity.QBO_ITEMNAME = this;
		}
		
		private void detach_INVLINEs(INVLINE entity)
		{
			this.SendPropertyChanging();
			entity.QBO_ITEMNAME = null;
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.QBO_ITEMNAME = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.QBO_ITEMNAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVLINES")]
	public partial class INVLINE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iInvoice;
		
		private System.DateTimeOffset _DService;
		
		private string _sDescription;
		
		private decimal _dQuantity;
		
		private decimal _mUnitPrice;
		
		private System.Nullable<int> _iQBO_ItemName;
		
		private int _iOperation;
		
		private EntityRef<QBO_ITEMNAME> _QBO_ITEMNAME;
		
		private EntityRef<INVOICE> _INVOICE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniInvoiceChanging(int value);
    partial void OniInvoiceChanged();
    partial void OnDServiceChanging(System.DateTimeOffset value);
    partial void OnDServiceChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OndQuantityChanging(decimal value);
    partial void OndQuantityChanged();
    partial void OnmUnitPriceChanging(decimal value);
    partial void OnmUnitPriceChanged();
    partial void OniQBO_ItemNameChanging(System.Nullable<int> value);
    partial void OniQBO_ItemNameChanged();
    partial void OniOperationChanging(int value);
    partial void OniOperationChanged();
    #endregion
		
		public INVLINE()
		{
			this._QBO_ITEMNAME = default(EntityRef<QBO_ITEMNAME>);
			this._INVOICE = default(EntityRef<INVOICE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iInvoice", DbType="Int NOT NULL")]
		public int iInvoice
		{
			get
			{
				return this._iInvoice;
			}
			set
			{
				if ((this._iInvoice != value))
				{
					if (this._INVOICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniInvoiceChanging(value);
					this.SendPropertyChanging();
					this._iInvoice = value;
					this.SendPropertyChanged("iInvoice");
					this.OniInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DService", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DService
		{
			get
			{
				return this._DService;
			}
			set
			{
				if ((this._DService != value))
				{
					this.OnDServiceChanging(value);
					this.SendPropertyChanging();
					this._DService = value;
					this.SendPropertyChanged("DService");
					this.OnDServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dQuantity", DbType="Decimal(9,4) NOT NULL")]
		public decimal dQuantity
		{
			get
			{
				return this._dQuantity;
			}
			set
			{
				if ((this._dQuantity != value))
				{
					this.OndQuantityChanging(value);
					this.SendPropertyChanging();
					this._dQuantity = value;
					this.SendPropertyChanged("dQuantity");
					this.OndQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mUnitPrice", DbType="Money NOT NULL")]
		public decimal mUnitPrice
		{
			get
			{
				return this._mUnitPrice;
			}
			set
			{
				if ((this._mUnitPrice != value))
				{
					this.OnmUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._mUnitPrice = value;
					this.SendPropertyChanged("mUnitPrice");
					this.OnmUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQBO_ItemName", DbType="Int")]
		public System.Nullable<int> iQBO_ItemName
		{
			get
			{
				return this._iQBO_ItemName;
			}
			set
			{
				if ((this._iQBO_ItemName != value))
				{
					if (this._QBO_ITEMNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniQBO_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._iQBO_ItemName = value;
					this.SendPropertyChanged("iQBO_ItemName");
					this.OniQBO_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOperation", DbType="Int NOT NULL")]
		public int iOperation
		{
			get
			{
				return this._iOperation;
			}
			set
			{
				if ((this._iOperation != value))
				{
					this.OniOperationChanging(value);
					this.SendPropertyChanging();
					this._iOperation = value;
					this.SendPropertyChanged("iOperation");
					this.OniOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QBO_ITEMNAME_INVLINE", Storage="_QBO_ITEMNAME", ThisKey="iQBO_ItemName", OtherKey="ID", IsForeignKey=true)]
		public QBO_ITEMNAME QBO_ITEMNAME
		{
			get
			{
				return this._QBO_ITEMNAME.Entity;
			}
			set
			{
				QBO_ITEMNAME previousValue = this._QBO_ITEMNAME.Entity;
				if (((previousValue != value) 
							|| (this._QBO_ITEMNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QBO_ITEMNAME.Entity = null;
						previousValue.INVLINEs.Remove(this);
					}
					this._QBO_ITEMNAME.Entity = value;
					if ((value != null))
					{
						value.INVLINEs.Add(this);
						this._iQBO_ItemName = value.ID;
					}
					else
					{
						this._iQBO_ItemName = default(Nullable<int>);
					}
					this.SendPropertyChanged("QBO_ITEMNAME");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_INVLINE", Storage="_INVOICE", ThisKey="iInvoice", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public INVOICE INVOICE
		{
			get
			{
				return this._INVOICE.Entity;
			}
			set
			{
				INVOICE previousValue = this._INVOICE.Entity;
				if (((previousValue != value) 
							|| (this._INVOICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._INVOICE.Entity = null;
						previousValue.INVLINEs.Remove(this);
					}
					this._INVOICE.Entity = value;
					if ((value != null))
					{
						value.INVLINEs.Add(this);
						this._iInvoice = value.ID;
					}
					else
					{
						this._iInvoice = default(int);
					}
					this.SendPropertyChanged("INVOICE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERSHIPCATEGORIES")]
	public partial class MEMBERSHIPCATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sMembershipCategory;
		
		private EntitySet<MINFLYCHGPAR> _MINFLYCHGPARs;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsMembershipCategoryChanging(string value);
    partial void OnsMembershipCategoryChanged();
    #endregion
		
		public MEMBERSHIPCATEGORy()
		{
			this._MINFLYCHGPARs = new EntitySet<MINFLYCHGPAR>(new Action<MINFLYCHGPAR>(this.attach_MINFLYCHGPARs), new Action<MINFLYCHGPAR>(this.detach_MINFLYCHGPARs));
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMembershipCategory", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sMembershipCategory
		{
			get
			{
				return this._sMembershipCategory;
			}
			set
			{
				if ((this._sMembershipCategory != value))
				{
					this.OnsMembershipCategoryChanging(value);
					this.SendPropertyChanging();
					this._sMembershipCategory = value;
					this.SendPropertyChanged("sMembershipCategory");
					this.OnsMembershipCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MINFLYCHGPAR", Storage="_MINFLYCHGPARs", ThisKey="ID", OtherKey="iMembershipCategory")]
		public EntitySet<MINFLYCHGPAR> MINFLYCHGPARs
		{
			get
			{
				return this._MINFLYCHGPARs;
			}
			set
			{
				this._MINFLYCHGPARs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iMemberCategory")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MINFLYCHGPARs(MINFLYCHGPAR entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = this;
		}
		
		private void detach_MINFLYCHGPARs(MINFLYCHGPAR entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = null;
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MINFLYCHGPARS")]
	public partial class MINFLYCHGPAR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private System.DateTimeOffset _DFrom;
		
		private System.DateTimeOffset _DTo;
		
		private int _iMembershipCategory;
		
		private decimal _mMinMonthlyFlyChrg;
		
		private string _sComments;
		
		private EntityRef<MEMBERSHIPCATEGORy> _MEMBERSHIPCATEGORy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OnDFromChanging(System.DateTimeOffset value);
    partial void OnDFromChanged();
    partial void OnDToChanging(System.DateTimeOffset value);
    partial void OnDToChanged();
    partial void OniMembershipCategoryChanging(int value);
    partial void OniMembershipCategoryChanged();
    partial void OnmMinMonthlyFlyChrgChanging(decimal value);
    partial void OnmMinMonthlyFlyChrgChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public MINFLYCHGPAR()
		{
			this._MEMBERSHIPCATEGORy = default(EntityRef<MEMBERSHIPCATEGORy>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFrom
		{
			get
			{
				return this._DFrom;
			}
			set
			{
				if ((this._DFrom != value))
				{
					this.OnDFromChanging(value);
					this.SendPropertyChanging();
					this._DFrom = value;
					this.SendPropertyChanged("DFrom");
					this.OnDFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this.OnDToChanging(value);
					this.SendPropertyChanging();
					this._DTo = value;
					this.SendPropertyChanged("DTo");
					this.OnDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMembershipCategory", DbType="Int NOT NULL")]
		public int iMembershipCategory
		{
			get
			{
				return this._iMembershipCategory;
			}
			set
			{
				if ((this._iMembershipCategory != value))
				{
					if (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMembershipCategoryChanging(value);
					this.SendPropertyChanging();
					this._iMembershipCategory = value;
					this.SendPropertyChanged("iMembershipCategory");
					this.OniMembershipCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mMinMonthlyFlyChrg", DbType="Money NOT NULL")]
		public decimal mMinMonthlyFlyChrg
		{
			get
			{
				return this._mMinMonthlyFlyChrg;
			}
			set
			{
				if ((this._mMinMonthlyFlyChrg != value))
				{
					this.OnmMinMonthlyFlyChrgChanging(value);
					this.SendPropertyChanging();
					this._mMinMonthlyFlyChrg = value;
					this.SendPropertyChanged("mMinMonthlyFlyChrg");
					this.OnmMinMonthlyFlyChrgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MINFLYCHGPAR", Storage="_MEMBERSHIPCATEGORy", ThisKey="iMembershipCategory", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEMBERSHIPCATEGORy MEMBERSHIPCATEGORy
		{
			get
			{
				return this._MEMBERSHIPCATEGORy.Entity;
			}
			set
			{
				MEMBERSHIPCATEGORy previousValue = this._MEMBERSHIPCATEGORy.Entity;
				if (((previousValue != value) 
							|| (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEMBERSHIPCATEGORy.Entity = null;
						previousValue.MINFLYCHGPARs.Remove(this);
					}
					this._MEMBERSHIPCATEGORy.Entity = value;
					if ((value != null))
					{
						value.MINFLYCHGPARs.Add(this);
						this._iMembershipCategory = value.ID;
					}
					else
					{
						this._iMembershipCategory = default(int);
					}
					this.SendPropertyChanged("MEMBERSHIPCATEGORy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICES")]
	public partial class INVOICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private System.Nullable<System.DateTimeOffset> _DInvoice;
		
		private int _iPerson;
		
		private int _iDaysToDue;
		
		private System.DateTimeOffset _DFrom;
		
		private System.DateTimeOffset _DTo;
		
		private System.Nullable<decimal> _mTotalAmt;
		
		private System.Nullable<decimal> _mBalance;
		
		private bool _bClosed;
		
		private int _iInvoiceSource;
		
		private EntitySet<INVLINE> _INVLINEs;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OnDInvoiceChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDInvoiceChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniDaysToDueChanging(int value);
    partial void OniDaysToDueChanged();
    partial void OnDFromChanging(System.DateTimeOffset value);
    partial void OnDFromChanged();
    partial void OnDToChanging(System.DateTimeOffset value);
    partial void OnDToChanged();
    partial void OnmTotalAmtChanging(System.Nullable<decimal> value);
    partial void OnmTotalAmtChanged();
    partial void OnmBalanceChanging(System.Nullable<decimal> value);
    partial void OnmBalanceChanged();
    partial void OnbClosedChanging(bool value);
    partial void OnbClosedChanged();
    partial void OniInvoiceSourceChanging(int value);
    partial void OniInvoiceSourceChanged();
    #endregion
		
		public INVOICE()
		{
			this._INVLINEs = new EntitySet<INVLINE>(new Action<INVLINE>(this.attach_INVLINEs), new Action<INVLINE>(this.detach_INVLINEs));
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DInvoice", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DInvoice
		{
			get
			{
				return this._DInvoice;
			}
			set
			{
				if ((this._DInvoice != value))
				{
					this.OnDInvoiceChanging(value);
					this.SendPropertyChanging();
					this._DInvoice = value;
					this.SendPropertyChanged("DInvoice");
					this.OnDInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDaysToDue", DbType="Int NOT NULL")]
		public int iDaysToDue
		{
			get
			{
				return this._iDaysToDue;
			}
			set
			{
				if ((this._iDaysToDue != value))
				{
					this.OniDaysToDueChanging(value);
					this.SendPropertyChanging();
					this._iDaysToDue = value;
					this.SendPropertyChanged("iDaysToDue");
					this.OniDaysToDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFrom
		{
			get
			{
				return this._DFrom;
			}
			set
			{
				if ((this._DFrom != value))
				{
					this.OnDFromChanging(value);
					this.SendPropertyChanging();
					this._DFrom = value;
					this.SendPropertyChanged("DFrom");
					this.OnDFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this.OnDToChanging(value);
					this.SendPropertyChanging();
					this._DTo = value;
					this.SendPropertyChanged("DTo");
					this.OnDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mTotalAmt", DbType="Money")]
		public System.Nullable<decimal> mTotalAmt
		{
			get
			{
				return this._mTotalAmt;
			}
			set
			{
				if ((this._mTotalAmt != value))
				{
					this.OnmTotalAmtChanging(value);
					this.SendPropertyChanging();
					this._mTotalAmt = value;
					this.SendPropertyChanged("mTotalAmt");
					this.OnmTotalAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mBalance", DbType="Money")]
		public System.Nullable<decimal> mBalance
		{
			get
			{
				return this._mBalance;
			}
			set
			{
				if ((this._mBalance != value))
				{
					this.OnmBalanceChanging(value);
					this.SendPropertyChanging();
					this._mBalance = value;
					this.SendPropertyChanged("mBalance");
					this.OnmBalanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bClosed", DbType="Bit NOT NULL")]
		public bool bClosed
		{
			get
			{
				return this._bClosed;
			}
			set
			{
				if ((this._bClosed != value))
				{
					this.OnbClosedChanging(value);
					this.SendPropertyChanging();
					this._bClosed = value;
					this.SendPropertyChanged("bClosed");
					this.OnbClosedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iInvoiceSource", DbType="Int NOT NULL")]
		public int iInvoiceSource
		{
			get
			{
				return this._iInvoiceSource;
			}
			set
			{
				if ((this._iInvoiceSource != value))
				{
					this.OniInvoiceSourceChanging(value);
					this.SendPropertyChanging();
					this._iInvoiceSource = value;
					this.SendPropertyChanged("iInvoiceSource");
					this.OniInvoiceSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="INVOICE_INVLINE", Storage="_INVLINEs", ThisKey="ID", OtherKey="iInvoice")]
		public EntitySet<INVLINE> INVLINEs
		{
			get
			{
				return this._INVLINEs;
			}
			set
			{
				this._INVLINEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_INVOICE", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.INVOICEs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.INVOICEs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_INVLINEs(INVLINE entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = this;
		}
		
		private void detach_INVLINEs(INVLINE entity)
		{
			this.SendPropertyChanging();
			entity.INVOICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FLYINGCHARGES")]
	public partial class FLYINGCHARGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private decimal _mAmount;
		
		private System.DateTimeOffset _DateOfAmount;
		
		private char _cTypeOfAmount;
		
		private bool _bManuallyModified;
		
		private string _sComments;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OnmAmountChanging(decimal value);
    partial void OnmAmountChanged();
    partial void OnDateOfAmountChanging(System.DateTimeOffset value);
    partial void OnDateOfAmountChanged();
    partial void OncTypeOfAmountChanging(char value);
    partial void OncTypeOfAmountChanged();
    partial void OnbManuallyModifiedChanging(bool value);
    partial void OnbManuallyModifiedChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public FLYINGCHARGE()
		{
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAmount", DbType="Money NOT NULL")]
		public decimal mAmount
		{
			get
			{
				return this._mAmount;
			}
			set
			{
				if ((this._mAmount != value))
				{
					this.OnmAmountChanging(value);
					this.SendPropertyChanging();
					this._mAmount = value;
					this.SendPropertyChanged("mAmount");
					this.OnmAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfAmount", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DateOfAmount
		{
			get
			{
				return this._DateOfAmount;
			}
			set
			{
				if ((this._DateOfAmount != value))
				{
					this.OnDateOfAmountChanging(value);
					this.SendPropertyChanging();
					this._DateOfAmount = value;
					this.SendPropertyChanged("DateOfAmount");
					this.OnDateOfAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cTypeOfAmount", DbType="Char(1) NOT NULL")]
		public char cTypeOfAmount
		{
			get
			{
				return this._cTypeOfAmount;
			}
			set
			{
				if ((this._cTypeOfAmount != value))
				{
					this.OncTypeOfAmountChanging(value);
					this.SendPropertyChanging();
					this._cTypeOfAmount = value;
					this.SendPropertyChanged("cTypeOfAmount");
					this.OncTypeOfAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bManuallyModified", DbType="Bit NOT NULL")]
		public bool bManuallyModified
		{
			get
			{
				return this._bManuallyModified;
			}
			set
			{
				if ((this._bManuallyModified != value))
				{
					this.OnbManuallyModifiedChanging(value);
					this.SendPropertyChanging();
					this._bManuallyModified = value;
					this.SendPropertyChanged("bManuallyModified");
					this.OnbManuallyModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_FLYINGCHARGE", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.FLYINGCHARGEs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.FLYINGCHARGEs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERFROMTO")]
	public partial class MEMBERFROMTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iMemberCategory;
		
		private System.DateTimeOffset _DMembershipBegin;
		
		private System.DateTimeOffset _DMembershipEnd;
		
		private string _sAdditionalInfo;
		
		private EntityRef<MEMBERSHIPCATEGORy> _MEMBERSHIPCATEGORy;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniMemberCategoryChanging(int value);
    partial void OniMemberCategoryChanged();
    partial void OnDMembershipBeginChanging(System.DateTimeOffset value);
    partial void OnDMembershipBeginChanged();
    partial void OnDMembershipEndChanging(System.DateTimeOffset value);
    partial void OnDMembershipEndChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public MEMBERFROMTO()
		{
			this._MEMBERSHIPCATEGORy = default(EntityRef<MEMBERSHIPCATEGORy>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMemberCategory", DbType="Int NOT NULL")]
		public int iMemberCategory
		{
			get
			{
				return this._iMemberCategory;
			}
			set
			{
				if ((this._iMemberCategory != value))
				{
					if (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._iMemberCategory = value;
					this.SendPropertyChanged("iMemberCategory");
					this.OniMemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipBegin
		{
			get
			{
				return this._DMembershipBegin;
			}
			set
			{
				if ((this._DMembershipBegin != value))
				{
					this.OnDMembershipBeginChanging(value);
					this.SendPropertyChanging();
					this._DMembershipBegin = value;
					this.SendPropertyChanged("DMembershipBegin");
					this.OnDMembershipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipEnd
		{
			get
			{
				return this._DMembershipEnd;
			}
			set
			{
				if ((this._DMembershipEnd != value))
				{
					this.OnDMembershipEndChanging(value);
					this.SendPropertyChanging();
					this._DMembershipEnd = value;
					this.SendPropertyChanged("DMembershipEnd");
					this.OnDMembershipEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="VarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MEMBERFROMTO", Storage="_MEMBERSHIPCATEGORy", ThisKey="iMemberCategory", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEMBERSHIPCATEGORy MEMBERSHIPCATEGORy
		{
			get
			{
				return this._MEMBERSHIPCATEGORy.Entity;
			}
			set
			{
				MEMBERSHIPCATEGORy previousValue = this._MEMBERSHIPCATEGORy.Entity;
				if (((previousValue != value) 
							|| (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEMBERSHIPCATEGORy.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._MEMBERSHIPCATEGORy.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iMemberCategory = value.ID;
					}
					else
					{
						this._iMemberCategory = default(int);
					}
					this.SendPropertyChanged("MEMBERSHIPCATEGORy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RATES")]
	public partial class RATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sShortName;
		
		private System.DateTimeOffset _Dfrom;
		
		private System.DateTimeOffset _DTo;
		
		private int _iEquipType;
		
		private int _iLaunchMethod;
		
		private string _sChargeCodes;
		
		private decimal _mSingleDpUse;
		
		private int _iNoChrg1stFt;
		
		private decimal _mAltDiffDpFt;
		
		private int _iNoChrg1stMin;
		
		private decimal _mDurationDpMin;
		
		private string _sComment;
		
		private int _iQBO_ItemName;
		
		private int _iDurCapMin;
		
		private int _iFA_Item;
		
		private int _iFA_PmtTerm;
		
		private EntitySet<CHARGECODESINRATE> _CHARGECODESINRATEs;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
		private EntityRef<QBO_ITEMNAME> _QBO_ITEMNAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsShortNameChanging(string value);
    partial void OnsShortNameChanged();
    partial void OnDfromChanging(System.DateTimeOffset value);
    partial void OnDfromChanged();
    partial void OnDToChanging(System.DateTimeOffset value);
    partial void OnDToChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OnsChargeCodesChanging(string value);
    partial void OnsChargeCodesChanged();
    partial void OnmSingleDpUseChanging(decimal value);
    partial void OnmSingleDpUseChanged();
    partial void OniNoChrg1stFtChanging(int value);
    partial void OniNoChrg1stFtChanged();
    partial void OnmAltDiffDpFtChanging(decimal value);
    partial void OnmAltDiffDpFtChanged();
    partial void OniNoChrg1stMinChanging(int value);
    partial void OniNoChrg1stMinChanged();
    partial void OnmDurationDpMinChanging(decimal value);
    partial void OnmDurationDpMinChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniQBO_ItemNameChanging(int value);
    partial void OniQBO_ItemNameChanged();
    partial void OniDurCapMinChanging(int value);
    partial void OniDurCapMinChanged();
    partial void OniFA_ItemChanging(int value);
    partial void OniFA_ItemChanged();
    partial void OniFA_PmtTermChanging(int value);
    partial void OniFA_PmtTermChanged();
    #endregion
		
		public RATE()
		{
			this._CHARGECODESINRATEs = new EntitySet<CHARGECODESINRATE>(new Action<CHARGECODESINRATE>(this.attach_CHARGECODESINRATEs), new Action<CHARGECODESINRATE>(this.detach_CHARGECODESINRATEs));
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			this._QBO_ITEMNAME = default(EntityRef<QBO_ITEMNAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sShortName
		{
			get
			{
				return this._sShortName;
			}
			set
			{
				if ((this._sShortName != value))
				{
					this.OnsShortNameChanging(value);
					this.SendPropertyChanging();
					this._sShortName = value;
					this.SendPropertyChanged("sShortName");
					this.OnsShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dfrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Dfrom
		{
			get
			{
				return this._Dfrom;
			}
			set
			{
				if ((this._Dfrom != value))
				{
					this.OnDfromChanging(value);
					this.SendPropertyChanging();
					this._Dfrom = value;
					this.SendPropertyChanged("Dfrom");
					this.OnDfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this.OnDToChanging(value);
					this.SendPropertyChanging();
					this._DTo = value;
					this.SendPropertyChanged("DTo");
					this.OnDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCodes", DbType="VarChar(26) NOT NULL", CanBeNull=false)]
		public string sChargeCodes
		{
			get
			{
				return this._sChargeCodes;
			}
			set
			{
				if ((this._sChargeCodes != value))
				{
					this.OnsChargeCodesChanging(value);
					this.SendPropertyChanging();
					this._sChargeCodes = value;
					this.SendPropertyChanged("sChargeCodes");
					this.OnsChargeCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mSingleDpUse", DbType="Money NOT NULL")]
		public decimal mSingleDpUse
		{
			get
			{
				return this._mSingleDpUse;
			}
			set
			{
				if ((this._mSingleDpUse != value))
				{
					this.OnmSingleDpUseChanging(value);
					this.SendPropertyChanging();
					this._mSingleDpUse = value;
					this.SendPropertyChanged("mSingleDpUse");
					this.OnmSingleDpUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stFt", DbType="Int NOT NULL")]
		public int iNoChrg1stFt
		{
			get
			{
				return this._iNoChrg1stFt;
			}
			set
			{
				if ((this._iNoChrg1stFt != value))
				{
					this.OniNoChrg1stFtChanging(value);
					this.SendPropertyChanging();
					this._iNoChrg1stFt = value;
					this.SendPropertyChanged("iNoChrg1stFt");
					this.OniNoChrg1stFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAltDiffDpFt", DbType="Money NOT NULL")]
		public decimal mAltDiffDpFt
		{
			get
			{
				return this._mAltDiffDpFt;
			}
			set
			{
				if ((this._mAltDiffDpFt != value))
				{
					this.OnmAltDiffDpFtChanging(value);
					this.SendPropertyChanging();
					this._mAltDiffDpFt = value;
					this.SendPropertyChanged("mAltDiffDpFt");
					this.OnmAltDiffDpFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stMin", DbType="Int NOT NULL")]
		public int iNoChrg1stMin
		{
			get
			{
				return this._iNoChrg1stMin;
			}
			set
			{
				if ((this._iNoChrg1stMin != value))
				{
					this.OniNoChrg1stMinChanging(value);
					this.SendPropertyChanging();
					this._iNoChrg1stMin = value;
					this.SendPropertyChanged("iNoChrg1stMin");
					this.OniNoChrg1stMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mDurationDpMin", DbType="Money NOT NULL")]
		public decimal mDurationDpMin
		{
			get
			{
				return this._mDurationDpMin;
			}
			set
			{
				if ((this._mDurationDpMin != value))
				{
					this.OnmDurationDpMinChanging(value);
					this.SendPropertyChanging();
					this._mDurationDpMin = value;
					this.SendPropertyChanged("mDurationDpMin");
					this.OnmDurationDpMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQBO_ItemName", DbType="Int NOT NULL")]
		public int iQBO_ItemName
		{
			get
			{
				return this._iQBO_ItemName;
			}
			set
			{
				if ((this._iQBO_ItemName != value))
				{
					if (this._QBO_ITEMNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniQBO_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._iQBO_ItemName = value;
					this.SendPropertyChanged("iQBO_ItemName");
					this.OniQBO_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDurCapMin", DbType="Int NOT NULL")]
		public int iDurCapMin
		{
			get
			{
				return this._iDurCapMin;
			}
			set
			{
				if ((this._iDurCapMin != value))
				{
					this.OniDurCapMinChanging(value);
					this.SendPropertyChanging();
					this._iDurCapMin = value;
					this.SendPropertyChanged("iDurCapMin");
					this.OniDurCapMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_Item", DbType="Int NOT NULL")]
		public int iFA_Item
		{
			get
			{
				return this._iFA_Item;
			}
			set
			{
				if ((this._iFA_Item != value))
				{
					this.OniFA_ItemChanging(value);
					this.SendPropertyChanging();
					this._iFA_Item = value;
					this.SendPropertyChanged("iFA_Item");
					this.OniFA_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_PmtTerm", DbType="Int NOT NULL")]
		public int iFA_PmtTerm
		{
			get
			{
				return this._iFA_PmtTerm;
			}
			set
			{
				if ((this._iFA_PmtTerm != value))
				{
					this.OniFA_PmtTermChanging(value);
					this.SendPropertyChanging();
					this._iFA_PmtTerm = value;
					this.SendPropertyChanged("iFA_PmtTerm");
					this.OniFA_PmtTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RATE_CHARGECODESINRATE", Storage="_CHARGECODESINRATEs", ThisKey="ID", OtherKey="iRate")]
		public EntitySet<CHARGECODESINRATE> CHARGECODESINRATEs
		{
			get
			{
				return this._CHARGECODESINRATEs;
			}
			set
			{
				this._CHARGECODESINRATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_RATE", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QBO_ITEMNAME_RATE", Storage="_QBO_ITEMNAME", ThisKey="iQBO_ItemName", OtherKey="ID", IsForeignKey=true)]
		public QBO_ITEMNAME QBO_ITEMNAME
		{
			get
			{
				return this._QBO_ITEMNAME.Entity;
			}
			set
			{
				QBO_ITEMNAME previousValue = this._QBO_ITEMNAME.Entity;
				if (((previousValue != value) 
							|| (this._QBO_ITEMNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QBO_ITEMNAME.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._QBO_ITEMNAME.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._iQBO_ItemName = value.ID;
					}
					else
					{
						this._iQBO_ItemName = default(int);
					}
					this.SendPropertyChanged("QBO_ITEMNAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHARGECODESINRATEs(CHARGECODESINRATE entity)
		{
			this.SendPropertyChanging();
			entity.RATE = this;
		}
		
		private void detach_CHARGECODESINRATEs(CHARGECODESINRATE entity)
		{
			this.SendPropertyChanging();
			entity.RATE = null;
		}
	}
	
	public partial class spDDL_ChargeCodesResult
	{
		
		private int _ID;
		
		private string _sCode;
		
		public spDDL_ChargeCodesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCode", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string sCode
		{
			get
			{
				return this._sCode;
			}
			set
			{
				if ((this._sCode != value))
				{
					this._sCode = value;
				}
			}
		}
	}
	
	public partial class spMemberDisplayNamesResult
	{
		
		private int _ID;
		
		private string _sDisplayName;
		
		public spMemberDisplayNamesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
	}
	
	public partial class spMemberDisplayNamesInvResult
	{
		
		private int _ID;
		
		private string _sDisplayName;
		
		public spMemberDisplayNamesInvResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
	}
	
	public partial class spFlyOpsFromInvoiceResult
	{
		
		private System.Nullable<int> _iOperation;
		
		public spFlyOpsFromInvoiceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOperation", DbType="Int")]
		public System.Nullable<int> iOperation
		{
			get
			{
				return this._iOperation;
			}
			set
			{
				if ((this._iOperation != value))
				{
					this._iOperation = value;
				}
			}
		}
	}
	
	public partial class spSelectRateResult
	{
		
		private int _ID;
		
		private string _sShortName;
		
		private System.DateTimeOffset _Dfrom;
		
		private System.DateTimeOffset _DTo;
		
		private int _iEquipType;
		
		private int _iLaunchMethod;
		
		private string _sChargeCodes;
		
		private decimal _mSingleDpUse;
		
		private int _iNoChrg1stFt;
		
		private decimal _mAltDiffDpFt;
		
		private int _iNoChrg1stMin;
		
		private decimal _mDurationDpMin;
		
		private string _sComment;
		
		private int _iQBO_ItemName;
		
		private string _sQBO_ItemName;
		
		public spSelectRateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sShortName
		{
			get
			{
				return this._sShortName;
			}
			set
			{
				if ((this._sShortName != value))
				{
					this._sShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dfrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Dfrom
		{
			get
			{
				return this._Dfrom;
			}
			set
			{
				if ((this._Dfrom != value))
				{
					this._Dfrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this._DTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					this._iEquipType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this._iLaunchMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCodes", DbType="VarChar(26) NOT NULL", CanBeNull=false)]
		public string sChargeCodes
		{
			get
			{
				return this._sChargeCodes;
			}
			set
			{
				if ((this._sChargeCodes != value))
				{
					this._sChargeCodes = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mSingleDpUse", DbType="Money NOT NULL")]
		public decimal mSingleDpUse
		{
			get
			{
				return this._mSingleDpUse;
			}
			set
			{
				if ((this._mSingleDpUse != value))
				{
					this._mSingleDpUse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stFt", DbType="Int NOT NULL")]
		public int iNoChrg1stFt
		{
			get
			{
				return this._iNoChrg1stFt;
			}
			set
			{
				if ((this._iNoChrg1stFt != value))
				{
					this._iNoChrg1stFt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAltDiffDpFt", DbType="Money NOT NULL")]
		public decimal mAltDiffDpFt
		{
			get
			{
				return this._mAltDiffDpFt;
			}
			set
			{
				if ((this._mAltDiffDpFt != value))
				{
					this._mAltDiffDpFt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stMin", DbType="Int NOT NULL")]
		public int iNoChrg1stMin
		{
			get
			{
				return this._iNoChrg1stMin;
			}
			set
			{
				if ((this._iNoChrg1stMin != value))
				{
					this._iNoChrg1stMin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mDurationDpMin", DbType="Money NOT NULL")]
		public decimal mDurationDpMin
		{
			get
			{
				return this._mDurationDpMin;
			}
			set
			{
				if ((this._mDurationDpMin != value))
				{
					this._mDurationDpMin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this._sComment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQBO_ItemName", DbType="Int NOT NULL")]
		public int iQBO_ItemName
		{
			get
			{
				return this._iQBO_ItemName;
			}
			set
			{
				if ((this._iQBO_ItemName != value))
				{
					this._iQBO_ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sQBO_ItemName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sQBO_ItemName
		{
			get
			{
				return this._sQBO_ItemName;
			}
			set
			{
				if ((this._sQBO_ItemName != value))
				{
					this._sQBO_ItemName = value;
				}
			}
		}
	}
	
	public partial class spCheck4MFCOverlapResult
	{
		
		private string _Membership_Category;
		
		private System.DateTimeOffset _From_1;
		
		private System.DateTimeOffset _To_1;
		
		private System.DateTimeOffset _From_2;
		
		private System.DateTimeOffset _To_2;
		
		public spCheck4MFCOverlapResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Membership Category]", Storage="_Membership_Category", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string Membership_Category
		{
			get
			{
				return this._Membership_Category;
			}
			set
			{
				if ((this._Membership_Category != value))
				{
					this._Membership_Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From_1", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset From_1
		{
			get
			{
				return this._From_1;
			}
			set
			{
				if ((this._From_1 != value))
				{
					this._From_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_To_1", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset To_1
		{
			get
			{
				return this._To_1;
			}
			set
			{
				if ((this._To_1 != value))
				{
					this._To_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_From_2", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset From_2
		{
			get
			{
				return this._From_2;
			}
			set
			{
				if ((this._From_2 != value))
				{
					this._From_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_To_2", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset To_2
		{
			get
			{
				return this._To_2;
			}
			set
			{
				if ((this._To_2 != value))
				{
					this._To_2 = value;
				}
			}
		}
	}
	
	public partial class spGetMFCParsResult
	{
		
		private int _ID;
		
		private System.DateTimeOffset _DFrom;
		
		private System.DateTimeOffset _DTo;
		
		private int _iMembershipCategory;
		
		private string _sMembershipCategory;
		
		private string _sMinFlyChrg;
		
		private string _sComments;
		
		public spGetMFCParsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFrom
		{
			get
			{
				return this._DFrom;
			}
			set
			{
				if ((this._DFrom != value))
				{
					this._DFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this._DTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMembershipCategory", DbType="Int NOT NULL")]
		public int iMembershipCategory
		{
			get
			{
				return this._iMembershipCategory;
			}
			set
			{
				if ((this._iMembershipCategory != value))
				{
					this._iMembershipCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMembershipCategory", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sMembershipCategory
		{
			get
			{
				return this._sMembershipCategory;
			}
			set
			{
				if ((this._sMembershipCategory != value))
				{
					this._sMembershipCategory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMinFlyChrg", DbType="NVarChar(15)")]
		public string sMinFlyChrg
		{
			get
			{
				return this._sMinFlyChrg;
			}
			set
			{
				if ((this._sMinFlyChrg != value))
				{
					this._sMinFlyChrg = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this._sComments = value;
				}
			}
		}
	}
	
	public partial class spInvoiceDetailsResult
	{
		
		private int _ID;
		
		private System.Nullable<System.DateTimeOffset> _DInvoice;
		
		private string _sDisplayName;
		
		private System.DateTimeOffset _DFrom;
		
		private System.DateTimeOffset _DTo;
		
		private bool _bClosed;
		
		private string _sDescription;
		
		private decimal _mUnitPrice;
		
		private System.Nullable<decimal> _InvTotal;
		
		public spInvoiceDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DInvoice", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DInvoice
		{
			get
			{
				return this._DInvoice;
			}
			set
			{
				if ((this._DInvoice != value))
				{
					this._DInvoice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFrom
		{
			get
			{
				return this._DFrom;
			}
			set
			{
				if ((this._DFrom != value))
				{
					this._DFrom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this._DTo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bClosed", DbType="Bit NOT NULL")]
		public bool bClosed
		{
			get
			{
				return this._bClosed;
			}
			set
			{
				if ((this._bClosed != value))
				{
					this._bClosed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this._sDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mUnitPrice", DbType="Money NOT NULL")]
		public decimal mUnitPrice
		{
			get
			{
				return this._mUnitPrice;
			}
			set
			{
				if ((this._mUnitPrice != value))
				{
					this._mUnitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvTotal", DbType="Money")]
		public System.Nullable<decimal> InvTotal
		{
			get
			{
				return this._InvTotal;
			}
			set
			{
				if ((this._InvTotal != value))
				{
					this._InvTotal = value;
				}
			}
		}
	}
	
	public partial class spInvoiceSummariesResult
	{
		
		private int _ID;
		
		public spInvoiceSummariesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
	}
	
	public partial class spMembCatFromFlyChgResult
	{
		
		private string _sMembershipCategory;
		
		public spMembCatFromFlyChgResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMembershipCategory", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sMembershipCategory
		{
			get
			{
				return this._sMembershipCategory;
			}
			set
			{
				if ((this._sMembershipCategory != value))
				{
					this._sMembershipCategory = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
