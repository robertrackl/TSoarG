#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.MemberPages.MyMembership
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class MyMembershipDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void UpdateMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void DeleteMEMBERSHIPCATEGORy(MEMBERSHIPCATEGORy instance);
    partial void InsertSSA_MEMBERCATEGORy(SSA_MEMBERCATEGORy instance);
    partial void UpdateSSA_MEMBERCATEGORy(SSA_MEMBERCATEGORy instance);
    partial void DeleteSSA_MEMBERCATEGORy(SSA_MEMBERCATEGORy instance);
    partial void InsertPEOPLECONTACT(PEOPLECONTACT instance);
    partial void UpdatePEOPLECONTACT(PEOPLECONTACT instance);
    partial void DeletePEOPLECONTACT(PEOPLECONTACT instance);
    partial void InsertCONTACTTYPE(CONTACTTYPE instance);
    partial void UpdateCONTACTTYPE(CONTACTTYPE instance);
    partial void DeleteCONTACTTYPE(CONTACTTYPE instance);
    partial void InsertPHYSADDRESS(PHYSADDRESS instance);
    partial void UpdatePHYSADDRESS(PHYSADDRESS instance);
    partial void DeletePHYSADDRESS(PHYSADDRESS instance);
    partial void InsertBOARDOFFICE(BOARDOFFICE instance);
    partial void UpdateBOARDOFFICE(BOARDOFFICE instance);
    partial void DeleteBOARDOFFICE(BOARDOFFICE instance);
    partial void InsertFLYINGCHARGE(FLYINGCHARGE instance);
    partial void UpdateFLYINGCHARGE(FLYINGCHARGE instance);
    partial void DeleteFLYINGCHARGE(FLYINGCHARGE instance);
    partial void InsertPEOPLEQUALIFIC(PEOPLEQUALIFIC instance);
    partial void UpdatePEOPLEQUALIFIC(PEOPLEQUALIFIC instance);
    partial void DeletePEOPLEQUALIFIC(PEOPLEQUALIFIC instance);
    partial void InsertQUALIFICATION(QUALIFICATION instance);
    partial void UpdateQUALIFICATION(QUALIFICATION instance);
    partial void DeleteQUALIFICATION(QUALIFICATION instance);
    partial void InsertPEOPLECERTIFIC(PEOPLECERTIFIC instance);
    partial void UpdatePEOPLECERTIFIC(PEOPLECERTIFIC instance);
    partial void DeletePEOPLECERTIFIC(PEOPLECERTIFIC instance);
    partial void InsertCERTIFICATION(CERTIFICATION instance);
    partial void UpdateCERTIFICATION(CERTIFICATION instance);
    partial void DeleteCERTIFICATION(CERTIFICATION instance);
    partial void InsertPEOPLERATING(PEOPLERATING instance);
    partial void UpdatePEOPLERATING(PEOPLERATING instance);
    partial void DeletePEOPLERATING(PEOPLERATING instance);
    partial void InsertRATING(RATING instance);
    partial void UpdateRATING(RATING instance);
    partial void DeleteRATING(RATING instance);
    partial void InsertSSA_MEMBERFROMTO(SSA_MEMBERFROMTO instance);
    partial void UpdateSSA_MEMBERFROMTO(SSA_MEMBERFROMTO instance);
    partial void DeleteSSA_MEMBERFROMTO(SSA_MEMBERFROMTO instance);
    partial void InsertPEOPLEOFFICE(PEOPLEOFFICE instance);
    partial void UpdatePEOPLEOFFICE(PEOPLEOFFICE instance);
    partial void DeletePEOPLEOFFICE(PEOPLEOFFICE instance);
    partial void InsertMEMBERFROMTO(MEMBERFROMTO instance);
    partial void UpdateMEMBERFROMTO(MEMBERFROMTO instance);
    partial void DeleteMEMBERFROMTO(MEMBERFROMTO instance);
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    partial void InsertEQUITYSHARE(EQUITYSHARE instance);
    partial void UpdateEQUITYSHARE(EQUITYSHARE instance);
    partial void DeleteEQUITYSHARE(EQUITYSHARE instance);
    #endregion
		
		public MyMembershipDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyMembershipDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyMembershipDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyMembershipDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyMembershipDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<MEMBERSHIPCATEGORy> MEMBERSHIPCATEGORies
		{
			get
			{
				return this.GetTable<MEMBERSHIPCATEGORy>();
			}
		}
		
		public System.Data.Linq.Table<SSA_MEMBERCATEGORy> SSA_MEMBERCATEGORies
		{
			get
			{
				return this.GetTable<SSA_MEMBERCATEGORy>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLECONTACT> PEOPLECONTACTs
		{
			get
			{
				return this.GetTable<PEOPLECONTACT>();
			}
		}
		
		public System.Data.Linq.Table<CONTACTTYPE> CONTACTTYPEs
		{
			get
			{
				return this.GetTable<CONTACTTYPE>();
			}
		}
		
		public System.Data.Linq.Table<PHYSADDRESS> PHYSADDRESSes
		{
			get
			{
				return this.GetTable<PHYSADDRESS>();
			}
		}
		
		public System.Data.Linq.Table<BOARDOFFICE> BOARDOFFICEs
		{
			get
			{
				return this.GetTable<BOARDOFFICE>();
			}
		}
		
		public System.Data.Linq.Table<FLYINGCHARGE> FLYINGCHARGEs
		{
			get
			{
				return this.GetTable<FLYINGCHARGE>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLEQUALIFIC> PEOPLEQUALIFICs
		{
			get
			{
				return this.GetTable<PEOPLEQUALIFIC>();
			}
		}
		
		public System.Data.Linq.Table<QUALIFICATION> QUALIFICATIONs
		{
			get
			{
				return this.GetTable<QUALIFICATION>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLECERTIFIC> PEOPLECERTIFICs
		{
			get
			{
				return this.GetTable<PEOPLECERTIFIC>();
			}
		}
		
		public System.Data.Linq.Table<CERTIFICATION> CERTIFICATIONs
		{
			get
			{
				return this.GetTable<CERTIFICATION>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLERATING> PEOPLERATINGs
		{
			get
			{
				return this.GetTable<PEOPLERATING>();
			}
		}
		
		public System.Data.Linq.Table<RATING> RATINGs
		{
			get
			{
				return this.GetTable<RATING>();
			}
		}
		
		public System.Data.Linq.Table<SSA_MEMBERFROMTO> SSA_MEMBERFROMTOs
		{
			get
			{
				return this.GetTable<SSA_MEMBERFROMTO>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLEOFFICE> PEOPLEOFFICEs
		{
			get
			{
				return this.GetTable<PEOPLEOFFICE>();
			}
		}
		
		public System.Data.Linq.Table<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this.GetTable<MEMBERFROMTO>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
		
		public System.Data.Linq.Table<EQUITYSHARE> EQUITYSHAREs
		{
			get
			{
				return this.GetTable<EQUITYSHARE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MEMBERSHIPCATEGORIES")]
	public partial class MEMBERSHIPCATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sMembershipCategory;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsMembershipCategoryChanging(string value);
    partial void OnsMembershipCategoryChanged();
    #endregion
		
		public MEMBERSHIPCATEGORy()
		{
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMembershipCategory", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sMembershipCategory
		{
			get
			{
				return this._sMembershipCategory;
			}
			set
			{
				if ((this._sMembershipCategory != value))
				{
					this.OnsMembershipCategoryChanging(value);
					this.SendPropertyChanging();
					this._sMembershipCategory = value;
					this.SendPropertyChanged("sMembershipCategory");
					this.OnsMembershipCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iMemberCategory")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.MEMBERSHIPCATEGORy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SSA_MEMBERCATEGORIES")]
	public partial class SSA_MEMBERCATEGORy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sSSA_MemberCategory;
		
		private EntitySet<SSA_MEMBERFROMTO> _SSA_MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsSSA_MemberCategoryChanging(string value);
    partial void OnsSSA_MemberCategoryChanged();
    #endregion
		
		public SSA_MEMBERCATEGORy()
		{
			this._SSA_MEMBERFROMTOs = new EntitySet<SSA_MEMBERFROMTO>(new Action<SSA_MEMBERFROMTO>(this.attach_SSA_MEMBERFROMTOs), new Action<SSA_MEMBERFROMTO>(this.detach_SSA_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSSA_MemberCategory", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sSSA_MemberCategory
		{
			get
			{
				return this._sSSA_MemberCategory;
			}
			set
			{
				if ((this._sSSA_MemberCategory != value))
				{
					this.OnsSSA_MemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._sSSA_MemberCategory = value;
					this.SendPropertyChanged("sSSA_MemberCategory");
					this.OnsSSA_MemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSA_MEMBERCATEGORy_SSA_MEMBERFROMTO", Storage="_SSA_MEMBERFROMTOs", ThisKey="ID", OtherKey="iSSA_MemberCategory")]
		public EntitySet<SSA_MEMBERFROMTO> SSA_MEMBERFROMTOs
		{
			get
			{
				return this._SSA_MEMBERFROMTOs;
			}
			set
			{
				this._SSA_MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.SSA_MEMBERCATEGORy = this;
		}
		
		private void detach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.SSA_MEMBERCATEGORy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PEOPLECONTACTS")]
	public partial class PEOPLECONTACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iContactType;
		
		private System.Nullable<System.DateTime> _DBegin;
		
		private System.Nullable<System.DateTime> _DEnd;
		
		private System.Nullable<int> _iPhysAddress;
		
		private string _sContactInfo;
		
		private System.Nullable<decimal> _dContactPriorityRanking;
		
		private EntityRef<CONTACTTYPE> _CONTACTTYPE;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniContactTypeChanging(int value);
    partial void OniContactTypeChanged();
    partial void OnDBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDBeginChanged();
    partial void OnDEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDEndChanged();
    partial void OniPhysAddressChanging(System.Nullable<int> value);
    partial void OniPhysAddressChanged();
    partial void OnsContactInfoChanging(string value);
    partial void OnsContactInfoChanged();
    partial void OndContactPriorityRankingChanging(System.Nullable<decimal> value);
    partial void OndContactPriorityRankingChanged();
    #endregion
		
		public PEOPLECONTACT()
		{
			this._CONTACTTYPE = default(EntityRef<CONTACTTYPE>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iContactType", DbType="Int NOT NULL")]
		public int iContactType
		{
			get
			{
				return this._iContactType;
			}
			set
			{
				if ((this._iContactType != value))
				{
					if (this._CONTACTTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniContactTypeChanging(value);
					this.SendPropertyChanging();
					this._iContactType = value;
					this.SendPropertyChanged("iContactType");
					this.OniContactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this.OnDBeginChanging(value);
					this.SendPropertyChanging();
					this._DBegin = value;
					this.SendPropertyChanged("DBegin");
					this.OnDBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this.OnDEndChanging(value);
					this.SendPropertyChanging();
					this._DEnd = value;
					this.SendPropertyChanged("DEnd");
					this.OnDEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPhysAddress", DbType="Int")]
		public System.Nullable<int> iPhysAddress
		{
			get
			{
				return this._iPhysAddress;
			}
			set
			{
				if ((this._iPhysAddress != value))
				{
					this.OniPhysAddressChanging(value);
					this.SendPropertyChanging();
					this._iPhysAddress = value;
					this.SendPropertyChanged("iPhysAddress");
					this.OniPhysAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sContactInfo", DbType="NVarChar(MAX)")]
		public string sContactInfo
		{
			get
			{
				return this._sContactInfo;
			}
			set
			{
				if ((this._sContactInfo != value))
				{
					this.OnsContactInfoChanging(value);
					this.SendPropertyChanging();
					this._sContactInfo = value;
					this.SendPropertyChanged("sContactInfo");
					this.OnsContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dContactPriorityRanking", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> dContactPriorityRanking
		{
			get
			{
				return this._dContactPriorityRanking;
			}
			set
			{
				if ((this._dContactPriorityRanking != value))
				{
					this.OndContactPriorityRankingChanging(value);
					this.SendPropertyChanging();
					this._dContactPriorityRanking = value;
					this.SendPropertyChanged("dContactPriorityRanking");
					this.OndContactPriorityRankingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTACTTYPE_PEOPLECONTACT", Storage="_CONTACTTYPE", ThisKey="iContactType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CONTACTTYPE CONTACTTYPE
		{
			get
			{
				return this._CONTACTTYPE.Entity;
			}
			set
			{
				CONTACTTYPE previousValue = this._CONTACTTYPE.Entity;
				if (((previousValue != value) 
							|| (this._CONTACTTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTACTTYPE.Entity = null;
						previousValue.PEOPLECONTACTs.Remove(this);
					}
					this._CONTACTTYPE.Entity = value;
					if ((value != null))
					{
						value.PEOPLECONTACTs.Add(this);
						this._iContactType = value.ID;
					}
					else
					{
						this._iContactType = default(int);
					}
					this.SendPropertyChanged("CONTACTTYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLECONTACT", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLECONTACTs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLECONTACTs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="CONTACTTYPES")]
	public partial class CONTACTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sPeopleContactType;
		
		private bool _bHasPhysAddr;
		
		private decimal _dDefaultRank;
		
		private EntitySet<PEOPLECONTACT> _PEOPLECONTACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsPeopleContactTypeChanging(string value);
    partial void OnsPeopleContactTypeChanged();
    partial void OnbHasPhysAddrChanging(bool value);
    partial void OnbHasPhysAddrChanged();
    partial void OndDefaultRankChanging(decimal value);
    partial void OndDefaultRankChanged();
    #endregion
		
		public CONTACTTYPE()
		{
			this._PEOPLECONTACTs = new EntitySet<PEOPLECONTACT>(new Action<PEOPLECONTACT>(this.attach_PEOPLECONTACTs), new Action<PEOPLECONTACT>(this.detach_PEOPLECONTACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPeopleContactType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sPeopleContactType
		{
			get
			{
				return this._sPeopleContactType;
			}
			set
			{
				if ((this._sPeopleContactType != value))
				{
					this.OnsPeopleContactTypeChanging(value);
					this.SendPropertyChanging();
					this._sPeopleContactType = value;
					this.SendPropertyChanged("sPeopleContactType");
					this.OnsPeopleContactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bHasPhysAddr", DbType="Bit NOT NULL")]
		public bool bHasPhysAddr
		{
			get
			{
				return this._bHasPhysAddr;
			}
			set
			{
				if ((this._bHasPhysAddr != value))
				{
					this.OnbHasPhysAddrChanging(value);
					this.SendPropertyChanging();
					this._bHasPhysAddr = value;
					this.SendPropertyChanged("bHasPhysAddr");
					this.OnbHasPhysAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDefaultRank", DbType="Decimal(5,2) NOT NULL")]
		public decimal dDefaultRank
		{
			get
			{
				return this._dDefaultRank;
			}
			set
			{
				if ((this._dDefaultRank != value))
				{
					this.OndDefaultRankChanging(value);
					this.SendPropertyChanging();
					this._dDefaultRank = value;
					this.SendPropertyChanged("dDefaultRank");
					this.OndDefaultRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTACTTYPE_PEOPLECONTACT", Storage="_PEOPLECONTACTs", ThisKey="ID", OtherKey="iContactType")]
		public EntitySet<PEOPLECONTACT> PEOPLECONTACTs
		{
			get
			{
				return this._PEOPLECONTACTs;
			}
			set
			{
				this._PEOPLECONTACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.CONTACTTYPE = this;
		}
		
		private void detach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.CONTACTTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="PHYSADDRESSES")]
	public partial class PHYSADDRESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sAddress1;
		
		private string _sAddress2;
		
		private string _sCity;
		
		private string _sStateProv;
		
		private string _sZipPostal;
		
		private string _sCountry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsAddress1Changing(string value);
    partial void OnsAddress1Changed();
    partial void OnsAddress2Changing(string value);
    partial void OnsAddress2Changed();
    partial void OnsCityChanging(string value);
    partial void OnsCityChanged();
    partial void OnsStateProvChanging(string value);
    partial void OnsStateProvChanged();
    partial void OnsZipPostalChanging(string value);
    partial void OnsZipPostalChanged();
    partial void OnsCountryChanging(string value);
    partial void OnsCountryChanged();
    #endregion
		
		public PHYSADDRESS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress1", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sAddress1
		{
			get
			{
				return this._sAddress1;
			}
			set
			{
				if ((this._sAddress1 != value))
				{
					this.OnsAddress1Changing(value);
					this.SendPropertyChanging();
					this._sAddress1 = value;
					this.SendPropertyChanged("sAddress1");
					this.OnsAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress2", DbType="NVarChar(30)")]
		public string sAddress2
		{
			get
			{
				return this._sAddress2;
			}
			set
			{
				if ((this._sAddress2 != value))
				{
					this.OnsAddress2Changing(value);
					this.SendPropertyChanging();
					this._sAddress2 = value;
					this.SendPropertyChanged("sAddress2");
					this.OnsAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCity", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sCity
		{
			get
			{
				return this._sCity;
			}
			set
			{
				if ((this._sCity != value))
				{
					this.OnsCityChanging(value);
					this.SendPropertyChanging();
					this._sCity = value;
					this.SendPropertyChanged("sCity");
					this.OnsCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sStateProv", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sStateProv
		{
			get
			{
				return this._sStateProv;
			}
			set
			{
				if ((this._sStateProv != value))
				{
					this.OnsStateProvChanging(value);
					this.SendPropertyChanging();
					this._sStateProv = value;
					this.SendPropertyChanged("sStateProv");
					this.OnsStateProvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sZipPostal", DbType="NVarChar(15)")]
		public string sZipPostal
		{
			get
			{
				return this._sZipPostal;
			}
			set
			{
				if ((this._sZipPostal != value))
				{
					this.OnsZipPostalChanging(value);
					this.SendPropertyChanging();
					this._sZipPostal = value;
					this.SendPropertyChanged("sZipPostal");
					this.OnsZipPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCountry", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sCountry
		{
			get
			{
				return this._sCountry;
			}
			set
			{
				if ((this._sCountry != value))
				{
					this.OnsCountryChanging(value);
					this.SendPropertyChanging();
					this._sCountry = value;
					this.SendPropertyChanged("sCountry");
					this.OnsCountryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="BOARDOFFICES")]
	public partial class BOARDOFFICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sBoardOffice;
		
		private EntitySet<PEOPLEOFFICE> _PEOPLEOFFICEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsBoardOfficeChanging(string value);
    partial void OnsBoardOfficeChanged();
    #endregion
		
		public BOARDOFFICE()
		{
			this._PEOPLEOFFICEs = new EntitySet<PEOPLEOFFICE>(new Action<PEOPLEOFFICE>(this.attach_PEOPLEOFFICEs), new Action<PEOPLEOFFICE>(this.detach_PEOPLEOFFICEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sBoardOffice", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sBoardOffice
		{
			get
			{
				return this._sBoardOffice;
			}
			set
			{
				if ((this._sBoardOffice != value))
				{
					this.OnsBoardOfficeChanging(value);
					this.SendPropertyChanging();
					this._sBoardOffice = value;
					this.SendPropertyChanged("sBoardOffice");
					this.OnsBoardOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOARDOFFICE_PEOPLEOFFICE", Storage="_PEOPLEOFFICEs", ThisKey="ID", OtherKey="iBoardOffice")]
		public EntitySet<PEOPLEOFFICE> PEOPLEOFFICEs
		{
			get
			{
				return this._PEOPLEOFFICEs;
			}
			set
			{
				this._PEOPLEOFFICEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.BOARDOFFICE = this;
		}
		
		private void detach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.BOARDOFFICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="FLYINGCHARGES")]
	public partial class FLYINGCHARGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private decimal _dAmount;
		
		private System.DateTime _DateOfAmount;
		
		private char _cTypeOfAmount;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OndAmountChanging(decimal value);
    partial void OndAmountChanged();
    partial void OnDateOfAmountChanging(System.DateTime value);
    partial void OnDateOfAmountChanged();
    partial void OncTypeOfAmountChanging(char value);
    partial void OncTypeOfAmountChanged();
    #endregion
		
		public FLYINGCHARGE()
		{
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dAmount", DbType="Decimal(10,2) NOT NULL")]
		public decimal dAmount
		{
			get
			{
				return this._dAmount;
			}
			set
			{
				if ((this._dAmount != value))
				{
					this.OndAmountChanging(value);
					this.SendPropertyChanging();
					this._dAmount = value;
					this.SendPropertyChanged("dAmount");
					this.OndAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfAmount", DbType="DateTime2 NOT NULL")]
		public System.DateTime DateOfAmount
		{
			get
			{
				return this._DateOfAmount;
			}
			set
			{
				if ((this._DateOfAmount != value))
				{
					this.OnDateOfAmountChanging(value);
					this.SendPropertyChanging();
					this._DateOfAmount = value;
					this.SendPropertyChanged("DateOfAmount");
					this.OnDateOfAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cTypeOfAmount", DbType="Char(1) NOT NULL")]
		public char cTypeOfAmount
		{
			get
			{
				return this._cTypeOfAmount;
			}
			set
			{
				if ((this._cTypeOfAmount != value))
				{
					this.OncTypeOfAmountChanging(value);
					this.SendPropertyChanging();
					this._cTypeOfAmount = value;
					this.SendPropertyChanged("cTypeOfAmount");
					this.OncTypeOfAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_FLYINGCHARGE", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.FLYINGCHARGEs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.FLYINGCHARGEs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLEQUALIFICS")]
	public partial class PEOPLEQUALIFIC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iQualification;
		
		private System.DateTimeOffset _DSince;
		
		private System.DateTimeOffset _DExpiry;
		
		private string _sAdditionalInfo;
		
		private EntityRef<QUALIFICATION> _QUALIFICATION;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniQualificationChanging(int value);
    partial void OniQualificationChanged();
    partial void OnDSinceChanging(System.DateTimeOffset value);
    partial void OnDSinceChanged();
    partial void OnDExpiryChanging(System.DateTimeOffset value);
    partial void OnDExpiryChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public PEOPLEQUALIFIC()
		{
			this._QUALIFICATION = default(EntityRef<QUALIFICATION>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQualification", DbType="Int NOT NULL")]
		public int iQualification
		{
			get
			{
				return this._iQualification;
			}
			set
			{
				if ((this._iQualification != value))
				{
					if (this._QUALIFICATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniQualificationChanging(value);
					this.SendPropertyChanging();
					this._iQualification = value;
					this.SendPropertyChanged("iQualification");
					this.OniQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSince", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DSince
		{
			get
			{
				return this._DSince;
			}
			set
			{
				if ((this._DSince != value))
				{
					this.OnDSinceChanging(value);
					this.SendPropertyChanging();
					this._DSince = value;
					this.SendPropertyChanged("DSince");
					this.OnDSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DExpiry", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DExpiry
		{
			get
			{
				return this._DExpiry;
			}
			set
			{
				if ((this._DExpiry != value))
				{
					this.OnDExpiryChanging(value);
					this.SendPropertyChanging();
					this._DExpiry = value;
					this.SendPropertyChanged("DExpiry");
					this.OnDExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUALIFICATION_PEOPLEQUALIFIC", Storage="_QUALIFICATION", ThisKey="iQualification", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public QUALIFICATION QUALIFICATION
		{
			get
			{
				return this._QUALIFICATION.Entity;
			}
			set
			{
				QUALIFICATION previousValue = this._QUALIFICATION.Entity;
				if (((previousValue != value) 
							|| (this._QUALIFICATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUALIFICATION.Entity = null;
						previousValue.PEOPLEQUALIFICs.Remove(this);
					}
					this._QUALIFICATION.Entity = value;
					if ((value != null))
					{
						value.PEOPLEQUALIFICs.Add(this);
						this._iQualification = value.ID;
					}
					else
					{
						this._iQualification = default(int);
					}
					this.SendPropertyChanged("QUALIFICATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEQUALIFIC", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLEQUALIFICs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLEQUALIFICs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUALIFICATIONS")]
	public partial class QUALIFICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sQualification;
		
		private EntitySet<PEOPLEQUALIFIC> _PEOPLEQUALIFICs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsQualificationChanging(string value);
    partial void OnsQualificationChanged();
    #endregion
		
		public QUALIFICATION()
		{
			this._PEOPLEQUALIFICs = new EntitySet<PEOPLEQUALIFIC>(new Action<PEOPLEQUALIFIC>(this.attach_PEOPLEQUALIFICs), new Action<PEOPLEQUALIFIC>(this.detach_PEOPLEQUALIFICs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sQualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sQualification
		{
			get
			{
				return this._sQualification;
			}
			set
			{
				if ((this._sQualification != value))
				{
					this.OnsQualificationChanging(value);
					this.SendPropertyChanging();
					this._sQualification = value;
					this.SendPropertyChanged("sQualification");
					this.OnsQualificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUALIFICATION_PEOPLEQUALIFIC", Storage="_PEOPLEQUALIFICs", ThisKey="ID", OtherKey="iQualification")]
		public EntitySet<PEOPLEQUALIFIC> PEOPLEQUALIFICs
		{
			get
			{
				return this._PEOPLEQUALIFICs;
			}
			set
			{
				this._PEOPLEQUALIFICs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.QUALIFICATION = this;
		}
		
		private void detach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.QUALIFICATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLECERTIFICS")]
	public partial class PEOPLECERTIFIC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iCertification;
		
		private System.DateTimeOffset _DSince;
		
		private System.DateTimeOffset _DExpiry;
		
		private string _sAdditionalInfo;
		
		private EntityRef<CERTIFICATION> _CERTIFICATION;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniCertificationChanging(int value);
    partial void OniCertificationChanged();
    partial void OnDSinceChanging(System.DateTimeOffset value);
    partial void OnDSinceChanged();
    partial void OnDExpiryChanging(System.DateTimeOffset value);
    partial void OnDExpiryChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public PEOPLECERTIFIC()
		{
			this._CERTIFICATION = default(EntityRef<CERTIFICATION>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iCertification", DbType="Int NOT NULL")]
		public int iCertification
		{
			get
			{
				return this._iCertification;
			}
			set
			{
				if ((this._iCertification != value))
				{
					if (this._CERTIFICATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniCertificationChanging(value);
					this.SendPropertyChanging();
					this._iCertification = value;
					this.SendPropertyChanged("iCertification");
					this.OniCertificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSince", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DSince
		{
			get
			{
				return this._DSince;
			}
			set
			{
				if ((this._DSince != value))
				{
					this.OnDSinceChanging(value);
					this.SendPropertyChanging();
					this._DSince = value;
					this.SendPropertyChanged("DSince");
					this.OnDSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DExpiry", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DExpiry
		{
			get
			{
				return this._DExpiry;
			}
			set
			{
				if ((this._DExpiry != value))
				{
					this.OnDExpiryChanging(value);
					this.SendPropertyChanging();
					this._DExpiry = value;
					this.SendPropertyChanged("DExpiry");
					this.OnDExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CERTIFICATION_PEOPLECERTIFIC", Storage="_CERTIFICATION", ThisKey="iCertification", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CERTIFICATION CERTIFICATION
		{
			get
			{
				return this._CERTIFICATION.Entity;
			}
			set
			{
				CERTIFICATION previousValue = this._CERTIFICATION.Entity;
				if (((previousValue != value) 
							|| (this._CERTIFICATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CERTIFICATION.Entity = null;
						previousValue.PEOPLECERTIFICs.Remove(this);
					}
					this._CERTIFICATION.Entity = value;
					if ((value != null))
					{
						value.PEOPLECERTIFICs.Add(this);
						this._iCertification = value.ID;
					}
					else
					{
						this._iCertification = default(int);
					}
					this.SendPropertyChanged("CERTIFICATION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLECERTIFIC", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLECERTIFICs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLECERTIFICs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CERTIFICATIONS")]
	public partial class CERTIFICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sCertification;
		
		private EntitySet<PEOPLECERTIFIC> _PEOPLECERTIFICs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsCertificationChanging(string value);
    partial void OnsCertificationChanged();
    #endregion
		
		public CERTIFICATION()
		{
			this._PEOPLECERTIFICs = new EntitySet<PEOPLECERTIFIC>(new Action<PEOPLECERTIFIC>(this.attach_PEOPLECERTIFICs), new Action<PEOPLECERTIFIC>(this.detach_PEOPLECERTIFICs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCertification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sCertification
		{
			get
			{
				return this._sCertification;
			}
			set
			{
				if ((this._sCertification != value))
				{
					this.OnsCertificationChanging(value);
					this.SendPropertyChanging();
					this._sCertification = value;
					this.SendPropertyChanged("sCertification");
					this.OnsCertificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CERTIFICATION_PEOPLECERTIFIC", Storage="_PEOPLECERTIFICs", ThisKey="ID", OtherKey="iCertification")]
		public EntitySet<PEOPLECERTIFIC> PEOPLECERTIFICs
		{
			get
			{
				return this._PEOPLECERTIFICs;
			}
			set
			{
				this._PEOPLECERTIFICs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLECERTIFICs(PEOPLECERTIFIC entity)
		{
			this.SendPropertyChanging();
			entity.CERTIFICATION = this;
		}
		
		private void detach_PEOPLECERTIFICs(PEOPLECERTIFIC entity)
		{
			this.SendPropertyChanging();
			entity.CERTIFICATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLERATINGS")]
	public partial class PEOPLERATING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iRatings;
		
		private System.DateTimeOffset _DSince;
		
		private System.DateTimeOffset _DExpiry;
		
		private string _sAdditionalInfo;
		
		private EntityRef<RATING> _RATING;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniRatingsChanging(int value);
    partial void OniRatingsChanged();
    partial void OnDSinceChanging(System.DateTimeOffset value);
    partial void OnDSinceChanged();
    partial void OnDExpiryChanging(System.DateTimeOffset value);
    partial void OnDExpiryChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public PEOPLERATING()
		{
			this._RATING = default(EntityRef<RATING>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRatings", DbType="Int NOT NULL")]
		public int iRatings
		{
			get
			{
				return this._iRatings;
			}
			set
			{
				if ((this._iRatings != value))
				{
					if (this._RATING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniRatingsChanging(value);
					this.SendPropertyChanging();
					this._iRatings = value;
					this.SendPropertyChanged("iRatings");
					this.OniRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DSince", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DSince
		{
			get
			{
				return this._DSince;
			}
			set
			{
				if ((this._DSince != value))
				{
					this.OnDSinceChanging(value);
					this.SendPropertyChanging();
					this._DSince = value;
					this.SendPropertyChanged("DSince");
					this.OnDSinceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DExpiry", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DExpiry
		{
			get
			{
				return this._DExpiry;
			}
			set
			{
				if ((this._DExpiry != value))
				{
					this.OnDExpiryChanging(value);
					this.SendPropertyChanging();
					this._DExpiry = value;
					this.SendPropertyChanged("DExpiry");
					this.OnDExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RATING_PEOPLERATING", Storage="_RATING", ThisKey="iRatings", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RATING RATING
		{
			get
			{
				return this._RATING.Entity;
			}
			set
			{
				RATING previousValue = this._RATING.Entity;
				if (((previousValue != value) 
							|| (this._RATING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RATING.Entity = null;
						previousValue.PEOPLERATINGs.Remove(this);
					}
					this._RATING.Entity = value;
					if ((value != null))
					{
						value.PEOPLERATINGs.Add(this);
						this._iRatings = value.ID;
					}
					else
					{
						this._iRatings = default(int);
					}
					this.SendPropertyChanged("RATING");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLERATING", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLERATINGs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLERATINGs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RATINGS")]
	public partial class RATING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sRating;
		
		private EntitySet<PEOPLERATING> _PEOPLERATINGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsRatingChanging(string value);
    partial void OnsRatingChanged();
    #endregion
		
		public RATING()
		{
			this._PEOPLERATINGs = new EntitySet<PEOPLERATING>(new Action<PEOPLERATING>(this.attach_PEOPLERATINGs), new Action<PEOPLERATING>(this.detach_PEOPLERATINGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRating", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sRating
		{
			get
			{
				return this._sRating;
			}
			set
			{
				if ((this._sRating != value))
				{
					this.OnsRatingChanging(value);
					this.SendPropertyChanging();
					this._sRating = value;
					this.SendPropertyChanged("sRating");
					this.OnsRatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RATING_PEOPLERATING", Storage="_PEOPLERATINGs", ThisKey="ID", OtherKey="iRatings")]
		public EntitySet<PEOPLERATING> PEOPLERATINGs
		{
			get
			{
				return this._PEOPLERATINGs;
			}
			set
			{
				this._PEOPLERATINGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLERATINGs(PEOPLERATING entity)
		{
			this.SendPropertyChanging();
			entity.RATING = this;
		}
		
		private void detach_PEOPLERATINGs(PEOPLERATING entity)
		{
			this.SendPropertyChanging();
			entity.RATING = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SSA_MEMBERFROMTO")]
	public partial class SSA_MEMBERFROMTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iSSA_ID;
		
		private int _iSSA_MemberCategory;
		
		private System.DateTime _DMembershipBegin;
		
		private System.Nullable<System.DateTime> _DMembershipEnd;
		
		private System.Nullable<System.DateTime> _DMembershipExpires;
		
		private bool _bRenewsWithChapter;
		
		private string _sChapterAffiliation;
		
		private string _sAdditionalInfo;
		
		private EntityRef<SSA_MEMBERCATEGORy> _SSA_MEMBERCATEGORy;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniSSA_IDChanging(int value);
    partial void OniSSA_IDChanged();
    partial void OniSSA_MemberCategoryChanging(int value);
    partial void OniSSA_MemberCategoryChanged();
    partial void OnDMembershipBeginChanging(System.DateTime value);
    partial void OnDMembershipBeginChanged();
    partial void OnDMembershipEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDMembershipEndChanged();
    partial void OnDMembershipExpiresChanging(System.Nullable<System.DateTime> value);
    partial void OnDMembershipExpiresChanged();
    partial void OnbRenewsWithChapterChanging(bool value);
    partial void OnbRenewsWithChapterChanged();
    partial void OnsChapterAffiliationChanging(string value);
    partial void OnsChapterAffiliationChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public SSA_MEMBERFROMTO()
		{
			this._SSA_MEMBERCATEGORy = default(EntityRef<SSA_MEMBERCATEGORy>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSSA_ID", DbType="Int NOT NULL")]
		public int iSSA_ID
		{
			get
			{
				return this._iSSA_ID;
			}
			set
			{
				if ((this._iSSA_ID != value))
				{
					this.OniSSA_IDChanging(value);
					this.SendPropertyChanging();
					this._iSSA_ID = value;
					this.SendPropertyChanged("iSSA_ID");
					this.OniSSA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSSA_MemberCategory", DbType="Int NOT NULL")]
		public int iSSA_MemberCategory
		{
			get
			{
				return this._iSSA_MemberCategory;
			}
			set
			{
				if ((this._iSSA_MemberCategory != value))
				{
					if (this._SSA_MEMBERCATEGORy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSSA_MemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._iSSA_MemberCategory = value;
					this.SendPropertyChanged("iSSA_MemberCategory");
					this.OniSSA_MemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipBegin", DbType="Date NOT NULL")]
		public System.DateTime DMembershipBegin
		{
			get
			{
				return this._DMembershipBegin;
			}
			set
			{
				if ((this._DMembershipBegin != value))
				{
					this.OnDMembershipBeginChanging(value);
					this.SendPropertyChanging();
					this._DMembershipBegin = value;
					this.SendPropertyChanged("DMembershipBegin");
					this.OnDMembershipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipEnd", DbType="Date")]
		public System.Nullable<System.DateTime> DMembershipEnd
		{
			get
			{
				return this._DMembershipEnd;
			}
			set
			{
				if ((this._DMembershipEnd != value))
				{
					this.OnDMembershipEndChanging(value);
					this.SendPropertyChanging();
					this._DMembershipEnd = value;
					this.SendPropertyChanged("DMembershipEnd");
					this.OnDMembershipEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipExpires", DbType="Date")]
		public System.Nullable<System.DateTime> DMembershipExpires
		{
			get
			{
				return this._DMembershipExpires;
			}
			set
			{
				if ((this._DMembershipExpires != value))
				{
					this.OnDMembershipExpiresChanging(value);
					this.SendPropertyChanging();
					this._DMembershipExpires = value;
					this.SendPropertyChanged("DMembershipExpires");
					this.OnDMembershipExpiresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bRenewsWithChapter", DbType="Bit NOT NULL")]
		public bool bRenewsWithChapter
		{
			get
			{
				return this._bRenewsWithChapter;
			}
			set
			{
				if ((this._bRenewsWithChapter != value))
				{
					this.OnbRenewsWithChapterChanging(value);
					this.SendPropertyChanging();
					this._bRenewsWithChapter = value;
					this.SendPropertyChanged("bRenewsWithChapter");
					this.OnbRenewsWithChapterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChapterAffiliation", DbType="NVarChar(50)")]
		public string sChapterAffiliation
		{
			get
			{
				return this._sChapterAffiliation;
			}
			set
			{
				if ((this._sChapterAffiliation != value))
				{
					this.OnsChapterAffiliationChanging(value);
					this.SendPropertyChanging();
					this._sChapterAffiliation = value;
					this.SendPropertyChanged("sChapterAffiliation");
					this.OnsChapterAffiliationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SSA_MEMBERCATEGORy_SSA_MEMBERFROMTO", Storage="_SSA_MEMBERCATEGORy", ThisKey="iSSA_MemberCategory", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SSA_MEMBERCATEGORy SSA_MEMBERCATEGORy
		{
			get
			{
				return this._SSA_MEMBERCATEGORy.Entity;
			}
			set
			{
				SSA_MEMBERCATEGORy previousValue = this._SSA_MEMBERCATEGORy.Entity;
				if (((previousValue != value) 
							|| (this._SSA_MEMBERCATEGORy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SSA_MEMBERCATEGORy.Entity = null;
						previousValue.SSA_MEMBERFROMTOs.Remove(this);
					}
					this._SSA_MEMBERCATEGORy.Entity = value;
					if ((value != null))
					{
						value.SSA_MEMBERFROMTOs.Add(this);
						this._iSSA_MemberCategory = value.ID;
					}
					else
					{
						this._iSSA_MemberCategory = default(int);
					}
					this.SendPropertyChanged("SSA_MEMBERCATEGORy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_SSA_MEMBERFROMTO", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.SSA_MEMBERFROMTOs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.SSA_MEMBERFROMTOs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLEOFFICES")]
	public partial class PEOPLEOFFICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iBoardOffice;
		
		private System.DateTimeOffset _DOfficeBegin;
		
		private System.DateTimeOffset _DOfficeEnd;
		
		private string _sAdditionalInfo;
		
		private EntityRef<BOARDOFFICE> _BOARDOFFICE;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniBoardOfficeChanging(int value);
    partial void OniBoardOfficeChanged();
    partial void OnDOfficeBeginChanging(System.DateTimeOffset value);
    partial void OnDOfficeBeginChanged();
    partial void OnDOfficeEndChanging(System.DateTimeOffset value);
    partial void OnDOfficeEndChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public PEOPLEOFFICE()
		{
			this._BOARDOFFICE = default(EntityRef<BOARDOFFICE>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iBoardOffice", DbType="Int NOT NULL")]
		public int iBoardOffice
		{
			get
			{
				return this._iBoardOffice;
			}
			set
			{
				if ((this._iBoardOffice != value))
				{
					if (this._BOARDOFFICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniBoardOfficeChanging(value);
					this.SendPropertyChanging();
					this._iBoardOffice = value;
					this.SendPropertyChanged("iBoardOffice");
					this.OniBoardOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOfficeBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DOfficeBegin
		{
			get
			{
				return this._DOfficeBegin;
			}
			set
			{
				if ((this._DOfficeBegin != value))
				{
					this.OnDOfficeBeginChanging(value);
					this.SendPropertyChanging();
					this._DOfficeBegin = value;
					this.SendPropertyChanged("DOfficeBegin");
					this.OnDOfficeBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOfficeEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DOfficeEnd
		{
			get
			{
				return this._DOfficeEnd;
			}
			set
			{
				if ((this._DOfficeEnd != value))
				{
					this.OnDOfficeEndChanging(value);
					this.SendPropertyChanging();
					this._DOfficeEnd = value;
					this.SendPropertyChanged("DOfficeEnd");
					this.OnDOfficeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOARDOFFICE_PEOPLEOFFICE", Storage="_BOARDOFFICE", ThisKey="iBoardOffice", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BOARDOFFICE BOARDOFFICE
		{
			get
			{
				return this._BOARDOFFICE.Entity;
			}
			set
			{
				BOARDOFFICE previousValue = this._BOARDOFFICE.Entity;
				if (((previousValue != value) 
							|| (this._BOARDOFFICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOARDOFFICE.Entity = null;
						previousValue.PEOPLEOFFICEs.Remove(this);
					}
					this._BOARDOFFICE.Entity = value;
					if ((value != null))
					{
						value.PEOPLEOFFICEs.Add(this);
						this._iBoardOffice = value.ID;
					}
					else
					{
						this._iBoardOffice = default(int);
					}
					this.SendPropertyChanged("BOARDOFFICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEOFFICE", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLEOFFICEs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLEOFFICEs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERFROMTO")]
	public partial class MEMBERFROMTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iMemberCategory;
		
		private System.DateTimeOffset _DMembershipBegin;
		
		private System.DateTimeOffset _DMembershipEnd;
		
		private string _sAdditionalInfo;
		
		private EntityRef<MEMBERSHIPCATEGORy> _MEMBERSHIPCATEGORy;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniMemberCategoryChanging(int value);
    partial void OniMemberCategoryChanged();
    partial void OnDMembershipBeginChanging(System.DateTimeOffset value);
    partial void OnDMembershipBeginChanged();
    partial void OnDMembershipEndChanging(System.DateTimeOffset value);
    partial void OnDMembershipEndChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public MEMBERFROMTO()
		{
			this._MEMBERSHIPCATEGORy = default(EntityRef<MEMBERSHIPCATEGORy>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMemberCategory", DbType="Int NOT NULL")]
		public int iMemberCategory
		{
			get
			{
				return this._iMemberCategory;
			}
			set
			{
				if ((this._iMemberCategory != value))
				{
					if (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniMemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._iMemberCategory = value;
					this.SendPropertyChanged("iMemberCategory");
					this.OniMemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipBegin
		{
			get
			{
				return this._DMembershipBegin;
			}
			set
			{
				if ((this._DMembershipBegin != value))
				{
					this.OnDMembershipBeginChanging(value);
					this.SendPropertyChanging();
					this._DMembershipBegin = value;
					this.SendPropertyChanged("DMembershipBegin");
					this.OnDMembershipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipEnd
		{
			get
			{
				return this._DMembershipEnd;
			}
			set
			{
				if ((this._DMembershipEnd != value))
				{
					this.OnDMembershipEndChanging(value);
					this.SendPropertyChanging();
					this._DMembershipEnd = value;
					this.SendPropertyChanged("DMembershipEnd");
					this.OnDMembershipEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="VarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MEMBERSHIPCATEGORy_MEMBERFROMTO", Storage="_MEMBERSHIPCATEGORy", ThisKey="iMemberCategory", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MEMBERSHIPCATEGORy MEMBERSHIPCATEGORy
		{
			get
			{
				return this._MEMBERSHIPCATEGORy.Entity;
			}
			set
			{
				MEMBERSHIPCATEGORy previousValue = this._MEMBERSHIPCATEGORy.Entity;
				if (((previousValue != value) 
							|| (this._MEMBERSHIPCATEGORy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MEMBERSHIPCATEGORy.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._MEMBERSHIPCATEGORy.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iMemberCategory = value.ID;
					}
					else
					{
						this._iMemberCategory = default(int);
					}
					this.SendPropertyChanged("MEMBERSHIPCATEGORy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private System.Nullable<System.DateTimeOffset> _DAcceptedAUP;
		
		private EntitySet<PEOPLECONTACT> _PEOPLECONTACTs;
		
		private EntitySet<FLYINGCHARGE> _FLYINGCHARGEs;
		
		private EntitySet<PEOPLEQUALIFIC> _PEOPLEQUALIFICs;
		
		private EntitySet<PEOPLECERTIFIC> _PEOPLECERTIFICs;
		
		private EntitySet<PEOPLERATING> _PEOPLERATINGs;
		
		private EntitySet<SSA_MEMBERFROMTO> _SSA_MEMBERFROMTOs;
		
		private EntitySet<PEOPLEOFFICE> _PEOPLEOFFICEs;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
		private EntitySet<EQUITYSHARE> _EQUITYSHAREs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    partial void OnDAcceptedAUPChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDAcceptedAUPChanged();
    #endregion
		
		public PEOPLE()
		{
			this._PEOPLECONTACTs = new EntitySet<PEOPLECONTACT>(new Action<PEOPLECONTACT>(this.attach_PEOPLECONTACTs), new Action<PEOPLECONTACT>(this.detach_PEOPLECONTACTs));
			this._FLYINGCHARGEs = new EntitySet<FLYINGCHARGE>(new Action<FLYINGCHARGE>(this.attach_FLYINGCHARGEs), new Action<FLYINGCHARGE>(this.detach_FLYINGCHARGEs));
			this._PEOPLEQUALIFICs = new EntitySet<PEOPLEQUALIFIC>(new Action<PEOPLEQUALIFIC>(this.attach_PEOPLEQUALIFICs), new Action<PEOPLEQUALIFIC>(this.detach_PEOPLEQUALIFICs));
			this._PEOPLECERTIFICs = new EntitySet<PEOPLECERTIFIC>(new Action<PEOPLECERTIFIC>(this.attach_PEOPLECERTIFICs), new Action<PEOPLECERTIFIC>(this.detach_PEOPLECERTIFICs));
			this._PEOPLERATINGs = new EntitySet<PEOPLERATING>(new Action<PEOPLERATING>(this.attach_PEOPLERATINGs), new Action<PEOPLERATING>(this.detach_PEOPLERATINGs));
			this._SSA_MEMBERFROMTOs = new EntitySet<SSA_MEMBERFROMTO>(new Action<SSA_MEMBERFROMTO>(this.attach_SSA_MEMBERFROMTOs), new Action<SSA_MEMBERFROMTO>(this.detach_SSA_MEMBERFROMTOs));
			this._PEOPLEOFFICEs = new EntitySet<PEOPLEOFFICE>(new Action<PEOPLEOFFICE>(this.attach_PEOPLEOFFICEs), new Action<PEOPLEOFFICE>(this.detach_PEOPLEOFFICEs));
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			this._EQUITYSHAREs = new EntitySet<EQUITYSHARE>(new Action<EQUITYSHARE>(this.attach_EQUITYSHAREs), new Action<EQUITYSHARE>(this.detach_EQUITYSHAREs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAcceptedAUP", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DAcceptedAUP
		{
			get
			{
				return this._DAcceptedAUP;
			}
			set
			{
				if ((this._DAcceptedAUP != value))
				{
					this.OnDAcceptedAUPChanging(value);
					this.SendPropertyChanging();
					this._DAcceptedAUP = value;
					this.SendPropertyChanged("DAcceptedAUP");
					this.OnDAcceptedAUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLECONTACT", Storage="_PEOPLECONTACTs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLECONTACT> PEOPLECONTACTs
		{
			get
			{
				return this._PEOPLECONTACTs;
			}
			set
			{
				this._PEOPLECONTACTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_FLYINGCHARGE", Storage="_FLYINGCHARGEs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<FLYINGCHARGE> FLYINGCHARGEs
		{
			get
			{
				return this._FLYINGCHARGEs;
			}
			set
			{
				this._FLYINGCHARGEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEQUALIFIC", Storage="_PEOPLEQUALIFICs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLEQUALIFIC> PEOPLEQUALIFICs
		{
			get
			{
				return this._PEOPLEQUALIFICs;
			}
			set
			{
				this._PEOPLEQUALIFICs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLECERTIFIC", Storage="_PEOPLECERTIFICs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLECERTIFIC> PEOPLECERTIFICs
		{
			get
			{
				return this._PEOPLECERTIFICs;
			}
			set
			{
				this._PEOPLECERTIFICs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLERATING", Storage="_PEOPLERATINGs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLERATING> PEOPLERATINGs
		{
			get
			{
				return this._PEOPLERATINGs;
			}
			set
			{
				this._PEOPLERATINGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_SSA_MEMBERFROMTO", Storage="_SSA_MEMBERFROMTOs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<SSA_MEMBERFROMTO> SSA_MEMBERFROMTOs
		{
			get
			{
				return this._SSA_MEMBERFROMTOs;
			}
			set
			{
				this._SSA_MEMBERFROMTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEOFFICE", Storage="_PEOPLEOFFICEs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLEOFFICE> PEOPLEOFFICEs
		{
			get
			{
				return this._PEOPLEOFFICEs;
			}
			set
			{
				this._PEOPLEOFFICEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_EQUITYSHARE", Storage="_EQUITYSHAREs", ThisKey="ID", OtherKey="iOwner")]
		public EntitySet<EQUITYSHARE> EQUITYSHAREs
		{
			get
			{
				return this._EQUITYSHAREs;
			}
			set
			{
				this._EQUITYSHAREs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_FLYINGCHARGEs(FLYINGCHARGE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_FLYINGCHARGEs(FLYINGCHARGE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLEQUALIFICs(PEOPLEQUALIFIC entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_PEOPLECERTIFICs(PEOPLECERTIFIC entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLECERTIFICs(PEOPLECERTIFIC entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_PEOPLERATINGs(PEOPLERATING entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLERATINGs(PEOPLERATING entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_SSA_MEMBERFROMTOs(SSA_MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_EQUITYSHAREs(EQUITYSHARE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_EQUITYSHAREs(EQUITYSHARE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUITYSHARES")]
	public partial class EQUITYSHARE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iOwner;
		
		private System.DateTime _DXaction;
		
		private char _cDateQuality;
		
		private decimal _dNumShares;
		
		private char _cXactType;
		
		private string _sInfoSource;
		
		private string _sComment;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniOwnerChanging(int value);
    partial void OniOwnerChanged();
    partial void OnDXactionChanging(System.DateTime value);
    partial void OnDXactionChanged();
    partial void OncDateQualityChanging(char value);
    partial void OncDateQualityChanged();
    partial void OndNumSharesChanging(decimal value);
    partial void OndNumSharesChanged();
    partial void OncXactTypeChanging(char value);
    partial void OncXactTypeChanged();
    partial void OnsInfoSourceChanging(string value);
    partial void OnsInfoSourceChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUITYSHARE()
		{
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOwner", DbType="Int NOT NULL")]
		public int iOwner
		{
			get
			{
				return this._iOwner;
			}
			set
			{
				if ((this._iOwner != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOwnerChanging(value);
					this.SendPropertyChanging();
					this._iOwner = value;
					this.SendPropertyChanged("iOwner");
					this.OniOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DXaction", DbType="Date NOT NULL")]
		public System.DateTime DXaction
		{
			get
			{
				return this._DXaction;
			}
			set
			{
				if ((this._DXaction != value))
				{
					this.OnDXactionChanging(value);
					this.SendPropertyChanging();
					this._DXaction = value;
					this.SendPropertyChanged("DXaction");
					this.OnDXactionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cDateQuality", DbType="NChar(1) NOT NULL")]
		public char cDateQuality
		{
			get
			{
				return this._cDateQuality;
			}
			set
			{
				if ((this._cDateQuality != value))
				{
					this.OncDateQualityChanging(value);
					this.SendPropertyChanging();
					this._cDateQuality = value;
					this.SendPropertyChanged("cDateQuality");
					this.OncDateQualityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dNumShares", DbType="Decimal(12,4) NOT NULL")]
		public decimal dNumShares
		{
			get
			{
				return this._dNumShares;
			}
			set
			{
				if ((this._dNumShares != value))
				{
					this.OndNumSharesChanging(value);
					this.SendPropertyChanging();
					this._dNumShares = value;
					this.SendPropertyChanged("dNumShares");
					this.OndNumSharesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cXactType", DbType="NChar(1) NOT NULL")]
		public char cXactType
		{
			get
			{
				return this._cXactType;
			}
			set
			{
				if ((this._cXactType != value))
				{
					this.OncXactTypeChanging(value);
					this.SendPropertyChanging();
					this._cXactType = value;
					this.SendPropertyChanged("cXactType");
					this.OncXactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInfoSource", DbType="NVarChar(MAX)")]
		public string sInfoSource
		{
			get
			{
				return this._sInfoSource;
			}
			set
			{
				if ((this._sInfoSource != value))
				{
					this.OnsInfoSourceChanging(value);
					this.SendPropertyChanging();
					this._sInfoSource = value;
					this.SendPropertyChanged("sInfoSource");
					this.OnsInfoSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_EQUITYSHARE", Storage="_PEOPLE", ThisKey="iOwner", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.EQUITYSHAREs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.EQUITYSHAREs.Add(this);
						this._iOwner = value.ID;
					}
					else
					{
						this._iOwner = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
