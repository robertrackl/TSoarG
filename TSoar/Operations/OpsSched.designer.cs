#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.Operations
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class OpsSchedDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    partial void InsertFSCATEG(FSCATEG instance);
    partial void UpdateFSCATEG(FSCATEG instance);
    partial void DeleteFSCATEG(FSCATEG instance);
    partial void InsertFSDATE(FSDATE instance);
    partial void UpdateFSDATE(FSDATE instance);
    partial void DeleteFSDATE(FSDATE instance);
    partial void InsertFSSIGNUP(FSSIGNUP instance);
    partial void UpdateFSSIGNUP(FSSIGNUP instance);
    partial void DeleteFSSIGNUP(FSSIGNUP instance);
    #endregion
		
		public OpsSchedDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OpsSchedDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OpsSchedDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OpsSchedDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OpsSchedDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
		
		public System.Data.Linq.Table<FSCATEG> FSCATEGs
		{
			get
			{
				return this.GetTable<FSCATEG>();
			}
		}
		
		public System.Data.Linq.Table<FSDATE> FSDATEs
		{
			get
			{
				return this.GetTable<FSDATE>();
			}
		}
		
		public System.Data.Linq.Table<FSSIGNUP> FSSIGNUPs
		{
			get
			{
				return this.GetTable<FSSIGNUP>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sfOpsSchedInitDate", IsComposable=true)]
		public IQueryable<sfOpsSchedInitDateResult> sfOpsSchedInitDate()
		{
			return this.CreateMethodCallQuery<sfOpsSchedInitDateResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private int _iFA_branch_code;
		
		private int _iFA_debtor_no;
		
		private System.DateTimeOffset _DAcceptedAUP;
		
		private EntitySet<FSSIGNUP> _FSSIGNUPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    partial void OniFA_branch_codeChanging(int value);
    partial void OniFA_branch_codeChanged();
    partial void OniFA_debtor_noChanging(int value);
    partial void OniFA_debtor_noChanged();
    partial void OnDAcceptedAUPChanging(System.DateTimeOffset value);
    partial void OnDAcceptedAUPChanged();
    #endregion
		
		public PEOPLE()
		{
			this._FSSIGNUPs = new EntitySet<FSSIGNUP>(new Action<FSSIGNUP>(this.attach_FSSIGNUPs), new Action<FSSIGNUP>(this.detach_FSSIGNUPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_branch_code", DbType="Int NOT NULL")]
		public int iFA_branch_code
		{
			get
			{
				return this._iFA_branch_code;
			}
			set
			{
				if ((this._iFA_branch_code != value))
				{
					this.OniFA_branch_codeChanging(value);
					this.SendPropertyChanging();
					this._iFA_branch_code = value;
					this.SendPropertyChanged("iFA_branch_code");
					this.OniFA_branch_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_debtor_no", DbType="Int NOT NULL")]
		public int iFA_debtor_no
		{
			get
			{
				return this._iFA_debtor_no;
			}
			set
			{
				if ((this._iFA_debtor_no != value))
				{
					this.OniFA_debtor_noChanging(value);
					this.SendPropertyChanging();
					this._iFA_debtor_no = value;
					this.SendPropertyChanged("iFA_debtor_no");
					this.OniFA_debtor_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAcceptedAUP", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DAcceptedAUP
		{
			get
			{
				return this._DAcceptedAUP;
			}
			set
			{
				if ((this._DAcceptedAUP != value))
				{
					this.OnDAcceptedAUPChanging(value);
					this.SendPropertyChanging();
					this._DAcceptedAUP = value;
					this.SendPropertyChanged("DAcceptedAUP");
					this.OnDAcceptedAUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_FSSIGNUP", Storage="_FSSIGNUPs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<FSSIGNUP> FSSIGNUPs
		{
			get
			{
				return this._FSSIGNUPs;
			}
			set
			{
				this._FSSIGNUPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FSSIGNUPs(FSSIGNUP entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_FSSIGNUPs(FSSIGNUP entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FSCATEGS")]
	public partial class FSCATEG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sCateg;
		
		private char _cKind;
		
		private int _iOrder;
		
		private string _sNotes;
		
		private EntitySet<FSSIGNUP> _FSSIGNUPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsCategChanging(string value);
    partial void OnsCategChanged();
    partial void OncKindChanging(char value);
    partial void OncKindChanged();
    partial void OniOrderChanging(int value);
    partial void OniOrderChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    #endregion
		
		public FSCATEG()
		{
			this._FSSIGNUPs = new EntitySet<FSSIGNUP>(new Action<FSSIGNUP>(this.attach_FSSIGNUPs), new Action<FSSIGNUP>(this.detach_FSSIGNUPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCateg", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sCateg
		{
			get
			{
				return this._sCateg;
			}
			set
			{
				if ((this._sCateg != value))
				{
					this.OnsCategChanging(value);
					this.SendPropertyChanging();
					this._sCateg = value;
					this.SendPropertyChanged("sCateg");
					this.OnsCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cKind", DbType="NChar(1) NOT NULL")]
		public char cKind
		{
			get
			{
				return this._cKind;
			}
			set
			{
				if ((this._cKind != value))
				{
					this.OncKindChanging(value);
					this.SendPropertyChanging();
					this._cKind = value;
					this.SendPropertyChanged("cKind");
					this.OncKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOrder", DbType="Int NOT NULL")]
		public int iOrder
		{
			get
			{
				return this._iOrder;
			}
			set
			{
				if ((this._iOrder != value))
				{
					this.OniOrderChanging(value);
					this.SendPropertyChanging();
					this._iOrder = value;
					this.SendPropertyChanged("iOrder");
					this.OniOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSCATEG_FSSIGNUP", Storage="_FSSIGNUPs", ThisKey="ID", OtherKey="iCateg")]
		public EntitySet<FSSIGNUP> FSSIGNUPs
		{
			get
			{
				return this._FSSIGNUPs;
			}
			set
			{
				this._FSSIGNUPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FSSIGNUPs(FSSIGNUP entity)
		{
			this.SendPropertyChanging();
			entity.FSCATEG = this;
		}
		
		private void detach_FSSIGNUPs(FSSIGNUP entity)
		{
			this.SendPropertyChanging();
			entity.FSCATEG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FSDATES")]
	public partial class FSDATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _Date;
		
		private bool _bEnabled;
		
		private string _sNote;
		
		private EntitySet<FSSIGNUP> _FSSIGNUPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnbEnabledChanging(bool value);
    partial void OnbEnabledChanged();
    partial void OnsNoteChanging(string value);
    partial void OnsNoteChanged();
    #endregion
		
		public FSDATE()
		{
			this._FSSIGNUPs = new EntitySet<FSSIGNUP>(new Action<FSSIGNUP>(this.attach_FSSIGNUPs), new Action<FSSIGNUP>(this.detach_FSSIGNUPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bEnabled", DbType="Bit NOT NULL")]
		public bool bEnabled
		{
			get
			{
				return this._bEnabled;
			}
			set
			{
				if ((this._bEnabled != value))
				{
					this.OnbEnabledChanging(value);
					this.SendPropertyChanging();
					this._bEnabled = value;
					this.SendPropertyChanged("bEnabled");
					this.OnbEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNote", DbType="NVarChar(50)")]
		public string sNote
		{
			get
			{
				return this._sNote;
			}
			set
			{
				if ((this._sNote != value))
				{
					this.OnsNoteChanging(value);
					this.SendPropertyChanging();
					this._sNote = value;
					this.SendPropertyChanged("sNote");
					this.OnsNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSDATE_FSSIGNUP", Storage="_FSSIGNUPs", ThisKey="ID", OtherKey="iDate")]
		public EntitySet<FSSIGNUP> FSSIGNUPs
		{
			get
			{
				return this._FSSIGNUPs;
			}
			set
			{
				this._FSSIGNUPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FSSIGNUPs(FSSIGNUP entity)
		{
			this.SendPropertyChanging();
			entity.FSDATE = this;
		}
		
		private void detach_FSSIGNUPs(FSSIGNUP entity)
		{
			this.SendPropertyChanging();
			entity.FSDATE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FSSIGNUPS")]
	public partial class FSSIGNUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTimeOffset _DEntered;
		
		private System.DateTimeOffset _DModified;
		
		private int _iDate;
		
		private int _iCateg;
		
		private int _iPerson;
		
		private string _sRemarks;
		
		private string _sNameInSchedule;
		
		private EntityRef<FSCATEG> _FSCATEG;
		
		private EntityRef<FSDATE> _FSDATE;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDEnteredChanging(System.DateTimeOffset value);
    partial void OnDEnteredChanged();
    partial void OnDModifiedChanging(System.DateTimeOffset value);
    partial void OnDModifiedChanged();
    partial void OniDateChanging(int value);
    partial void OniDateChanged();
    partial void OniCategChanging(int value);
    partial void OniCategChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OnsRemarksChanging(string value);
    partial void OnsRemarksChanged();
    partial void OnsNameInScheduleChanging(string value);
    partial void OnsNameInScheduleChanged();
    #endregion
		
		public FSSIGNUP()
		{
			this._FSCATEG = default(EntityRef<FSCATEG>);
			this._FSDATE = default(EntityRef<FSDATE>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEntered", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DEntered
		{
			get
			{
				return this._DEntered;
			}
			set
			{
				if ((this._DEntered != value))
				{
					this.OnDEnteredChanging(value);
					this.SendPropertyChanging();
					this._DEntered = value;
					this.SendPropertyChanged("DEntered");
					this.OnDEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DModified", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DModified
		{
			get
			{
				return this._DModified;
			}
			set
			{
				if ((this._DModified != value))
				{
					this.OnDModifiedChanging(value);
					this.SendPropertyChanging();
					this._DModified = value;
					this.SendPropertyChanged("DModified");
					this.OnDModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDate", DbType="Int NOT NULL")]
		public int iDate
		{
			get
			{
				return this._iDate;
			}
			set
			{
				if ((this._iDate != value))
				{
					if (this._FSDATE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniDateChanging(value);
					this.SendPropertyChanging();
					this._iDate = value;
					this.SendPropertyChanged("iDate");
					this.OniDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iCateg", DbType="Int NOT NULL")]
		public int iCateg
		{
			get
			{
				return this._iCateg;
			}
			set
			{
				if ((this._iCateg != value))
				{
					if (this._FSCATEG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniCategChanging(value);
					this.SendPropertyChanging();
					this._iCateg = value;
					this.SendPropertyChanged("iCateg");
					this.OniCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRemarks", DbType="NVarChar(MAX)")]
		public string sRemarks
		{
			get
			{
				return this._sRemarks;
			}
			set
			{
				if ((this._sRemarks != value))
				{
					this.OnsRemarksChanging(value);
					this.SendPropertyChanging();
					this._sRemarks = value;
					this.SendPropertyChanged("sRemarks");
					this.OnsRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNameInSchedule", DbType="NVarChar(55)")]
		public string sNameInSchedule
		{
			get
			{
				return this._sNameInSchedule;
			}
			set
			{
				if ((this._sNameInSchedule != value))
				{
					this.OnsNameInScheduleChanging(value);
					this.SendPropertyChanging();
					this._sNameInSchedule = value;
					this.SendPropertyChanged("sNameInSchedule");
					this.OnsNameInScheduleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSCATEG_FSSIGNUP", Storage="_FSCATEG", ThisKey="iCateg", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FSCATEG FSCATEG
		{
			get
			{
				return this._FSCATEG.Entity;
			}
			set
			{
				FSCATEG previousValue = this._FSCATEG.Entity;
				if (((previousValue != value) 
							|| (this._FSCATEG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSCATEG.Entity = null;
						previousValue.FSSIGNUPs.Remove(this);
					}
					this._FSCATEG.Entity = value;
					if ((value != null))
					{
						value.FSSIGNUPs.Add(this);
						this._iCateg = value.ID;
					}
					else
					{
						this._iCateg = default(int);
					}
					this.SendPropertyChanged("FSCATEG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FSDATE_FSSIGNUP", Storage="_FSDATE", ThisKey="iDate", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FSDATE FSDATE
		{
			get
			{
				return this._FSDATE.Entity;
			}
			set
			{
				FSDATE previousValue = this._FSDATE.Entity;
				if (((previousValue != value) 
							|| (this._FSDATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FSDATE.Entity = null;
						previousValue.FSSIGNUPs.Remove(this);
					}
					this._FSDATE.Entity = value;
					if ((value != null))
					{
						value.FSSIGNUPs.Add(this);
						this._iDate = value.ID;
					}
					else
					{
						this._iDate = default(int);
					}
					this.SendPropertyChanged("FSDATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_FSSIGNUP", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.FSSIGNUPs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.FSSIGNUPs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sfOpsSchedInitDateResult
	{
		
		private System.Nullable<int> _iDate;
		
		private System.Nullable<System.DateTime> _Dresult;
		
		public sfOpsSchedInitDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDate", DbType="Int")]
		public System.Nullable<int> iDate
		{
			get
			{
				return this._iDate;
			}
			set
			{
				if ((this._iDate != value))
				{
					this._iDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dresult", DbType="Date")]
		public System.Nullable<System.DateTime> Dresult
		{
			get
			{
				return this._Dresult;
			}
			set
			{
				if ((this._Dresult != value))
				{
					this._Dresult = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
