#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class TNPV_PeopleContactsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPHYSADDRESS(PHYSADDRESS instance);
    partial void UpdatePHYSADDRESS(PHYSADDRESS instance);
    partial void DeletePHYSADDRESS(PHYSADDRESS instance);
    partial void InsertCONTACTTYPE(CONTACTTYPE instance);
    partial void UpdateCONTACTTYPE(CONTACTTYPE instance);
    partial void DeleteCONTACTTYPE(CONTACTTYPE instance);
    partial void InsertPEOPLECONTACT(PEOPLECONTACT instance);
    partial void UpdatePEOPLECONTACT(PEOPLECONTACT instance);
    partial void DeletePEOPLECONTACT(PEOPLECONTACT instance);
    partial void InsertPEOPLEOFFICE(PEOPLEOFFICE instance);
    partial void UpdatePEOPLEOFFICE(PEOPLEOFFICE instance);
    partial void DeletePEOPLEOFFICE(PEOPLEOFFICE instance);
    partial void InsertBOARDOFFICE(BOARDOFFICE instance);
    partial void UpdateBOARDOFFICE(BOARDOFFICE instance);
    partial void DeleteBOARDOFFICE(BOARDOFFICE instance);
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    #endregion
		
		public TNPV_PeopleContactsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TNPV_PeopleContactsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TNPV_PeopleContactsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TNPV_PeopleContactsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TNPV_PeopleContactsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TNPV_PeopleContact> TNPV_PeopleContacts
		{
			get
			{
				return this.GetTable<TNPV_PeopleContact>();
			}
		}
		
		public System.Data.Linq.Table<PHYSADDRESS> PHYSADDRESSes
		{
			get
			{
				return this.GetTable<PHYSADDRESS>();
			}
		}
		
		public System.Data.Linq.Table<CONTACTTYPE> CONTACTTYPEs
		{
			get
			{
				return this.GetTable<CONTACTTYPE>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLECONTACT> PEOPLECONTACTs
		{
			get
			{
				return this.GetTable<PEOPLECONTACT>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLEOFFICE> PEOPLEOFFICEs
		{
			get
			{
				return this.GetTable<PEOPLEOFFICE>();
			}
		}
		
		public System.Data.Linq.Table<BOARDOFFICE> BOARDOFFICEs
		{
			get
			{
				return this.GetTable<BOARDOFFICE>();
			}
		}
		
		public System.Data.Linq.Table<TNPV_TelephRoster> TNPV_TelephRosters
		{
			get
			{
				return this.GetTable<TNPV_TelephRoster>();
			}
		}
		
		public System.Data.Linq.Table<TNPV_EmailRoster> TNPV_EmailRosters
		{
			get
			{
				return this.GetTable<TNPV_EmailRoster>();
			}
		}
		
		public System.Data.Linq.Table<TNPV_PhysAddrRoster> TNPV_PhysAddrRosters
		{
			get
			{
				return this.GetTable<TNPV_PhysAddrRoster>();
			}
		}
		
		public System.Data.Linq.Table<TNPV_QualifRoster> TNPV_QualifRosters
		{
			get
			{
				return this.GetTable<TNPV_QualifRoster>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_PeopleContacts")]
	public partial class TNPV_PeopleContact
	{
		
		private int _ID;
		
		private string _sDisplayName;
		
		private string _sPeopleContactType;
		
		private System.Nullable<System.DateTime> _DBegin;
		
		private System.Nullable<System.DateTime> _DEnd;
		
		private System.Nullable<int> _iPhysAddress;
		
		private System.Nullable<bool> _bHasPhysAddr;
		
		private string _sContactInfo;
		
		private System.Nullable<decimal> _dContactPriorityRanking;
		
		public TNPV_PeopleContact()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPeopleContactType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sPeopleContactType
		{
			get
			{
				return this._sPeopleContactType;
			}
			set
			{
				if ((this._sPeopleContactType != value))
				{
					this._sPeopleContactType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this._DBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this._DEnd = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPhysAddress", DbType="Int")]
		public System.Nullable<int> iPhysAddress
		{
			get
			{
				return this._iPhysAddress;
			}
			set
			{
				if ((this._iPhysAddress != value))
				{
					this._iPhysAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bHasPhysAddr", DbType="Bit")]
		public System.Nullable<bool> bHasPhysAddr
		{
			get
			{
				return this._bHasPhysAddr;
			}
			set
			{
				if ((this._bHasPhysAddr != value))
				{
					this._bHasPhysAddr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sContactInfo", DbType="NVarChar(MAX)")]
		public string sContactInfo
		{
			get
			{
				return this._sContactInfo;
			}
			set
			{
				if ((this._sContactInfo != value))
				{
					this._sContactInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dContactPriorityRanking", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> dContactPriorityRanking
		{
			get
			{
				return this._dContactPriorityRanking;
			}
			set
			{
				if ((this._dContactPriorityRanking != value))
				{
					this._dContactPriorityRanking = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHYSADDRESSES")]
	public partial class PHYSADDRESS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sAddress1;
		
		private string _sAddress2;
		
		private string _sCity;
		
		private string _sStateProv;
		
		private string _sZipPostal;
		
		private string _sCountry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsAddress1Changing(string value);
    partial void OnsAddress1Changed();
    partial void OnsAddress2Changing(string value);
    partial void OnsAddress2Changed();
    partial void OnsCityChanging(string value);
    partial void OnsCityChanged();
    partial void OnsStateProvChanging(string value);
    partial void OnsStateProvChanged();
    partial void OnsZipPostalChanging(string value);
    partial void OnsZipPostalChanged();
    partial void OnsCountryChanging(string value);
    partial void OnsCountryChanged();
    #endregion
		
		public PHYSADDRESS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress1", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sAddress1
		{
			get
			{
				return this._sAddress1;
			}
			set
			{
				if ((this._sAddress1 != value))
				{
					this.OnsAddress1Changing(value);
					this.SendPropertyChanging();
					this._sAddress1 = value;
					this.SendPropertyChanged("sAddress1");
					this.OnsAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress2", DbType="NVarChar(30)")]
		public string sAddress2
		{
			get
			{
				return this._sAddress2;
			}
			set
			{
				if ((this._sAddress2 != value))
				{
					this.OnsAddress2Changing(value);
					this.SendPropertyChanging();
					this._sAddress2 = value;
					this.SendPropertyChanged("sAddress2");
					this.OnsAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCity", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sCity
		{
			get
			{
				return this._sCity;
			}
			set
			{
				if ((this._sCity != value))
				{
					this.OnsCityChanging(value);
					this.SendPropertyChanging();
					this._sCity = value;
					this.SendPropertyChanged("sCity");
					this.OnsCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sStateProv", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sStateProv
		{
			get
			{
				return this._sStateProv;
			}
			set
			{
				if ((this._sStateProv != value))
				{
					this.OnsStateProvChanging(value);
					this.SendPropertyChanging();
					this._sStateProv = value;
					this.SendPropertyChanged("sStateProv");
					this.OnsStateProvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sZipPostal", DbType="NVarChar(15)")]
		public string sZipPostal
		{
			get
			{
				return this._sZipPostal;
			}
			set
			{
				if ((this._sZipPostal != value))
				{
					this.OnsZipPostalChanging(value);
					this.SendPropertyChanging();
					this._sZipPostal = value;
					this.SendPropertyChanged("sZipPostal");
					this.OnsZipPostalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCountry", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sCountry
		{
			get
			{
				return this._sCountry;
			}
			set
			{
				if ((this._sCountry != value))
				{
					this.OnsCountryChanging(value);
					this.SendPropertyChanging();
					this._sCountry = value;
					this.SendPropertyChanged("sCountry");
					this.OnsCountryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTACTTYPES")]
	public partial class CONTACTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sPeopleContactType;
		
		private bool _bHasPhysAddr;
		
		private decimal _dDefaultRank;
		
		private EntitySet<PEOPLECONTACT> _PEOPLECONTACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsPeopleContactTypeChanging(string value);
    partial void OnsPeopleContactTypeChanged();
    partial void OnbHasPhysAddrChanging(bool value);
    partial void OnbHasPhysAddrChanged();
    partial void OndDefaultRankChanging(decimal value);
    partial void OndDefaultRankChanged();
    #endregion
		
		public CONTACTTYPE()
		{
			this._PEOPLECONTACTs = new EntitySet<PEOPLECONTACT>(new Action<PEOPLECONTACT>(this.attach_PEOPLECONTACTs), new Action<PEOPLECONTACT>(this.detach_PEOPLECONTACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPeopleContactType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sPeopleContactType
		{
			get
			{
				return this._sPeopleContactType;
			}
			set
			{
				if ((this._sPeopleContactType != value))
				{
					this.OnsPeopleContactTypeChanging(value);
					this.SendPropertyChanging();
					this._sPeopleContactType = value;
					this.SendPropertyChanged("sPeopleContactType");
					this.OnsPeopleContactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bHasPhysAddr", DbType="Bit NOT NULL")]
		public bool bHasPhysAddr
		{
			get
			{
				return this._bHasPhysAddr;
			}
			set
			{
				if ((this._bHasPhysAddr != value))
				{
					this.OnbHasPhysAddrChanging(value);
					this.SendPropertyChanging();
					this._bHasPhysAddr = value;
					this.SendPropertyChanged("bHasPhysAddr");
					this.OnbHasPhysAddrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDefaultRank", DbType="Decimal(5,2) NOT NULL")]
		public decimal dDefaultRank
		{
			get
			{
				return this._dDefaultRank;
			}
			set
			{
				if ((this._dDefaultRank != value))
				{
					this.OndDefaultRankChanging(value);
					this.SendPropertyChanging();
					this._dDefaultRank = value;
					this.SendPropertyChanged("dDefaultRank");
					this.OndDefaultRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTACTTYPE_PEOPLECONTACT", Storage="_PEOPLECONTACTs", ThisKey="ID", OtherKey="iContactType")]
		public EntitySet<PEOPLECONTACT> PEOPLECONTACTs
		{
			get
			{
				return this._PEOPLECONTACTs;
			}
			set
			{
				this._PEOPLECONTACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.CONTACTTYPE = this;
		}
		
		private void detach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.CONTACTTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLECONTACTS")]
	public partial class PEOPLECONTACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iContactType;
		
		private System.Nullable<System.DateTime> _DBegin;
		
		private System.Nullable<System.DateTime> _DEnd;
		
		private System.Nullable<int> _iPhysAddress;
		
		private string _sContactInfo;
		
		private System.Nullable<decimal> _dContactPriorityRanking;
		
		private EntityRef<CONTACTTYPE> _CONTACTTYPE;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniContactTypeChanging(int value);
    partial void OniContactTypeChanged();
    partial void OnDBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDBeginChanged();
    partial void OnDEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDEndChanged();
    partial void OniPhysAddressChanging(System.Nullable<int> value);
    partial void OniPhysAddressChanged();
    partial void OnsContactInfoChanging(string value);
    partial void OnsContactInfoChanged();
    partial void OndContactPriorityRankingChanging(System.Nullable<decimal> value);
    partial void OndContactPriorityRankingChanged();
    #endregion
		
		public PEOPLECONTACT()
		{
			this._CONTACTTYPE = default(EntityRef<CONTACTTYPE>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iContactType", DbType="Int NOT NULL")]
		public int iContactType
		{
			get
			{
				return this._iContactType;
			}
			set
			{
				if ((this._iContactType != value))
				{
					if (this._CONTACTTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniContactTypeChanging(value);
					this.SendPropertyChanging();
					this._iContactType = value;
					this.SendPropertyChanged("iContactType");
					this.OniContactTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this.OnDBeginChanging(value);
					this.SendPropertyChanging();
					this._DBegin = value;
					this.SendPropertyChanged("DBegin");
					this.OnDBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="DateTime2")]
		public System.Nullable<System.DateTime> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this.OnDEndChanging(value);
					this.SendPropertyChanging();
					this._DEnd = value;
					this.SendPropertyChanged("DEnd");
					this.OnDEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPhysAddress", DbType="Int")]
		public System.Nullable<int> iPhysAddress
		{
			get
			{
				return this._iPhysAddress;
			}
			set
			{
				if ((this._iPhysAddress != value))
				{
					this.OniPhysAddressChanging(value);
					this.SendPropertyChanging();
					this._iPhysAddress = value;
					this.SendPropertyChanged("iPhysAddress");
					this.OniPhysAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sContactInfo", DbType="NVarChar(MAX)")]
		public string sContactInfo
		{
			get
			{
				return this._sContactInfo;
			}
			set
			{
				if ((this._sContactInfo != value))
				{
					this.OnsContactInfoChanging(value);
					this.SendPropertyChanging();
					this._sContactInfo = value;
					this.SendPropertyChanged("sContactInfo");
					this.OnsContactInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dContactPriorityRanking", DbType="Decimal(5,2)")]
		public System.Nullable<decimal> dContactPriorityRanking
		{
			get
			{
				return this._dContactPriorityRanking;
			}
			set
			{
				if ((this._dContactPriorityRanking != value))
				{
					this.OndContactPriorityRankingChanging(value);
					this.SendPropertyChanging();
					this._dContactPriorityRanking = value;
					this.SendPropertyChanged("dContactPriorityRanking");
					this.OndContactPriorityRankingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTACTTYPE_PEOPLECONTACT", Storage="_CONTACTTYPE", ThisKey="iContactType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CONTACTTYPE CONTACTTYPE
		{
			get
			{
				return this._CONTACTTYPE.Entity;
			}
			set
			{
				CONTACTTYPE previousValue = this._CONTACTTYPE.Entity;
				if (((previousValue != value) 
							|| (this._CONTACTTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTACTTYPE.Entity = null;
						previousValue.PEOPLECONTACTs.Remove(this);
					}
					this._CONTACTTYPE.Entity = value;
					if ((value != null))
					{
						value.PEOPLECONTACTs.Add(this);
						this._iContactType = value.ID;
					}
					else
					{
						this._iContactType = default(int);
					}
					this.SendPropertyChanged("CONTACTTYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLECONTACT", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLECONTACTs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLECONTACTs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLEOFFICES")]
	public partial class PEOPLEOFFICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iBoardOffice;
		
		private System.DateTimeOffset _DOfficeBegin;
		
		private System.DateTimeOffset _DOfficeEnd;
		
		private string _sAdditionalInfo;
		
		private EntityRef<BOARDOFFICE> _BOARDOFFICE;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniBoardOfficeChanging(int value);
    partial void OniBoardOfficeChanged();
    partial void OnDOfficeBeginChanging(System.DateTimeOffset value);
    partial void OnDOfficeBeginChanged();
    partial void OnDOfficeEndChanging(System.DateTimeOffset value);
    partial void OnDOfficeEndChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public PEOPLEOFFICE()
		{
			this._BOARDOFFICE = default(EntityRef<BOARDOFFICE>);
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iBoardOffice", DbType="Int NOT NULL")]
		public int iBoardOffice
		{
			get
			{
				return this._iBoardOffice;
			}
			set
			{
				if ((this._iBoardOffice != value))
				{
					if (this._BOARDOFFICE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniBoardOfficeChanging(value);
					this.SendPropertyChanging();
					this._iBoardOffice = value;
					this.SendPropertyChanged("iBoardOffice");
					this.OniBoardOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOfficeBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DOfficeBegin
		{
			get
			{
				return this._DOfficeBegin;
			}
			set
			{
				if ((this._DOfficeBegin != value))
				{
					this.OnDOfficeBeginChanging(value);
					this.SendPropertyChanging();
					this._DOfficeBegin = value;
					this.SendPropertyChanged("DOfficeBegin");
					this.OnDOfficeBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOfficeEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DOfficeEnd
		{
			get
			{
				return this._DOfficeEnd;
			}
			set
			{
				if ((this._DOfficeEnd != value))
				{
					this.OnDOfficeEndChanging(value);
					this.SendPropertyChanging();
					this._DOfficeEnd = value;
					this.SendPropertyChanged("DOfficeEnd");
					this.OnDOfficeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="NVarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOARDOFFICE_PEOPLEOFFICE", Storage="_BOARDOFFICE", ThisKey="iBoardOffice", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BOARDOFFICE BOARDOFFICE
		{
			get
			{
				return this._BOARDOFFICE.Entity;
			}
			set
			{
				BOARDOFFICE previousValue = this._BOARDOFFICE.Entity;
				if (((previousValue != value) 
							|| (this._BOARDOFFICE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BOARDOFFICE.Entity = null;
						previousValue.PEOPLEOFFICEs.Remove(this);
					}
					this._BOARDOFFICE.Entity = value;
					if ((value != null))
					{
						value.PEOPLEOFFICEs.Add(this);
						this._iBoardOffice = value.ID;
					}
					else
					{
						this._iBoardOffice = default(int);
					}
					this.SendPropertyChanged("BOARDOFFICE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEOFFICE", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.PEOPLEOFFICEs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.PEOPLEOFFICEs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BOARDOFFICES")]
	public partial class BOARDOFFICE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sBoardOffice;
		
		private EntitySet<PEOPLEOFFICE> _PEOPLEOFFICEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsBoardOfficeChanging(string value);
    partial void OnsBoardOfficeChanged();
    #endregion
		
		public BOARDOFFICE()
		{
			this._PEOPLEOFFICEs = new EntitySet<PEOPLEOFFICE>(new Action<PEOPLEOFFICE>(this.attach_PEOPLEOFFICEs), new Action<PEOPLEOFFICE>(this.detach_PEOPLEOFFICEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sBoardOffice", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sBoardOffice
		{
			get
			{
				return this._sBoardOffice;
			}
			set
			{
				if ((this._sBoardOffice != value))
				{
					this.OnsBoardOfficeChanging(value);
					this.SendPropertyChanging();
					this._sBoardOffice = value;
					this.SendPropertyChanged("sBoardOffice");
					this.OnsBoardOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BOARDOFFICE_PEOPLEOFFICE", Storage="_PEOPLEOFFICEs", ThisKey="ID", OtherKey="iBoardOffice")]
		public EntitySet<PEOPLEOFFICE> PEOPLEOFFICEs
		{
			get
			{
				return this._PEOPLEOFFICEs;
			}
			set
			{
				this._PEOPLEOFFICEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.BOARDOFFICE = this;
		}
		
		private void detach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.BOARDOFFICE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_TelephRoster")]
	public partial class TNPV_TelephRoster
	{
		
		private string _sDisplayName;
		
		private string _sContactInfo;
		
		private string _sPeopleContactType;
		
		public TNPV_TelephRoster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sContactInfo", DbType="NVarChar(MAX)")]
		public string sContactInfo
		{
			get
			{
				return this._sContactInfo;
			}
			set
			{
				if ((this._sContactInfo != value))
				{
					this._sContactInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPeopleContactType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sPeopleContactType
		{
			get
			{
				return this._sPeopleContactType;
			}
			set
			{
				if ((this._sPeopleContactType != value))
				{
					this._sPeopleContactType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_EmailRoster")]
	public partial class TNPV_EmailRoster
	{
		
		private string _sDisplayName;
		
		private string _sContactInfo;
		
		private string _sPeopleContactType;
		
		public TNPV_EmailRoster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sContactInfo", DbType="NVarChar(MAX)")]
		public string sContactInfo
		{
			get
			{
				return this._sContactInfo;
			}
			set
			{
				if ((this._sContactInfo != value))
				{
					this._sContactInfo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPeopleContactType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sPeopleContactType
		{
			get
			{
				return this._sPeopleContactType;
			}
			set
			{
				if ((this._sPeopleContactType != value))
				{
					this._sPeopleContactType = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_PhysAddrRoster")]
	public partial class TNPV_PhysAddrRoster
	{
		
		private string _sDisplayName;
		
		private string _sAddress1;
		
		private string _sAddress2;
		
		private string _sCity;
		
		private string _sStateProv;
		
		private string _sZipPostal;
		
		private string _sCountry;
		
		private string _sPeopleContactType;
		
		private bool _bHasPhysAddr;
		
		public TNPV_PhysAddrRoster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress1", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sAddress1
		{
			get
			{
				return this._sAddress1;
			}
			set
			{
				if ((this._sAddress1 != value))
				{
					this._sAddress1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAddress2", DbType="NVarChar(30)")]
		public string sAddress2
		{
			get
			{
				return this._sAddress2;
			}
			set
			{
				if ((this._sAddress2 != value))
				{
					this._sAddress2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCity", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sCity
		{
			get
			{
				return this._sCity;
			}
			set
			{
				if ((this._sCity != value))
				{
					this._sCity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sStateProv", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sStateProv
		{
			get
			{
				return this._sStateProv;
			}
			set
			{
				if ((this._sStateProv != value))
				{
					this._sStateProv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sZipPostal", DbType="NVarChar(15)")]
		public string sZipPostal
		{
			get
			{
				return this._sZipPostal;
			}
			set
			{
				if ((this._sZipPostal != value))
				{
					this._sZipPostal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCountry", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sCountry
		{
			get
			{
				return this._sCountry;
			}
			set
			{
				if ((this._sCountry != value))
				{
					this._sCountry = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPeopleContactType", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sPeopleContactType
		{
			get
			{
				return this._sPeopleContactType;
			}
			set
			{
				if ((this._sPeopleContactType != value))
				{
					this._sPeopleContactType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bHasPhysAddr", DbType="Bit NOT NULL")]
		public bool bHasPhysAddr
		{
			get
			{
				return this._bHasPhysAddr;
			}
			set
			{
				if ((this._bHasPhysAddr != value))
				{
					this._bHasPhysAddr = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TNPV_QualifRoster")]
	public partial class TNPV_QualifRoster
	{
		
		private string _sDisplayName;
		
		private string _Certification;
		
		private string _Rating;
		
		private string _Qualification;
		
		private string _Since;
		
		private string _Expires;
		
		public TNPV_QualifRoster()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Certification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Certification
		{
			get
			{
				return this._Certification;
			}
			set
			{
				if ((this._Certification != value))
				{
					this._Certification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rating", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Rating
		{
			get
			{
				return this._Rating;
			}
			set
			{
				if ((this._Rating != value))
				{
					this._Rating = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Qualification
		{
			get
			{
				return this._Qualification;
			}
			set
			{
				if ((this._Qualification != value))
				{
					this._Qualification = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Since", DbType="VarChar(30)")]
		public string Since
		{
			get
			{
				return this._Since;
			}
			set
			{
				if ((this._Since != value))
				{
					this._Since = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expires", DbType="VarChar(30)")]
		public string Expires
		{
			get
			{
				return this._Expires;
			}
			set
			{
				if ((this._Expires != value))
				{
					this._Expires = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private System.Nullable<System.DateTimeOffset> _DAcceptedAUP;
		
		private EntitySet<PEOPLECONTACT> _PEOPLECONTACTs;
		
		private EntitySet<PEOPLEOFFICE> _PEOPLEOFFICEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    partial void OnDAcceptedAUPChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDAcceptedAUPChanged();
    #endregion
		
		public PEOPLE()
		{
			this._PEOPLECONTACTs = new EntitySet<PEOPLECONTACT>(new Action<PEOPLECONTACT>(this.attach_PEOPLECONTACTs), new Action<PEOPLECONTACT>(this.detach_PEOPLECONTACTs));
			this._PEOPLEOFFICEs = new EntitySet<PEOPLEOFFICE>(new Action<PEOPLEOFFICE>(this.attach_PEOPLEOFFICEs), new Action<PEOPLEOFFICE>(this.detach_PEOPLEOFFICEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAcceptedAUP", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DAcceptedAUP
		{
			get
			{
				return this._DAcceptedAUP;
			}
			set
			{
				if ((this._DAcceptedAUP != value))
				{
					this.OnDAcceptedAUPChanging(value);
					this.SendPropertyChanging();
					this._DAcceptedAUP = value;
					this.SendPropertyChanged("DAcceptedAUP");
					this.OnDAcceptedAUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLECONTACT", Storage="_PEOPLECONTACTs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLECONTACT> PEOPLECONTACTs
		{
			get
			{
				return this._PEOPLECONTACTs;
			}
			set
			{
				this._PEOPLECONTACTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_PEOPLEOFFICE", Storage="_PEOPLEOFFICEs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<PEOPLEOFFICE> PEOPLEOFFICEs
		{
			get
			{
				return this._PEOPLEOFFICEs;
			}
			set
			{
				this._PEOPLEOFFICEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLECONTACTs(PEOPLECONTACT entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
		
		private void attach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_PEOPLEOFFICEs(PEOPLEOFFICE entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
}
#pragma warning restore 1591
