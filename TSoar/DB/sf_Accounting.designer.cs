#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class sf_AccountingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSF_ACCOUNT(SF_ACCOUNT instance);
    partial void UpdateSF_ACCOUNT(SF_ACCOUNT instance);
    partial void DeleteSF_ACCOUNT(SF_ACCOUNT instance);
    partial void InsertSF_ATTACHMENTCATEG(SF_ATTACHMENTCATEG instance);
    partial void UpdateSF_ATTACHMENTCATEG(SF_ATTACHMENTCATEG instance);
    partial void DeleteSF_ATTACHMENTCATEG(SF_ATTACHMENTCATEG instance);
    partial void InsertSF_XACTTYPE(SF_XACTTYPE instance);
    partial void UpdateSF_XACTTYPE(SF_XACTTYPE instance);
    partial void DeleteSF_XACTTYPE(SF_XACTTYPE instance);
    partial void InsertSF_XACT_DOC(SF_XACT_DOC instance);
    partial void UpdateSF_XACT_DOC(SF_XACT_DOC instance);
    partial void DeleteSF_XACT_DOC(SF_XACT_DOC instance);
    partial void InsertSF_ACCTTYPE(SF_ACCTTYPE instance);
    partial void UpdateSF_ACCTTYPE(SF_ACCTTYPE instance);
    partial void DeleteSF_ACCTTYPE(SF_ACCTTYPE instance);
    partial void InsertSF_PAYMENTMETHOD(SF_PAYMENTMETHOD instance);
    partial void UpdateSF_PAYMENTMETHOD(SF_PAYMENTMETHOD instance);
    partial void DeleteSF_PAYMENTMETHOD(SF_PAYMENTMETHOD instance);
    partial void InsertSF_ALLOWEDATTACHTYPE(SF_ALLOWEDATTACHTYPE instance);
    partial void UpdateSF_ALLOWEDATTACHTYPE(SF_ALLOWEDATTACHTYPE instance);
    partial void DeleteSF_ALLOWEDATTACHTYPE(SF_ALLOWEDATTACHTYPE instance);
    partial void InsertSF_DOC(SF_DOC instance);
    partial void UpdateSF_DOC(SF_DOC instance);
    partial void DeleteSF_DOC(SF_DOC instance);
    partial void InsertSF_AUDITTRAIL(SF_AUDITTRAIL instance);
    partial void UpdateSF_AUDITTRAIL(SF_AUDITTRAIL instance);
    partial void DeleteSF_AUDITTRAIL(SF_AUDITTRAIL instance);
    partial void InsertSF_ENTRy(SF_ENTRy instance);
    partial void UpdateSF_ENTRy(SF_ENTRy instance);
    partial void DeleteSF_ENTRy(SF_ENTRy instance);
    partial void InsertSF_VENDOR(SF_VENDOR instance);
    partial void UpdateSF_VENDOR(SF_VENDOR instance);
    partial void DeleteSF_VENDOR(SF_VENDOR instance);
    partial void InsertSF_XACT(SF_XACT instance);
    partial void UpdateSF_XACT(SF_XACT instance);
    partial void DeleteSF_XACT(SF_XACT instance);
    partial void InsertEQUIPTYPE(EQUIPTYPE instance);
    partial void UpdateEQUIPTYPE(EQUIPTYPE instance);
    partial void DeleteEQUIPTYPE(EQUIPTYPE instance);
    partial void InsertLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void UpdateLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void DeleteLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void InsertQBO_ITEMNAME(QBO_ITEMNAME instance);
    partial void UpdateQBO_ITEMNAME(QBO_ITEMNAME instance);
    partial void DeleteQBO_ITEMNAME(QBO_ITEMNAME instance);
    partial void InsertFA_ITEM(FA_ITEM instance);
    partial void UpdateFA_ITEM(FA_ITEM instance);
    partial void DeleteFA_ITEM(FA_ITEM instance);
    partial void InsertFA_PMTTERM(FA_PMTTERM instance);
    partial void UpdateFA_PMTTERM(FA_PMTTERM instance);
    partial void DeleteFA_PMTTERM(FA_PMTTERM instance);
    partial void InsertRATE(RATE instance);
    partial void UpdateRATE(RATE instance);
    partial void DeleteRATE(RATE instance);
    partial void InsertTIREWARD(TIREWARD instance);
    partial void UpdateTIREWARD(TIREWARD instance);
    partial void DeleteTIREWARD(TIREWARD instance);
    #endregion
		
		public sf_AccountingDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sf_AccountingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sf_AccountingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sf_AccountingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sf_AccountingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SF_ACCOUNT> SF_ACCOUNTs
		{
			get
			{
				return this.GetTable<SF_ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<SF_ATTACHMENTCATEG> SF_ATTACHMENTCATEGs
		{
			get
			{
				return this.GetTable<SF_ATTACHMENTCATEG>();
			}
		}
		
		public System.Data.Linq.Table<SF_XACTTYPE> SF_XACTTYPEs
		{
			get
			{
				return this.GetTable<SF_XACTTYPE>();
			}
		}
		
		public System.Data.Linq.Table<SF_XACT_DOC> SF_XACT_DOCs
		{
			get
			{
				return this.GetTable<SF_XACT_DOC>();
			}
		}
		
		public System.Data.Linq.Table<SF_ACCTTYPE> SF_ACCTTYPEs
		{
			get
			{
				return this.GetTable<SF_ACCTTYPE>();
			}
		}
		
		public System.Data.Linq.Table<SF_PAYMENTMETHOD> SF_PAYMENTMETHODs
		{
			get
			{
				return this.GetTable<SF_PAYMENTMETHOD>();
			}
		}
		
		public System.Data.Linq.Table<SF_ALLOWEDATTACHTYPE> SF_ALLOWEDATTACHTYPEs
		{
			get
			{
				return this.GetTable<SF_ALLOWEDATTACHTYPE>();
			}
		}
		
		public System.Data.Linq.Table<SF_DOC> SF_DOCs
		{
			get
			{
				return this.GetTable<SF_DOC>();
			}
		}
		
		public System.Data.Linq.Table<SF_AUDITTRAIL> SF_AUDITTRAILs
		{
			get
			{
				return this.GetTable<SF_AUDITTRAIL>();
			}
		}
		
		public System.Data.Linq.Table<SF_ENTRy> SF_ENTRies
		{
			get
			{
				return this.GetTable<SF_ENTRy>();
			}
		}
		
		public System.Data.Linq.Table<SF_VENDOR> SF_VENDORs
		{
			get
			{
				return this.GetTable<SF_VENDOR>();
			}
		}
		
		public System.Data.Linq.Table<SF_XACT> SF_XACTs
		{
			get
			{
				return this.GetTable<SF_XACT>();
			}
		}
		
		public System.Data.Linq.Table<SFV_AttachedFile> SFV_AttachedFiles
		{
			get
			{
				return this.GetTable<SFV_AttachedFile>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPTYPE> EQUIPTYPEs
		{
			get
			{
				return this.GetTable<EQUIPTYPE>();
			}
		}
		
		public System.Data.Linq.Table<LAUNCHMETHOD> LAUNCHMETHODs
		{
			get
			{
				return this.GetTable<LAUNCHMETHOD>();
			}
		}
		
		public System.Data.Linq.Table<QBO_ITEMNAME> QBO_ITEMNAMEs
		{
			get
			{
				return this.GetTable<QBO_ITEMNAME>();
			}
		}
		
		public System.Data.Linq.Table<FA_ITEM> FA_ITEMs
		{
			get
			{
				return this.GetTable<FA_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<FA_PMTTERM> FA_PMTTERMs
		{
			get
			{
				return this.GetTable<FA_PMTTERM>();
			}
		}
		
		public System.Data.Linq.Table<RATE> RATEs
		{
			get
			{
				return this.GetTable<RATE>();
			}
		}
		
		public System.Data.Linq.Table<TIREWARD> TIREWARDs
		{
			get
			{
				return this.GetTable<TIREWARD>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sf_AccountsFlatList", IsComposable=true)]
		public IQueryable<sf_AccountsFlatListResult> sf_AccountsFlatList()
		{
			return this.CreateMethodCallQuery<sf_AccountsFlatListResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TNPF_EligibleRewardMembers", IsComposable=true)]
		public IQueryable<TNPF_EligibleRewardMembersResult> TNPF_EligibleRewardMembers([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DAsOf", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dAsOf, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> bAsOf)
		{
			return this.CreateMethodCallQuery<TNPF_EligibleRewardMembersResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), dAsOf, bAsOf);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TNPF_MRewards2", IsComposable=true)]
		public IQueryable<TNPF_MRewards2Result> TNPF_MRewards2([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(256)")] string sUser, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> bIsDisplayName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DExpiryRef", DbType="DateTimeOffset")] System.Nullable<System.DateTimeOffset> dExpiryRef)
		{
			return this.CreateMethodCallQuery<TNPF_MRewards2Result>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sUser, bIsDisplayName, dExpiryRef);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_ACCOUNTS")]
	public partial class SF_ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sCode;
		
		private string _sSortCode;
		
		private string _sName;
		
		private int _iSF_Type;
		
		private System.Nullable<int> _iSF_ParentAcct;
		
		private int _iSubLedger;
		
		private string _sNotes;
		
		private EntitySet<SF_ENTRy> _SF_ENTRies;
		
		private EntityRef<SF_ACCTTYPE> _SF_ACCTTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsCodeChanging(string value);
    partial void OnsCodeChanged();
    partial void OnsSortCodeChanging(string value);
    partial void OnsSortCodeChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    partial void OniSF_TypeChanging(int value);
    partial void OniSF_TypeChanged();
    partial void OniSF_ParentAcctChanging(System.Nullable<int> value);
    partial void OniSF_ParentAcctChanged();
    partial void OniSubLedgerChanging(int value);
    partial void OniSubLedgerChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    #endregion
		
		public SF_ACCOUNT()
		{
			this._SF_ENTRies = new EntitySet<SF_ENTRy>(new Action<SF_ENTRy>(this.attach_SF_ENTRies), new Action<SF_ENTRy>(this.detach_SF_ENTRies));
			this._SF_ACCTTYPE = default(EntityRef<SF_ACCTTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCode", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string sCode
		{
			get
			{
				return this._sCode;
			}
			set
			{
				if ((this._sCode != value))
				{
					this.OnsCodeChanging(value);
					this.SendPropertyChanging();
					this._sCode = value;
					this.SendPropertyChanged("sCode");
					this.OnsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSortCode", DbType="NVarChar(40)")]
		public string sSortCode
		{
			get
			{
				return this._sSortCode;
			}
			set
			{
				if ((this._sSortCode != value))
				{
					this.OnsSortCodeChanging(value);
					this.SendPropertyChanging();
					this._sSortCode = value;
					this.SendPropertyChanged("sSortCode");
					this.OnsSortCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSF_Type", DbType="Int NOT NULL")]
		public int iSF_Type
		{
			get
			{
				return this._iSF_Type;
			}
			set
			{
				if ((this._iSF_Type != value))
				{
					if (this._SF_ACCTTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSF_TypeChanging(value);
					this.SendPropertyChanging();
					this._iSF_Type = value;
					this.SendPropertyChanged("iSF_Type");
					this.OniSF_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSF_ParentAcct", DbType="Int")]
		public System.Nullable<int> iSF_ParentAcct
		{
			get
			{
				return this._iSF_ParentAcct;
			}
			set
			{
				if ((this._iSF_ParentAcct != value))
				{
					this.OniSF_ParentAcctChanging(value);
					this.SendPropertyChanging();
					this._iSF_ParentAcct = value;
					this.SendPropertyChanged("iSF_ParentAcct");
					this.OniSF_ParentAcctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSubLedger", DbType="Int NOT NULL")]
		public int iSubLedger
		{
			get
			{
				return this._iSubLedger;
			}
			set
			{
				if ((this._iSubLedger != value))
				{
					this.OniSubLedgerChanging(value);
					this.SendPropertyChanging();
					this._iSubLedger = value;
					this.SendPropertyChanged("iSubLedger");
					this.OniSubLedgerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ACCOUNT_SF_ENTRy", Storage="_SF_ENTRies", ThisKey="ID", OtherKey="iAccountId")]
		public EntitySet<SF_ENTRy> SF_ENTRies
		{
			get
			{
				return this._SF_ENTRies;
			}
			set
			{
				this._SF_ENTRies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ACCTTYPE_SF_ACCOUNT", Storage="_SF_ACCTTYPE", ThisKey="iSF_Type", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_ACCTTYPE SF_ACCTTYPE
		{
			get
			{
				return this._SF_ACCTTYPE.Entity;
			}
			set
			{
				SF_ACCTTYPE previousValue = this._SF_ACCTTYPE.Entity;
				if (((previousValue != value) 
							|| (this._SF_ACCTTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_ACCTTYPE.Entity = null;
						previousValue.SF_ACCOUNTs.Remove(this);
					}
					this._SF_ACCTTYPE.Entity = value;
					if ((value != null))
					{
						value.SF_ACCOUNTs.Add(this);
						this._iSF_Type = value.ID;
					}
					else
					{
						this._iSF_Type = default(int);
					}
					this.SendPropertyChanged("SF_ACCTTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_ENTRies(SF_ENTRy entity)
		{
			this.SendPropertyChanging();
			entity.SF_ACCOUNT = this;
		}
		
		private void detach_SF_ENTRies(SF_ENTRy entity)
		{
			this.SendPropertyChanging();
			entity.SF_ACCOUNT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_ATTACHMENTCATEGS")]
	public partial class SF_ATTACHMENTCATEG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sAttachmentCateg;
		
		private EntitySet<SF_XACT_DOC> _SF_XACT_DOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsAttachmentCategChanging(string value);
    partial void OnsAttachmentCategChanged();
    #endregion
		
		public SF_ATTACHMENTCATEG()
		{
			this._SF_XACT_DOCs = new EntitySet<SF_XACT_DOC>(new Action<SF_XACT_DOC>(this.attach_SF_XACT_DOCs), new Action<SF_XACT_DOC>(this.detach_SF_XACT_DOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAttachmentCateg", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sAttachmentCateg
		{
			get
			{
				return this._sAttachmentCateg;
			}
			set
			{
				if ((this._sAttachmentCateg != value))
				{
					this.OnsAttachmentCategChanging(value);
					this.SendPropertyChanging();
					this._sAttachmentCateg = value;
					this.SendPropertyChanged("sAttachmentCateg");
					this.OnsAttachmentCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ATTACHMENTCATEG_SF_XACT_DOC", Storage="_SF_XACT_DOCs", ThisKey="ID", OtherKey="iAttachmentCateg")]
		public EntitySet<SF_XACT_DOC> SF_XACT_DOCs
		{
			get
			{
				return this._SF_XACT_DOCs;
			}
			set
			{
				this._SF_XACT_DOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_XACT_DOCs(SF_XACT_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_ATTACHMENTCATEG = this;
		}
		
		private void detach_SF_XACT_DOCs(SF_XACT_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_ATTACHMENTCATEG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_XACTTYPES")]
	public partial class SF_XACTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sTransactionType;
		
		private EntitySet<SF_XACT> _SF_XACTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsTransactionTypeChanging(string value);
    partial void OnsTransactionTypeChanged();
    #endregion
		
		public SF_XACTTYPE()
		{
			this._SF_XACTs = new EntitySet<SF_XACT>(new Action<SF_XACT>(this.attach_SF_XACTs), new Action<SF_XACT>(this.detach_SF_XACTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTransactionType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sTransactionType
		{
			get
			{
				return this._sTransactionType;
			}
			set
			{
				if ((this._sTransactionType != value))
				{
					this.OnsTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._sTransactionType = value;
					this.SendPropertyChanged("sTransactionType");
					this.OnsTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_XACTTYPE_SF_XACT", Storage="_SF_XACTs", ThisKey="ID", OtherKey="iType")]
		public EntitySet<SF_XACT> SF_XACTs
		{
			get
			{
				return this._SF_XACTs;
			}
			set
			{
				this._SF_XACTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_XACTs(SF_XACT entity)
		{
			this.SendPropertyChanging();
			entity.SF_XACTTYPE = this;
		}
		
		private void detach_SF_XACTs(SF_XACT entity)
		{
			this.SendPropertyChanging();
			entity.SF_XACTTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_XACT_DOCS")]
	public partial class SF_XACT_DOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iXactId;
		
		private int _iDocsId;
		
		private int _iAttachmentCateg;
		
		private EntityRef<SF_ATTACHMENTCATEG> _SF_ATTACHMENTCATEG;
		
		private EntityRef<SF_DOC> _SF_DOC;
		
		private EntityRef<SF_XACT> _SF_XACT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniXactIdChanging(int value);
    partial void OniXactIdChanged();
    partial void OniDocsIdChanging(int value);
    partial void OniDocsIdChanged();
    partial void OniAttachmentCategChanging(int value);
    partial void OniAttachmentCategChanged();
    #endregion
		
		public SF_XACT_DOC()
		{
			this._SF_ATTACHMENTCATEG = default(EntityRef<SF_ATTACHMENTCATEG>);
			this._SF_DOC = default(EntityRef<SF_DOC>);
			this._SF_XACT = default(EntityRef<SF_XACT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iXactId", DbType="Int NOT NULL")]
		public int iXactId
		{
			get
			{
				return this._iXactId;
			}
			set
			{
				if ((this._iXactId != value))
				{
					if (this._SF_XACT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniXactIdChanging(value);
					this.SendPropertyChanging();
					this._iXactId = value;
					this.SendPropertyChanged("iXactId");
					this.OniXactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDocsId", DbType="Int NOT NULL")]
		public int iDocsId
		{
			get
			{
				return this._iDocsId;
			}
			set
			{
				if ((this._iDocsId != value))
				{
					if (this._SF_DOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniDocsIdChanging(value);
					this.SendPropertyChanging();
					this._iDocsId = value;
					this.SendPropertyChanged("iDocsId");
					this.OniDocsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAttachmentCateg", DbType="Int NOT NULL")]
		public int iAttachmentCateg
		{
			get
			{
				return this._iAttachmentCateg;
			}
			set
			{
				if ((this._iAttachmentCateg != value))
				{
					if (this._SF_ATTACHMENTCATEG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniAttachmentCategChanging(value);
					this.SendPropertyChanging();
					this._iAttachmentCateg = value;
					this.SendPropertyChanged("iAttachmentCateg");
					this.OniAttachmentCategChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ATTACHMENTCATEG_SF_XACT_DOC", Storage="_SF_ATTACHMENTCATEG", ThisKey="iAttachmentCateg", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_ATTACHMENTCATEG SF_ATTACHMENTCATEG
		{
			get
			{
				return this._SF_ATTACHMENTCATEG.Entity;
			}
			set
			{
				SF_ATTACHMENTCATEG previousValue = this._SF_ATTACHMENTCATEG.Entity;
				if (((previousValue != value) 
							|| (this._SF_ATTACHMENTCATEG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_ATTACHMENTCATEG.Entity = null;
						previousValue.SF_XACT_DOCs.Remove(this);
					}
					this._SF_ATTACHMENTCATEG.Entity = value;
					if ((value != null))
					{
						value.SF_XACT_DOCs.Add(this);
						this._iAttachmentCateg = value.ID;
					}
					else
					{
						this._iAttachmentCateg = default(int);
					}
					this.SendPropertyChanged("SF_ATTACHMENTCATEG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_DOC_SF_XACT_DOC", Storage="_SF_DOC", ThisKey="iDocsId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_DOC SF_DOC
		{
			get
			{
				return this._SF_DOC.Entity;
			}
			set
			{
				SF_DOC previousValue = this._SF_DOC.Entity;
				if (((previousValue != value) 
							|| (this._SF_DOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_DOC.Entity = null;
						previousValue.SF_XACT_DOCs.Remove(this);
					}
					this._SF_DOC.Entity = value;
					if ((value != null))
					{
						value.SF_XACT_DOCs.Add(this);
						this._iDocsId = value.ID;
					}
					else
					{
						this._iDocsId = default(int);
					}
					this.SendPropertyChanged("SF_DOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_XACT_SF_XACT_DOC", Storage="_SF_XACT", ThisKey="iXactId", OtherKey="ID", IsForeignKey=true)]
		public SF_XACT SF_XACT
		{
			get
			{
				return this._SF_XACT.Entity;
			}
			set
			{
				SF_XACT previousValue = this._SF_XACT.Entity;
				if (((previousValue != value) 
							|| (this._SF_XACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_XACT.Entity = null;
						previousValue.SF_XACT_DOCs.Remove(this);
					}
					this._SF_XACT.Entity = value;
					if ((value != null))
					{
						value.SF_XACT_DOCs.Add(this);
						this._iXactId = value.ID;
					}
					else
					{
						this._iXactId = default(int);
					}
					this.SendPropertyChanged("SF_XACT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_ACCTTYPES")]
	public partial class SF_ACCTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sAccountType;
		
		private EntitySet<SF_ACCOUNT> _SF_ACCOUNTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsAccountTypeChanging(string value);
    partial void OnsAccountTypeChanged();
    #endregion
		
		public SF_ACCTTYPE()
		{
			this._SF_ACCOUNTs = new EntitySet<SF_ACCOUNT>(new Action<SF_ACCOUNT>(this.attach_SF_ACCOUNTs), new Action<SF_ACCOUNT>(this.detach_SF_ACCOUNTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAccountType", DbType="NVarChar(25)")]
		public string sAccountType
		{
			get
			{
				return this._sAccountType;
			}
			set
			{
				if ((this._sAccountType != value))
				{
					this.OnsAccountTypeChanging(value);
					this.SendPropertyChanging();
					this._sAccountType = value;
					this.SendPropertyChanged("sAccountType");
					this.OnsAccountTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ACCTTYPE_SF_ACCOUNT", Storage="_SF_ACCOUNTs", ThisKey="ID", OtherKey="iSF_Type")]
		public EntitySet<SF_ACCOUNT> SF_ACCOUNTs
		{
			get
			{
				return this._SF_ACCOUNTs;
			}
			set
			{
				this._SF_ACCOUNTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_ACCOUNTs(SF_ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.SF_ACCTTYPE = this;
		}
		
		private void detach_SF_ACCOUNTs(SF_ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.SF_ACCTTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_PAYMENTMETHODS")]
	public partial class SF_PAYMENTMETHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sPaymentMethod;
		
		private EntitySet<SF_ENTRy> _SF_ENTRies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsPaymentMethodChanging(string value);
    partial void OnsPaymentMethodChanged();
    #endregion
		
		public SF_PAYMENTMETHOD()
		{
			this._SF_ENTRies = new EntitySet<SF_ENTRy>(new Action<SF_ENTRy>(this.attach_SF_ENTRies), new Action<SF_ENTRy>(this.detach_SF_ENTRies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPaymentMethod", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sPaymentMethod
		{
			get
			{
				return this._sPaymentMethod;
			}
			set
			{
				if ((this._sPaymentMethod != value))
				{
					this.OnsPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._sPaymentMethod = value;
					this.SendPropertyChanged("sPaymentMethod");
					this.OnsPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_PAYMENTMETHOD_SF_ENTRy", Storage="_SF_ENTRies", ThisKey="ID", OtherKey="iPaymentMethod")]
		public EntitySet<SF_ENTRy> SF_ENTRies
		{
			get
			{
				return this._SF_ENTRies;
			}
			set
			{
				this._SF_ENTRies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_ENTRies(SF_ENTRy entity)
		{
			this.SendPropertyChanging();
			entity.SF_PAYMENTMETHOD = this;
		}
		
		private void detach_SF_ENTRies(SF_ENTRy entity)
		{
			this.SendPropertyChanging();
			entity.SF_PAYMENTMETHOD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_ALLOWEDATTACHTYPES")]
	public partial class SF_ALLOWEDATTACHTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sAllowedFileType;
		
		private int _iMinBytes;
		
		private int _iMaxBytes;
		
		private EntitySet<SF_DOC> _SF_DOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsAllowedFileTypeChanging(string value);
    partial void OnsAllowedFileTypeChanged();
    partial void OniMinBytesChanging(int value);
    partial void OniMinBytesChanged();
    partial void OniMaxBytesChanging(int value);
    partial void OniMaxBytesChanged();
    #endregion
		
		public SF_ALLOWEDATTACHTYPE()
		{
			this._SF_DOCs = new EntitySet<SF_DOC>(new Action<SF_DOC>(this.attach_SF_DOCs), new Action<SF_DOC>(this.detach_SF_DOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAllowedFileType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string sAllowedFileType
		{
			get
			{
				return this._sAllowedFileType;
			}
			set
			{
				if ((this._sAllowedFileType != value))
				{
					this.OnsAllowedFileTypeChanging(value);
					this.SendPropertyChanging();
					this._sAllowedFileType = value;
					this.SendPropertyChanged("sAllowedFileType");
					this.OnsAllowedFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMinBytes", DbType="Int NOT NULL")]
		public int iMinBytes
		{
			get
			{
				return this._iMinBytes;
			}
			set
			{
				if ((this._iMinBytes != value))
				{
					this.OniMinBytesChanging(value);
					this.SendPropertyChanging();
					this._iMinBytes = value;
					this.SendPropertyChanged("iMinBytes");
					this.OniMinBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMaxBytes", DbType="Int NOT NULL")]
		public int iMaxBytes
		{
			get
			{
				return this._iMaxBytes;
			}
			set
			{
				if ((this._iMaxBytes != value))
				{
					this.OniMaxBytesChanging(value);
					this.SendPropertyChanging();
					this._iMaxBytes = value;
					this.SendPropertyChanged("iMaxBytes");
					this.OniMaxBytesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ALLOWEDATTACHTYPE_SF_DOC", Storage="_SF_DOCs", ThisKey="ID", OtherKey="iFileType")]
		public EntitySet<SF_DOC> SF_DOCs
		{
			get
			{
				return this._SF_DOCs;
			}
			set
			{
				this._SF_DOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_DOCs(SF_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_ALLOWEDATTACHTYPE = this;
		}
		
		private void detach_SF_DOCs(SF_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_ALLOWEDATTACHTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_DOCS")]
	public partial class SF_DOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Data.Linq.Binary _blobDoc;
		
		private System.DateTimeOffset _Dinserted;
		
		private System.DateTimeOffset _DDateOfDoc;
		
		private string _sPrefix;
		
		private string _sName;
		
		private int _iFileType;
		
		private EntitySet<SF_XACT_DOC> _SF_XACT_DOCs;
		
		private EntityRef<SF_ALLOWEDATTACHTYPE> _SF_ALLOWEDATTACHTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnblobDocChanging(System.Data.Linq.Binary value);
    partial void OnblobDocChanged();
    partial void OnDinsertedChanging(System.DateTimeOffset value);
    partial void OnDinsertedChanged();
    partial void OnDDateOfDocChanging(System.DateTimeOffset value);
    partial void OnDDateOfDocChanged();
    partial void OnsPrefixChanging(string value);
    partial void OnsPrefixChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    partial void OniFileTypeChanging(int value);
    partial void OniFileTypeChanged();
    #endregion
		
		public SF_DOC()
		{
			this._SF_XACT_DOCs = new EntitySet<SF_XACT_DOC>(new Action<SF_XACT_DOC>(this.attach_SF_XACT_DOCs), new Action<SF_XACT_DOC>(this.detach_SF_XACT_DOCs));
			this._SF_ALLOWEDATTACHTYPE = default(EntityRef<SF_ALLOWEDATTACHTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blobDoc", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary blobDoc
		{
			get
			{
				return this._blobDoc;
			}
			set
			{
				if ((this._blobDoc != value))
				{
					this.OnblobDocChanging(value);
					this.SendPropertyChanging();
					this._blobDoc = value;
					this.SendPropertyChanged("blobDoc");
					this.OnblobDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dinserted", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Dinserted
		{
			get
			{
				return this._Dinserted;
			}
			set
			{
				if ((this._Dinserted != value))
				{
					this.OnDinsertedChanging(value);
					this.SendPropertyChanging();
					this._Dinserted = value;
					this.SendPropertyChanged("Dinserted");
					this.OnDinsertedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDateOfDoc", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DDateOfDoc
		{
			get
			{
				return this._DDateOfDoc;
			}
			set
			{
				if ((this._DDateOfDoc != value))
				{
					this.OnDDateOfDocChanging(value);
					this.SendPropertyChanging();
					this._DDateOfDoc = value;
					this.SendPropertyChanged("DDateOfDoc");
					this.OnDDateOfDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPrefix", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sPrefix
		{
			get
			{
				return this._sPrefix;
			}
			set
			{
				if ((this._sPrefix != value))
				{
					this.OnsPrefixChanging(value);
					this.SendPropertyChanging();
					this._sPrefix = value;
					this.SendPropertyChanged("sPrefix");
					this.OnsPrefixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFileType", DbType="Int NOT NULL")]
		public int iFileType
		{
			get
			{
				return this._iFileType;
			}
			set
			{
				if ((this._iFileType != value))
				{
					if (this._SF_ALLOWEDATTACHTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniFileTypeChanging(value);
					this.SendPropertyChanging();
					this._iFileType = value;
					this.SendPropertyChanged("iFileType");
					this.OniFileTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_DOC_SF_XACT_DOC", Storage="_SF_XACT_DOCs", ThisKey="ID", OtherKey="iDocsId")]
		public EntitySet<SF_XACT_DOC> SF_XACT_DOCs
		{
			get
			{
				return this._SF_XACT_DOCs;
			}
			set
			{
				this._SF_XACT_DOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ALLOWEDATTACHTYPE_SF_DOC", Storage="_SF_ALLOWEDATTACHTYPE", ThisKey="iFileType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_ALLOWEDATTACHTYPE SF_ALLOWEDATTACHTYPE
		{
			get
			{
				return this._SF_ALLOWEDATTACHTYPE.Entity;
			}
			set
			{
				SF_ALLOWEDATTACHTYPE previousValue = this._SF_ALLOWEDATTACHTYPE.Entity;
				if (((previousValue != value) 
							|| (this._SF_ALLOWEDATTACHTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_ALLOWEDATTACHTYPE.Entity = null;
						previousValue.SF_DOCs.Remove(this);
					}
					this._SF_ALLOWEDATTACHTYPE.Entity = value;
					if ((value != null))
					{
						value.SF_DOCs.Add(this);
						this._iFileType = value.ID;
					}
					else
					{
						this._iFileType = default(int);
					}
					this.SendPropertyChanged("SF_ALLOWEDATTACHTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_XACT_DOCs(SF_XACT_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_DOC = this;
		}
		
		private void detach_SF_XACT_DOCs(SF_XACT_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_DOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_AUDITTRAIL")]
	public partial class SF_AUDITTRAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTimeOffset _DTimeStamp;
		
		private int _iRecordEnteredBy;
		
		private char _cAction;
		
		private string _Jold;
		
		private string _Jnew;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDTimeStampChanging(System.DateTimeOffset value);
    partial void OnDTimeStampChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OncActionChanging(char value);
    partial void OncActionChanged();
    partial void OnJoldChanging(string value);
    partial void OnJoldChanged();
    partial void OnJnewChanging(string value);
    partial void OnJnewChanged();
    #endregion
		
		public SF_AUDITTRAIL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTimeStamp", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTimeStamp
		{
			get
			{
				return this._DTimeStamp;
			}
			set
			{
				if ((this._DTimeStamp != value))
				{
					this.OnDTimeStampChanging(value);
					this.SendPropertyChanging();
					this._DTimeStamp = value;
					this.SendPropertyChanged("DTimeStamp");
					this.OnDTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cAction", DbType="NChar(1) NOT NULL")]
		public char cAction
		{
			get
			{
				return this._cAction;
			}
			set
			{
				if ((this._cAction != value))
				{
					this.OncActionChanging(value);
					this.SendPropertyChanging();
					this._cAction = value;
					this.SendPropertyChanged("cAction");
					this.OncActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jold", DbType="NVarChar(MAX)")]
		public string Jold
		{
			get
			{
				return this._Jold;
			}
			set
			{
				if ((this._Jold != value))
				{
					this.OnJoldChanging(value);
					this.SendPropertyChanging();
					this._Jold = value;
					this.SendPropertyChanged("Jold");
					this.OnJoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jnew", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Jnew
		{
			get
			{
				return this._Jnew;
			}
			set
			{
				if ((this._Jnew != value))
				{
					this.OnJnewChanging(value);
					this.SendPropertyChanging();
					this._Jnew = value;
					this.SendPropertyChanged("Jnew");
					this.OnJnewChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_ENTRIES")]
	public partial class SF_ENTRy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iXactId;
		
		private int _iAccountId;
		
		private decimal _mAmount;
		
		private string _sDescription;
		
		private int _iPaymentMethod;
		
		private EntityRef<SF_ACCOUNT> _SF_ACCOUNT;
		
		private EntityRef<SF_PAYMENTMETHOD> _SF_PAYMENTMETHOD;
		
		private EntityRef<SF_XACT> _SF_XACT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniXactIdChanging(int value);
    partial void OniXactIdChanged();
    partial void OniAccountIdChanging(int value);
    partial void OniAccountIdChanged();
    partial void OnmAmountChanging(decimal value);
    partial void OnmAmountChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OniPaymentMethodChanging(int value);
    partial void OniPaymentMethodChanged();
    #endregion
		
		public SF_ENTRy()
		{
			this._SF_ACCOUNT = default(EntityRef<SF_ACCOUNT>);
			this._SF_PAYMENTMETHOD = default(EntityRef<SF_PAYMENTMETHOD>);
			this._SF_XACT = default(EntityRef<SF_XACT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iXactId", DbType="Int NOT NULL")]
		public int iXactId
		{
			get
			{
				return this._iXactId;
			}
			set
			{
				if ((this._iXactId != value))
				{
					if (this._SF_XACT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniXactIdChanging(value);
					this.SendPropertyChanging();
					this._iXactId = value;
					this.SendPropertyChanged("iXactId");
					this.OniXactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAccountId", DbType="Int NOT NULL")]
		public int iAccountId
		{
			get
			{
				return this._iAccountId;
			}
			set
			{
				if ((this._iAccountId != value))
				{
					if (this._SF_ACCOUNT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniAccountIdChanging(value);
					this.SendPropertyChanging();
					this._iAccountId = value;
					this.SendPropertyChanged("iAccountId");
					this.OniAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAmount", DbType="Money NOT NULL")]
		public decimal mAmount
		{
			get
			{
				return this._mAmount;
			}
			set
			{
				if ((this._mAmount != value))
				{
					this.OnmAmountChanging(value);
					this.SendPropertyChanging();
					this._mAmount = value;
					this.SendPropertyChanged("mAmount");
					this.OnmAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPaymentMethod", DbType="Int NOT NULL")]
		public int iPaymentMethod
		{
			get
			{
				return this._iPaymentMethod;
			}
			set
			{
				if ((this._iPaymentMethod != value))
				{
					if (this._SF_PAYMENTMETHOD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPaymentMethodChanging(value);
					this.SendPropertyChanging();
					this._iPaymentMethod = value;
					this.SendPropertyChanged("iPaymentMethod");
					this.OniPaymentMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_ACCOUNT_SF_ENTRy", Storage="_SF_ACCOUNT", ThisKey="iAccountId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_ACCOUNT SF_ACCOUNT
		{
			get
			{
				return this._SF_ACCOUNT.Entity;
			}
			set
			{
				SF_ACCOUNT previousValue = this._SF_ACCOUNT.Entity;
				if (((previousValue != value) 
							|| (this._SF_ACCOUNT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_ACCOUNT.Entity = null;
						previousValue.SF_ENTRies.Remove(this);
					}
					this._SF_ACCOUNT.Entity = value;
					if ((value != null))
					{
						value.SF_ENTRies.Add(this);
						this._iAccountId = value.ID;
					}
					else
					{
						this._iAccountId = default(int);
					}
					this.SendPropertyChanged("SF_ACCOUNT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_PAYMENTMETHOD_SF_ENTRy", Storage="_SF_PAYMENTMETHOD", ThisKey="iPaymentMethod", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_PAYMENTMETHOD SF_PAYMENTMETHOD
		{
			get
			{
				return this._SF_PAYMENTMETHOD.Entity;
			}
			set
			{
				SF_PAYMENTMETHOD previousValue = this._SF_PAYMENTMETHOD.Entity;
				if (((previousValue != value) 
							|| (this._SF_PAYMENTMETHOD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_PAYMENTMETHOD.Entity = null;
						previousValue.SF_ENTRies.Remove(this);
					}
					this._SF_PAYMENTMETHOD.Entity = value;
					if ((value != null))
					{
						value.SF_ENTRies.Add(this);
						this._iPaymentMethod = value.ID;
					}
					else
					{
						this._iPaymentMethod = default(int);
					}
					this.SendPropertyChanged("SF_PAYMENTMETHOD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_XACT_SF_ENTRy", Storage="_SF_XACT", ThisKey="iXactId", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_XACT SF_XACT
		{
			get
			{
				return this._SF_XACT.Entity;
			}
			set
			{
				SF_XACT previousValue = this._SF_XACT.Entity;
				if (((previousValue != value) 
							|| (this._SF_XACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_XACT.Entity = null;
						previousValue.SF_ENTRies.Remove(this);
					}
					this._SF_XACT.Entity = value;
					if ((value != null))
					{
						value.SF_ENTRies.Add(this);
						this._iXactId = value.ID;
					}
					else
					{
						this._iXactId = default(int);
					}
					this.SendPropertyChanged("SF_XACT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_VENDORS")]
	public partial class SF_VENDOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sVendorName;
		
		private string _sNotes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsVendorNameChanging(string value);
    partial void OnsVendorNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    #endregion
		
		public SF_VENDOR()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sVendorName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string sVendorName
		{
			get
			{
				return this._sVendorName;
			}
			set
			{
				if ((this._sVendorName != value))
				{
					this.OnsVendorNameChanging(value);
					this.SendPropertyChanging();
					this._sVendorName = value;
					this.SendPropertyChanged("sVendorName");
					this.OnsVendorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SF_XACTS")]
	public partial class SF_XACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTimeOffset _D;
		
		private int _iType;
		
		private string _sMemo;
		
		private char _cStatus;
		
		private int _iVendor;
		
		private int _iMember;
		
		private System.Nullable<char> _cStatusPrev;
		
		private System.Nullable<int> _iReplaces;
		
		private System.Nullable<int> _iReplacedBy;
		
		private EntitySet<SF_XACT_DOC> _SF_XACT_DOCs;
		
		private EntitySet<SF_ENTRy> _SF_ENTRies;
		
		private EntityRef<SF_XACTTYPE> _SF_XACTTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDChanging(System.DateTimeOffset value);
    partial void OnDChanged();
    partial void OniTypeChanging(int value);
    partial void OniTypeChanged();
    partial void OnsMemoChanging(string value);
    partial void OnsMemoChanged();
    partial void OncStatusChanging(char value);
    partial void OncStatusChanged();
    partial void OniVendorChanging(int value);
    partial void OniVendorChanged();
    partial void OniMemberChanging(int value);
    partial void OniMemberChanged();
    partial void OncStatusPrevChanging(System.Nullable<char> value);
    partial void OncStatusPrevChanged();
    partial void OniReplacesChanging(System.Nullable<int> value);
    partial void OniReplacesChanged();
    partial void OniReplacedByChanging(System.Nullable<int> value);
    partial void OniReplacedByChanged();
    #endregion
		
		public SF_XACT()
		{
			this._SF_XACT_DOCs = new EntitySet<SF_XACT_DOC>(new Action<SF_XACT_DOC>(this.attach_SF_XACT_DOCs), new Action<SF_XACT_DOC>(this.detach_SF_XACT_DOCs));
			this._SF_ENTRies = new EntitySet<SF_ENTRy>(new Action<SF_ENTRy>(this.attach_SF_ENTRies), new Action<SF_ENTRy>(this.detach_SF_ENTRies));
			this._SF_XACTTYPE = default(EntityRef<SF_XACTTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset D
		{
			get
			{
				return this._D;
			}
			set
			{
				if ((this._D != value))
				{
					this.OnDChanging(value);
					this.SendPropertyChanging();
					this._D = value;
					this.SendPropertyChanged("D");
					this.OnDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iType", DbType="Int NOT NULL")]
		public int iType
		{
			get
			{
				return this._iType;
			}
			set
			{
				if ((this._iType != value))
				{
					if (this._SF_XACTTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniTypeChanging(value);
					this.SendPropertyChanging();
					this._iType = value;
					this.SendPropertyChanged("iType");
					this.OniTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMemo", DbType="NVarChar(MAX)")]
		public string sMemo
		{
			get
			{
				return this._sMemo;
			}
			set
			{
				if ((this._sMemo != value))
				{
					this.OnsMemoChanging(value);
					this.SendPropertyChanging();
					this._sMemo = value;
					this.SendPropertyChanged("sMemo");
					this.OnsMemoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cStatus", DbType="NChar(1) NOT NULL")]
		public char cStatus
		{
			get
			{
				return this._cStatus;
			}
			set
			{
				if ((this._cStatus != value))
				{
					this.OncStatusChanging(value);
					this.SendPropertyChanging();
					this._cStatus = value;
					this.SendPropertyChanged("cStatus");
					this.OncStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iVendor", DbType="Int NOT NULL")]
		public int iVendor
		{
			get
			{
				return this._iVendor;
			}
			set
			{
				if ((this._iVendor != value))
				{
					this.OniVendorChanging(value);
					this.SendPropertyChanging();
					this._iVendor = value;
					this.SendPropertyChanged("iVendor");
					this.OniVendorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMember", DbType="Int NOT NULL")]
		public int iMember
		{
			get
			{
				return this._iMember;
			}
			set
			{
				if ((this._iMember != value))
				{
					this.OniMemberChanging(value);
					this.SendPropertyChanging();
					this._iMember = value;
					this.SendPropertyChanged("iMember");
					this.OniMemberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cStatusPrev", DbType="NChar(1)")]
		public System.Nullable<char> cStatusPrev
		{
			get
			{
				return this._cStatusPrev;
			}
			set
			{
				if ((this._cStatusPrev != value))
				{
					this.OncStatusPrevChanging(value);
					this.SendPropertyChanging();
					this._cStatusPrev = value;
					this.SendPropertyChanged("cStatusPrev");
					this.OncStatusPrevChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iReplaces", DbType="Int")]
		public System.Nullable<int> iReplaces
		{
			get
			{
				return this._iReplaces;
			}
			set
			{
				if ((this._iReplaces != value))
				{
					this.OniReplacesChanging(value);
					this.SendPropertyChanging();
					this._iReplaces = value;
					this.SendPropertyChanged("iReplaces");
					this.OniReplacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iReplacedBy", DbType="Int")]
		public System.Nullable<int> iReplacedBy
		{
			get
			{
				return this._iReplacedBy;
			}
			set
			{
				if ((this._iReplacedBy != value))
				{
					this.OniReplacedByChanging(value);
					this.SendPropertyChanging();
					this._iReplacedBy = value;
					this.SendPropertyChanged("iReplacedBy");
					this.OniReplacedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_XACT_SF_XACT_DOC", Storage="_SF_XACT_DOCs", ThisKey="ID", OtherKey="iXactId")]
		public EntitySet<SF_XACT_DOC> SF_XACT_DOCs
		{
			get
			{
				return this._SF_XACT_DOCs;
			}
			set
			{
				this._SF_XACT_DOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_XACT_SF_ENTRy", Storage="_SF_ENTRies", ThisKey="ID", OtherKey="iXactId")]
		public EntitySet<SF_ENTRy> SF_ENTRies
		{
			get
			{
				return this._SF_ENTRies;
			}
			set
			{
				this._SF_ENTRies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SF_XACTTYPE_SF_XACT", Storage="_SF_XACTTYPE", ThisKey="iType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SF_XACTTYPE SF_XACTTYPE
		{
			get
			{
				return this._SF_XACTTYPE.Entity;
			}
			set
			{
				SF_XACTTYPE previousValue = this._SF_XACTTYPE.Entity;
				if (((previousValue != value) 
							|| (this._SF_XACTTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SF_XACTTYPE.Entity = null;
						previousValue.SF_XACTs.Remove(this);
					}
					this._SF_XACTTYPE.Entity = value;
					if ((value != null))
					{
						value.SF_XACTs.Add(this);
						this._iType = value.ID;
					}
					else
					{
						this._iType = default(int);
					}
					this.SendPropertyChanged("SF_XACTTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SF_XACT_DOCs(SF_XACT_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_XACT = this;
		}
		
		private void detach_SF_XACT_DOCs(SF_XACT_DOC entity)
		{
			this.SendPropertyChanging();
			entity.SF_XACT = null;
		}
		
		private void attach_SF_ENTRies(SF_ENTRy entity)
		{
			this.SendPropertyChanging();
			entity.SF_XACT = this;
		}
		
		private void detach_SF_ENTRies(SF_ENTRy entity)
		{
			this.SendPropertyChanging();
			entity.SF_XACT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SFV_AttachedFiles")]
	public partial class SFV_AttachedFile
	{
		
		private int _ID;
		
		private System.DateTimeOffset _DDateOfDoc;
		
		private string _sPrefix;
		
		private string _sName;
		
		private string _sAttachmentCateg;
		
		public SFV_AttachedFile()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DDateOfDoc", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DDateOfDoc
		{
			get
			{
				return this._DDateOfDoc;
			}
			set
			{
				if ((this._DDateOfDoc != value))
				{
					this._DDateOfDoc = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sPrefix", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sPrefix
		{
			get
			{
				return this._sPrefix;
			}
			set
			{
				if ((this._sPrefix != value))
				{
					this._sPrefix = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAttachmentCateg", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sAttachmentCateg
		{
			get
			{
				return this._sAttachmentCateg;
			}
			set
			{
				if ((this._sAttachmentCateg != value))
				{
					this._sAttachmentCateg = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPTYPES")]
	public partial class EQUIPTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sEquipmentType;
		
		private EntitySet<RATE> _RATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsEquipmentTypeChanging(string value);
    partial void OnsEquipmentTypeChanged();
    #endregion
		
		public EQUIPTYPE()
		{
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sEquipmentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sEquipmentType
		{
			get
			{
				return this._sEquipmentType;
			}
			set
			{
				if ((this._sEquipmentType != value))
				{
					this.OnsEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._sEquipmentType = value;
					this.SendPropertyChanged("sEquipmentType");
					this.OnsEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_RATE", Storage="_RATEs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAUNCHMETHODS")]
	public partial class LAUNCHMETHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sLaunchMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsLaunchMethodChanging(string value);
    partial void OnsLaunchMethodChanged();
    #endregion
		
		public LAUNCHMETHOD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLaunchMethod", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sLaunchMethod
		{
			get
			{
				return this._sLaunchMethod;
			}
			set
			{
				if ((this._sLaunchMethod != value))
				{
					this.OnsLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._sLaunchMethod = value;
					this.SendPropertyChanged("sLaunchMethod");
					this.OnsLaunchMethodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QBO_ITEMNAMES")]
	public partial class QBO_ITEMNAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sQBO_ItemName;
		
		private EntitySet<RATE> _RATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsQBO_ItemNameChanging(string value);
    partial void OnsQBO_ItemNameChanged();
    #endregion
		
		public QBO_ITEMNAME()
		{
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sQBO_ItemName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sQBO_ItemName
		{
			get
			{
				return this._sQBO_ItemName;
			}
			set
			{
				if ((this._sQBO_ItemName != value))
				{
					this.OnsQBO_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._sQBO_ItemName = value;
					this.SendPropertyChanged("sQBO_ItemName");
					this.OnsQBO_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QBO_ITEMNAME_RATE", Storage="_RATEs", ThisKey="ID", OtherKey="iQBO_ItemName")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.QBO_ITEMNAME = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.QBO_ITEMNAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FA_ITEMS")]
	public partial class FA_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sFA_ItemCode;
		
		private string _sItemDescription;
		
		private EntitySet<RATE> _RATEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsFA_ItemCodeChanging(string value);
    partial void OnsFA_ItemCodeChanged();
    partial void OnsItemDescriptionChanging(string value);
    partial void OnsItemDescriptionChanged();
    #endregion
		
		public FA_ITEM()
		{
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFA_ItemCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sFA_ItemCode
		{
			get
			{
				return this._sFA_ItemCode;
			}
			set
			{
				if ((this._sFA_ItemCode != value))
				{
					this.OnsFA_ItemCodeChanging(value);
					this.SendPropertyChanging();
					this._sFA_ItemCode = value;
					this.SendPropertyChanged("sFA_ItemCode");
					this.OnsFA_ItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sItemDescription", DbType="NVarChar(200)")]
		public string sItemDescription
		{
			get
			{
				return this._sItemDescription;
			}
			set
			{
				if ((this._sItemDescription != value))
				{
					this.OnsItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sItemDescription = value;
					this.SendPropertyChanged("sItemDescription");
					this.OnsItemDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FA_ITEM_RATE", Storage="_RATEs", ThisKey="ID", OtherKey="iFA_Item")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.FA_ITEM = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.FA_ITEM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FA_PMTTERMS")]
	public partial class FA_PMTTERM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPmtTermsCode;
		
		private string _sDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPmtTermsCodeChanging(int value);
    partial void OniPmtTermsCodeChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public FA_PMTTERM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPmtTermsCode", DbType="Int NOT NULL")]
		public int iPmtTermsCode
		{
			get
			{
				return this._iPmtTermsCode;
			}
			set
			{
				if ((this._iPmtTermsCode != value))
				{
					this.OniPmtTermsCodeChanging(value);
					this.SendPropertyChanging();
					this._iPmtTermsCode = value;
					this.SendPropertyChanged("iPmtTermsCode");
					this.OniPmtTermsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RATES")]
	public partial class RATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sShortName;
		
		private System.DateTimeOffset _Dfrom;
		
		private System.DateTimeOffset _DTo;
		
		private int _iEquipType;
		
		private int _iLaunchMethod;
		
		private string _sChargeCodes;
		
		private decimal _mSingleDpUse;
		
		private int _iNoChrg1stFt;
		
		private decimal _mAltDiffDpFt;
		
		private int _iNoChrg1stMin;
		
		private decimal _mDurationDpMin;
		
		private int _iDurCapMin;
		
		private string _sComment;
		
		private int _iQBO_ItemName;
		
		private int _iFA_Item;
		
		private int _iFA_PmtTerm;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
		private EntityRef<FA_ITEM> _FA_ITEM;
		
		private EntityRef<QBO_ITEMNAME> _QBO_ITEMNAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsShortNameChanging(string value);
    partial void OnsShortNameChanged();
    partial void OnDfromChanging(System.DateTimeOffset value);
    partial void OnDfromChanged();
    partial void OnDToChanging(System.DateTimeOffset value);
    partial void OnDToChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OnsChargeCodesChanging(string value);
    partial void OnsChargeCodesChanged();
    partial void OnmSingleDpUseChanging(decimal value);
    partial void OnmSingleDpUseChanged();
    partial void OniNoChrg1stFtChanging(int value);
    partial void OniNoChrg1stFtChanged();
    partial void OnmAltDiffDpFtChanging(decimal value);
    partial void OnmAltDiffDpFtChanged();
    partial void OniNoChrg1stMinChanging(int value);
    partial void OniNoChrg1stMinChanged();
    partial void OnmDurationDpMinChanging(decimal value);
    partial void OnmDurationDpMinChanged();
    partial void OniDurCapMinChanging(int value);
    partial void OniDurCapMinChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniQBO_ItemNameChanging(int value);
    partial void OniQBO_ItemNameChanged();
    partial void OniFA_ItemChanging(int value);
    partial void OniFA_ItemChanged();
    partial void OniFA_PmtTermChanging(int value);
    partial void OniFA_PmtTermChanged();
    #endregion
		
		public RATE()
		{
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			this._FA_ITEM = default(EntityRef<FA_ITEM>);
			this._QBO_ITEMNAME = default(EntityRef<QBO_ITEMNAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sShortName
		{
			get
			{
				return this._sShortName;
			}
			set
			{
				if ((this._sShortName != value))
				{
					this.OnsShortNameChanging(value);
					this.SendPropertyChanging();
					this._sShortName = value;
					this.SendPropertyChanged("sShortName");
					this.OnsShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dfrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Dfrom
		{
			get
			{
				return this._Dfrom;
			}
			set
			{
				if ((this._Dfrom != value))
				{
					this.OnDfromChanging(value);
					this.SendPropertyChanging();
					this._Dfrom = value;
					this.SendPropertyChanged("Dfrom");
					this.OnDfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this.OnDToChanging(value);
					this.SendPropertyChanging();
					this._DTo = value;
					this.SendPropertyChanged("DTo");
					this.OnDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCodes", DbType="VarChar(26) NOT NULL", CanBeNull=false)]
		public string sChargeCodes
		{
			get
			{
				return this._sChargeCodes;
			}
			set
			{
				if ((this._sChargeCodes != value))
				{
					this.OnsChargeCodesChanging(value);
					this.SendPropertyChanging();
					this._sChargeCodes = value;
					this.SendPropertyChanged("sChargeCodes");
					this.OnsChargeCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mSingleDpUse", DbType="Money NOT NULL")]
		public decimal mSingleDpUse
		{
			get
			{
				return this._mSingleDpUse;
			}
			set
			{
				if ((this._mSingleDpUse != value))
				{
					this.OnmSingleDpUseChanging(value);
					this.SendPropertyChanging();
					this._mSingleDpUse = value;
					this.SendPropertyChanged("mSingleDpUse");
					this.OnmSingleDpUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stFt", DbType="Int NOT NULL")]
		public int iNoChrg1stFt
		{
			get
			{
				return this._iNoChrg1stFt;
			}
			set
			{
				if ((this._iNoChrg1stFt != value))
				{
					this.OniNoChrg1stFtChanging(value);
					this.SendPropertyChanging();
					this._iNoChrg1stFt = value;
					this.SendPropertyChanged("iNoChrg1stFt");
					this.OniNoChrg1stFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAltDiffDpFt", DbType="Money NOT NULL")]
		public decimal mAltDiffDpFt
		{
			get
			{
				return this._mAltDiffDpFt;
			}
			set
			{
				if ((this._mAltDiffDpFt != value))
				{
					this.OnmAltDiffDpFtChanging(value);
					this.SendPropertyChanging();
					this._mAltDiffDpFt = value;
					this.SendPropertyChanged("mAltDiffDpFt");
					this.OnmAltDiffDpFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stMin", DbType="Int NOT NULL")]
		public int iNoChrg1stMin
		{
			get
			{
				return this._iNoChrg1stMin;
			}
			set
			{
				if ((this._iNoChrg1stMin != value))
				{
					this.OniNoChrg1stMinChanging(value);
					this.SendPropertyChanging();
					this._iNoChrg1stMin = value;
					this.SendPropertyChanged("iNoChrg1stMin");
					this.OniNoChrg1stMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mDurationDpMin", DbType="Money NOT NULL")]
		public decimal mDurationDpMin
		{
			get
			{
				return this._mDurationDpMin;
			}
			set
			{
				if ((this._mDurationDpMin != value))
				{
					this.OnmDurationDpMinChanging(value);
					this.SendPropertyChanging();
					this._mDurationDpMin = value;
					this.SendPropertyChanged("mDurationDpMin");
					this.OnmDurationDpMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDurCapMin", DbType="Int NOT NULL")]
		public int iDurCapMin
		{
			get
			{
				return this._iDurCapMin;
			}
			set
			{
				if ((this._iDurCapMin != value))
				{
					this.OniDurCapMinChanging(value);
					this.SendPropertyChanging();
					this._iDurCapMin = value;
					this.SendPropertyChanged("iDurCapMin");
					this.OniDurCapMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQBO_ItemName", DbType="Int NOT NULL")]
		public int iQBO_ItemName
		{
			get
			{
				return this._iQBO_ItemName;
			}
			set
			{
				if ((this._iQBO_ItemName != value))
				{
					if (this._QBO_ITEMNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniQBO_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._iQBO_ItemName = value;
					this.SendPropertyChanged("iQBO_ItemName");
					this.OniQBO_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_Item", DbType="Int NOT NULL")]
		public int iFA_Item
		{
			get
			{
				return this._iFA_Item;
			}
			set
			{
				if ((this._iFA_Item != value))
				{
					if (this._FA_ITEM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniFA_ItemChanging(value);
					this.SendPropertyChanging();
					this._iFA_Item = value;
					this.SendPropertyChanged("iFA_Item");
					this.OniFA_ItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iFA_PmtTerm", DbType="Int NOT NULL")]
		public int iFA_PmtTerm
		{
			get
			{
				return this._iFA_PmtTerm;
			}
			set
			{
				if ((this._iFA_PmtTerm != value))
				{
					this.OniFA_PmtTermChanging(value);
					this.SendPropertyChanging();
					this._iFA_PmtTerm = value;
					this.SendPropertyChanged("iFA_PmtTerm");
					this.OniFA_PmtTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_RATE", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FA_ITEM_RATE", Storage="_FA_ITEM", ThisKey="iFA_Item", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public FA_ITEM FA_ITEM
		{
			get
			{
				return this._FA_ITEM.Entity;
			}
			set
			{
				FA_ITEM previousValue = this._FA_ITEM.Entity;
				if (((previousValue != value) 
							|| (this._FA_ITEM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FA_ITEM.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._FA_ITEM.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._iFA_Item = value.ID;
					}
					else
					{
						this._iFA_Item = default(int);
					}
					this.SendPropertyChanged("FA_ITEM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QBO_ITEMNAME_RATE", Storage="_QBO_ITEMNAME", ThisKey="iQBO_ItemName", OtherKey="ID", IsForeignKey=true)]
		public QBO_ITEMNAME QBO_ITEMNAME
		{
			get
			{
				return this._QBO_ITEMNAME.Entity;
			}
			set
			{
				QBO_ITEMNAME previousValue = this._QBO_ITEMNAME.Entity;
				if (((previousValue != value) 
							|| (this._QBO_ITEMNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QBO_ITEMNAME.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._QBO_ITEMNAME.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._iQBO_ItemName = value.ID;
					}
					else
					{
						this._iQBO_ItemName = default(int);
					}
					this.SendPropertyChanged("QBO_ITEMNAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIREWARDS")]
	public partial class TIREWARD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTimeOffset _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private System.DateTimeOffset _DEarn;
		
		private System.DateTimeOffset _DExpiry;
		
		private System.DateTimeOffset _DClaim;
		
		private int _iPerson;
		
		private int _iServicePts;
		
		private char _cECCode;
		
		private bool _bForward;
		
		private string _sComments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTimeOffset value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnDEarnChanging(System.DateTimeOffset value);
    partial void OnDEarnChanged();
    partial void OnDExpiryChanging(System.DateTimeOffset value);
    partial void OnDExpiryChanged();
    partial void OnDClaimChanging(System.DateTimeOffset value);
    partial void OnDClaimChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniServicePtsChanging(int value);
    partial void OniServicePtsChanged();
    partial void OncECCodeChanging(char value);
    partial void OncECCodeChanged();
    partial void OnbForwardChanging(bool value);
    partial void OnbForwardChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public TIREWARD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEarn", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DEarn
		{
			get
			{
				return this._DEarn;
			}
			set
			{
				if ((this._DEarn != value))
				{
					this.OnDEarnChanging(value);
					this.SendPropertyChanging();
					this._DEarn = value;
					this.SendPropertyChanged("DEarn");
					this.OnDEarnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DExpiry", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DExpiry
		{
			get
			{
				return this._DExpiry;
			}
			set
			{
				if ((this._DExpiry != value))
				{
					this.OnDExpiryChanging(value);
					this.SendPropertyChanging();
					this._DExpiry = value;
					this.SendPropertyChanged("DExpiry");
					this.OnDExpiryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DClaim", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DClaim
		{
			get
			{
				return this._DClaim;
			}
			set
			{
				if ((this._DClaim != value))
				{
					this.OnDClaimChanging(value);
					this.SendPropertyChanging();
					this._DClaim = value;
					this.SendPropertyChanged("DClaim");
					this.OnDClaimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iServicePts", DbType="Int NOT NULL")]
		public int iServicePts
		{
			get
			{
				return this._iServicePts;
			}
			set
			{
				if ((this._iServicePts != value))
				{
					this.OniServicePtsChanging(value);
					this.SendPropertyChanging();
					this._iServicePts = value;
					this.SendPropertyChanged("iServicePts");
					this.OniServicePtsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cECCode", DbType="NChar(1) NOT NULL")]
		public char cECCode
		{
			get
			{
				return this._cECCode;
			}
			set
			{
				if ((this._cECCode != value))
				{
					this.OncECCodeChanging(value);
					this.SendPropertyChanging();
					this._cECCode = value;
					this.SendPropertyChanged("cECCode");
					this.OncECCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bForward", DbType="Bit NOT NULL")]
		public bool bForward
		{
			get
			{
				return this._bForward;
			}
			set
			{
				if ((this._bForward != value))
				{
					this.OnbForwardChanging(value);
					this.SendPropertyChanging();
					this._bForward = value;
					this.SendPropertyChanged("bForward");
					this.OnbForwardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sf_AccountsFlatListResult
	{
		
		private string _sCode;
		
		private string _sSortCode;
		
		private string _sName;
		
		private string _sAccountType;
		
		private System.Nullable<int> _ID;
		
		private System.Nullable<int> _iSF_ParentAcct;
		
		private string _sNotes;
		
		public sf_AccountsFlatListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCode", DbType="NVarChar(25)")]
		public string sCode
		{
			get
			{
				return this._sCode;
			}
			set
			{
				if ((this._sCode != value))
				{
					this._sCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSortCode", DbType="NVarChar(40)")]
		public string sSortCode
		{
			get
			{
				return this._sSortCode;
			}
			set
			{
				if ((this._sSortCode != value))
				{
					this._sSortCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(128)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAccountType", DbType="NVarChar(25)")]
		public string sAccountType
		{
			get
			{
				return this._sAccountType;
			}
			set
			{
				if ((this._sAccountType != value))
				{
					this._sAccountType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSF_ParentAcct", DbType="Int")]
		public System.Nullable<int> iSF_ParentAcct
		{
			get
			{
				return this._iSF_ParentAcct;
			}
			set
			{
				if ((this._iSF_ParentAcct != value))
				{
					this._iSF_ParentAcct = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this._sNotes = value;
				}
			}
		}
	}
	
	public partial class TNPF_EligibleRewardMembersResult
	{
		
		private System.Nullable<int> _ID;
		
		private string _sDisplayName;
		
		public TNPF_EligibleRewardMembersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int")]
		public System.Nullable<int> ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55)")]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this._sDisplayName = value;
				}
			}
		}
	}
	
	public partial class TNPF_MRewards2Result
	{
		
		private System.Nullable<System.DateTimeOffset> _EarnD;
		
		private System.Nullable<System.DateTimeOffset> _ExpiryD;
		
		private System.Nullable<System.DateTimeOffset> _ClaimD;
		
		private System.Nullable<System.DateTimeOffset> _OrderByD;
		
		private System.Nullable<int> _ServicePtsi;
		
		private System.Nullable<bool> _Expiredb;
		
		private System.Nullable<char> _ECCodec;
		
		private System.Nullable<int> _Cumuli;
		
		private System.Nullable<int> _CumForwarded;
		
		private System.Nullable<int> _Claim1yri;
		
		private System.Nullable<int> _Claim1yrG;
		
		private string _Commentss;
		
		public TNPF_MRewards2Result()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EarnD", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> EarnD
		{
			get
			{
				return this._EarnD;
			}
			set
			{
				if ((this._EarnD != value))
				{
					this._EarnD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryD", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> ExpiryD
		{
			get
			{
				return this._ExpiryD;
			}
			set
			{
				if ((this._ExpiryD != value))
				{
					this._ExpiryD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimD", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> ClaimD
		{
			get
			{
				return this._ClaimD;
			}
			set
			{
				if ((this._ClaimD != value))
				{
					this._ClaimD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderByD", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> OrderByD
		{
			get
			{
				return this._OrderByD;
			}
			set
			{
				if ((this._OrderByD != value))
				{
					this._OrderByD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServicePtsi", DbType="Int")]
		public System.Nullable<int> ServicePtsi
		{
			get
			{
				return this._ServicePtsi;
			}
			set
			{
				if ((this._ServicePtsi != value))
				{
					this._ServicePtsi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expiredb", DbType="Bit")]
		public System.Nullable<bool> Expiredb
		{
			get
			{
				return this._Expiredb;
			}
			set
			{
				if ((this._Expiredb != value))
				{
					this._Expiredb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ECCodec", DbType="NChar(1)")]
		public System.Nullable<char> ECCodec
		{
			get
			{
				return this._ECCodec;
			}
			set
			{
				if ((this._ECCodec != value))
				{
					this._ECCodec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cumuli", DbType="Int")]
		public System.Nullable<int> Cumuli
		{
			get
			{
				return this._Cumuli;
			}
			set
			{
				if ((this._Cumuli != value))
				{
					this._Cumuli = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CumForwarded", DbType="Int")]
		public System.Nullable<int> CumForwarded
		{
			get
			{
				return this._CumForwarded;
			}
			set
			{
				if ((this._CumForwarded != value))
				{
					this._CumForwarded = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim1yri", DbType="Int")]
		public System.Nullable<int> Claim1yri
		{
			get
			{
				return this._Claim1yri;
			}
			set
			{
				if ((this._Claim1yri != value))
				{
					this._Claim1yri = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Claim1yrG", DbType="Int")]
		public System.Nullable<int> Claim1yrG
		{
			get
			{
				return this._Claim1yrG;
			}
			set
			{
				if ((this._Claim1yrG != value))
				{
					this._Claim1yrG = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Commentss", DbType="NVarChar(MAX)")]
		public string Commentss
		{
			get
			{
				return this._Commentss;
			}
			set
			{
				if ((this._Commentss != value))
				{
					this._Commentss = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
