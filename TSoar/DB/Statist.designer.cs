#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class StatistDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAVIATOR(AVIATOR instance);
    partial void UpdateAVIATOR(AVIATOR instance);
    partial void DeleteAVIATOR(AVIATOR instance);
    partial void InsertOPDETAIL(OPDETAIL instance);
    partial void UpdateOPDETAIL(OPDETAIL instance);
    partial void DeleteOPDETAIL(OPDETAIL instance);
    partial void InsertOPERATION(OPERATION instance);
    partial void UpdateOPERATION(OPERATION instance);
    partial void DeleteOPERATION(OPERATION instance);
    partial void InsertDIAGNOSTIC(DIAGNOSTIC instance);
    partial void UpdateDIAGNOSTIC(DIAGNOSTIC instance);
    partial void DeleteDIAGNOSTIC(DIAGNOSTIC instance);
    #endregion
		
		public StatistDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StatistDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AVIATOR> AVIATORs
		{
			get
			{
				return this.GetTable<AVIATOR>();
			}
		}
		
		public System.Data.Linq.Table<OPDETAIL> OPDETAILs
		{
			get
			{
				return this.GetTable<OPDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<OPERATION> OPERATIONs
		{
			get
			{
				return this.GetTable<OPERATION>();
			}
		}
		
		public System.Data.Linq.Table<DIAGNOSTIC> DIAGNOSTICs
		{
			get
			{
				return this.GetTable<DIAGNOSTIC>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TNPF_Aviators2bCharged", IsComposable=true)]
		public System.Nullable<int> TNPF_Aviators2bCharged([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iOpID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iOpID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_StatsRptByPilot")]
		public ISingleResult<sp_StatsRptByPilotResult> sp_StatsRptByPilot()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_StatsRptByPilotResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_StatsRptByGlider")]
		public ISingleResult<sp_StatsRptByGliderResult> sp_StatsRptByGlider()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_StatsRptByGliderResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVIATORS")]
	public partial class AVIATOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iPerson;
		
		private int _iOpDetail;
		
		private int _iAviatorRole;
		
		private decimal _dPercentCharge;
		
		private bool _b1stFlight;
		
		private System.Nullable<decimal> _mInvoiced;
		
		private System.Nullable<System.DateTimeOffset> _DInvoiced;
		
		private EntityRef<OPDETAIL> _OPDETAIL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniOpDetailChanging(int value);
    partial void OniOpDetailChanged();
    partial void OniAviatorRoleChanging(int value);
    partial void OniAviatorRoleChanged();
    partial void OndPercentChargeChanging(decimal value);
    partial void OndPercentChargeChanged();
    partial void Onb1stFlightChanging(bool value);
    partial void Onb1stFlightChanged();
    partial void OnmInvoicedChanging(System.Nullable<decimal> value);
    partial void OnmInvoicedChanged();
    partial void OnDInvoicedChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnDInvoicedChanged();
    #endregion
		
		public AVIATOR()
		{
			this._OPDETAIL = default(EntityRef<OPDETAIL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOpDetail", DbType="Int NOT NULL")]
		public int iOpDetail
		{
			get
			{
				return this._iOpDetail;
			}
			set
			{
				if ((this._iOpDetail != value))
				{
					if (this._OPDETAIL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOpDetailChanging(value);
					this.SendPropertyChanging();
					this._iOpDetail = value;
					this.SendPropertyChanged("iOpDetail");
					this.OniOpDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAviatorRole", DbType="Int NOT NULL")]
		public int iAviatorRole
		{
			get
			{
				return this._iAviatorRole;
			}
			set
			{
				if ((this._iAviatorRole != value))
				{
					this.OniAviatorRoleChanging(value);
					this.SendPropertyChanging();
					this._iAviatorRole = value;
					this.SendPropertyChanged("iAviatorRole");
					this.OniAviatorRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dPercentCharge", DbType="Decimal(6,2) NOT NULL")]
		public decimal dPercentCharge
		{
			get
			{
				return this._dPercentCharge;
			}
			set
			{
				if ((this._dPercentCharge != value))
				{
					this.OndPercentChargeChanging(value);
					this.SendPropertyChanging();
					this._dPercentCharge = value;
					this.SendPropertyChanged("dPercentCharge");
					this.OndPercentChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_b1stFlight", DbType="Bit NOT NULL")]
		public bool b1stFlight
		{
			get
			{
				return this._b1stFlight;
			}
			set
			{
				if ((this._b1stFlight != value))
				{
					this.Onb1stFlightChanging(value);
					this.SendPropertyChanging();
					this._b1stFlight = value;
					this.SendPropertyChanged("b1stFlight");
					this.Onb1stFlightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mInvoiced", DbType="Money")]
		public System.Nullable<decimal> mInvoiced
		{
			get
			{
				return this._mInvoiced;
			}
			set
			{
				if ((this._mInvoiced != value))
				{
					this.OnmInvoicedChanging(value);
					this.SendPropertyChanging();
					this._mInvoiced = value;
					this.SendPropertyChanged("mInvoiced");
					this.OnmInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DInvoiced", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DInvoiced
		{
			get
			{
				return this._DInvoiced;
			}
			set
			{
				if ((this._DInvoiced != value))
				{
					this.OnDInvoicedChanging(value);
					this.SendPropertyChanging();
					this._DInvoiced = value;
					this.SendPropertyChanged("DInvoiced");
					this.OnDInvoicedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPDETAIL_AVIATOR", Storage="_OPDETAIL", ThisKey="iOpDetail", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPDETAIL OPDETAIL
		{
			get
			{
				return this._OPDETAIL.Entity;
			}
			set
			{
				OPDETAIL previousValue = this._OPDETAIL.Entity;
				if (((previousValue != value) 
							|| (this._OPDETAIL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPDETAIL.Entity = null;
						previousValue.AVIATORs.Remove(this);
					}
					this._OPDETAIL.Entity = value;
					if ((value != null))
					{
						value.AVIATORs.Add(this);
						this._iOpDetail = value.ID;
					}
					else
					{
						this._iOpDetail = default(int);
					}
					this.SendPropertyChanged("OPDETAIL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPDETAILS")]
	public partial class OPDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iEquip;
		
		private int _iOperation;
		
		private int _iEquipmentRole;
		
		private System.Nullable<decimal> _dMaxAltitude;
		
		private System.Nullable<decimal> _dReleaseAltitude;
		
		private EntitySet<AVIATOR> _AVIATORs;
		
		private EntityRef<OPERATION> _OPERATION;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniEquipChanging(int value);
    partial void OniEquipChanged();
    partial void OniOperationChanging(int value);
    partial void OniOperationChanged();
    partial void OniEquipmentRoleChanging(int value);
    partial void OniEquipmentRoleChanged();
    partial void OndMaxAltitudeChanging(System.Nullable<decimal> value);
    partial void OndMaxAltitudeChanged();
    partial void OndReleaseAltitudeChanging(System.Nullable<decimal> value);
    partial void OndReleaseAltitudeChanged();
    #endregion
		
		public OPDETAIL()
		{
			this._AVIATORs = new EntitySet<AVIATOR>(new Action<AVIATOR>(this.attach_AVIATORs), new Action<AVIATOR>(this.detach_AVIATORs));
			this._OPERATION = default(EntityRef<OPERATION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquip", DbType="Int NOT NULL")]
		public int iEquip
		{
			get
			{
				return this._iEquip;
			}
			set
			{
				if ((this._iEquip != value))
				{
					this.OniEquipChanging(value);
					this.SendPropertyChanging();
					this._iEquip = value;
					this.SendPropertyChanged("iEquip");
					this.OniEquipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOperation", DbType="Int NOT NULL")]
		public int iOperation
		{
			get
			{
				return this._iOperation;
			}
			set
			{
				if ((this._iOperation != value))
				{
					if (this._OPERATION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOperationChanging(value);
					this.SendPropertyChanging();
					this._iOperation = value;
					this.SendPropertyChanged("iOperation");
					this.OniOperationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipmentRole", DbType="Int NOT NULL")]
		public int iEquipmentRole
		{
			get
			{
				return this._iEquipmentRole;
			}
			set
			{
				if ((this._iEquipmentRole != value))
				{
					this.OniEquipmentRoleChanging(value);
					this.SendPropertyChanging();
					this._iEquipmentRole = value;
					this.SendPropertyChanged("iEquipmentRole");
					this.OniEquipmentRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dMaxAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dMaxAltitude
		{
			get
			{
				return this._dMaxAltitude;
			}
			set
			{
				if ((this._dMaxAltitude != value))
				{
					this.OndMaxAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dMaxAltitude = value;
					this.SendPropertyChanged("dMaxAltitude");
					this.OndMaxAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dReleaseAltitude", DbType="Decimal(6,0)")]
		public System.Nullable<decimal> dReleaseAltitude
		{
			get
			{
				return this._dReleaseAltitude;
			}
			set
			{
				if ((this._dReleaseAltitude != value))
				{
					this.OndReleaseAltitudeChanging(value);
					this.SendPropertyChanging();
					this._dReleaseAltitude = value;
					this.SendPropertyChanged("dReleaseAltitude");
					this.OndReleaseAltitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPDETAIL_AVIATOR", Storage="_AVIATORs", ThisKey="ID", OtherKey="iOpDetail")]
		public EntitySet<AVIATOR> AVIATORs
		{
			get
			{
				return this._AVIATORs;
			}
			set
			{
				this._AVIATORs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_OPDETAIL", Storage="_OPERATION", ThisKey="iOperation", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPERATION OPERATION
		{
			get
			{
				return this._OPERATION.Entity;
			}
			set
			{
				OPERATION previousValue = this._OPERATION.Entity;
				if (((previousValue != value) 
							|| (this._OPERATION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPERATION.Entity = null;
						previousValue.OPDETAILs.Remove(this);
					}
					this._OPERATION.Entity = value;
					if ((value != null))
					{
						value.OPDETAILs.Add(this);
						this._iOperation = value.ID;
					}
					else
					{
						this._iOperation = default(int);
					}
					this.SendPropertyChanged("OPERATION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.OPDETAIL = this;
		}
		
		private void detach_AVIATORs(AVIATOR entity)
		{
			this.SendPropertyChanging();
			entity.OPDETAIL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPERATIONS")]
	public partial class OPERATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private int _iLaunchMethod;
		
		private int _iTakeoffLoc;
		
		private System.Nullable<System.DateTime> _DBegin;
		
		private int _iLandingLoc;
		
		private System.Nullable<System.DateTime> _DEnd;
		
		private string _sComment;
		
		private int _iChargeCode;
		
		private int _iInvoices2go;
		
		private EntitySet<OPDETAIL> _OPDETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OniTakeoffLocChanging(int value);
    partial void OniTakeoffLocChanged();
    partial void OnDBeginChanging(System.Nullable<System.DateTime> value);
    partial void OnDBeginChanged();
    partial void OniLandingLocChanging(int value);
    partial void OniLandingLocChanged();
    partial void OnDEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDEndChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniChargeCodeChanging(int value);
    partial void OniChargeCodeChanged();
    partial void OniInvoices2goChanging(int value);
    partial void OniInvoices2goChanged();
    #endregion
		
		public OPERATION()
		{
			this._OPDETAILs = new EntitySet<OPDETAIL>(new Action<OPDETAIL>(this.attach_OPDETAILs), new Action<OPDETAIL>(this.detach_OPDETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTakeoffLoc", DbType="Int NOT NULL")]
		public int iTakeoffLoc
		{
			get
			{
				return this._iTakeoffLoc;
			}
			set
			{
				if ((this._iTakeoffLoc != value))
				{
					this.OniTakeoffLocChanging(value);
					this.SendPropertyChanging();
					this._iTakeoffLoc = value;
					this.SendPropertyChanged("iTakeoffLoc");
					this.OniTakeoffLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this.OnDBeginChanging(value);
					this.SendPropertyChanging();
					this._DBegin = value;
					this.SendPropertyChanged("DBegin");
					this.OnDBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLandingLoc", DbType="Int NOT NULL")]
		public int iLandingLoc
		{
			get
			{
				return this._iLandingLoc;
			}
			set
			{
				if ((this._iLandingLoc != value))
				{
					this.OniLandingLocChanging(value);
					this.SendPropertyChanging();
					this._iLandingLoc = value;
					this.SendPropertyChanged("iLandingLoc");
					this.OniLandingLocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this.OnDEndChanging(value);
					this.SendPropertyChanging();
					this._DEnd = value;
					this.SendPropertyChanged("DEnd");
					this.OnDEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="VarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iChargeCode", DbType="Int NOT NULL")]
		public int iChargeCode
		{
			get
			{
				return this._iChargeCode;
			}
			set
			{
				if ((this._iChargeCode != value))
				{
					this.OniChargeCodeChanging(value);
					this.SendPropertyChanging();
					this._iChargeCode = value;
					this.SendPropertyChanged("iChargeCode");
					this.OniChargeCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iInvoices2go", DbType="Int NOT NULL")]
		public int iInvoices2go
		{
			get
			{
				return this._iInvoices2go;
			}
			set
			{
				if ((this._iInvoices2go != value))
				{
					this.OniInvoices2goChanging(value);
					this.SendPropertyChanging();
					this._iInvoices2go = value;
					this.SendPropertyChanged("iInvoices2go");
					this.OniInvoices2goChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPERATION_OPDETAIL", Storage="_OPDETAILs", ThisKey="ID", OtherKey="iOperation")]
		public EntitySet<OPDETAIL> OPDETAILs
		{
			get
			{
				return this._OPDETAILs;
			}
			set
			{
				this._OPDETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = this;
		}
		
		private void detach_OPDETAILs(OPDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.OPERATION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIAGNOSTICS")]
	public partial class DIAGNOSTIC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiT;
		
		private string _sKind;
		
		private int _iDbgLvl;
		
		private string _sDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTChanging(System.DateTime value);
    partial void OnPiTChanged();
    partial void OnsKindChanging(string value);
    partial void OnsKindChanged();
    partial void OniDbgLvlChanging(int value);
    partial void OniDbgLvlChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public DIAGNOSTIC()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiT", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiT
		{
			get
			{
				return this._PiT;
			}
			set
			{
				if ((this._PiT != value))
				{
					this.OnPiTChanging(value);
					this.SendPropertyChanging();
					this._PiT = value;
					this.SendPropertyChanged("PiT");
					this.OnPiTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sKind", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string sKind
		{
			get
			{
				return this._sKind;
			}
			set
			{
				if ((this._sKind != value))
				{
					this.OnsKindChanging(value);
					this.SendPropertyChanging();
					this._sKind = value;
					this.SendPropertyChanged("sKind");
					this.OnsKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iDbgLvl", DbType="Int NOT NULL")]
		public int iDbgLvl
		{
			get
			{
				return this._iDbgLvl;
			}
			set
			{
				if ((this._iDbgLvl != value))
				{
					this.OniDbgLvlChanging(value);
					this.SendPropertyChanging();
					this._iDbgLvl = value;
					this.SendPropertyChanged("iDbgLvl");
					this.OniDbgLvlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_StatsRptByPilotResult
	{
		
		private string _Aviator;
		
		private System.Nullable<int> _Year;
		
		private string _Glider;
		
		private string _Role;
		
		private System.Nullable<decimal> _Flight_Hours;
		
		private string _SubGlider;
		
		private string _SubYear;
		
		private string _SubAviator;
		
		private string _Total;
		
		public sp_StatsRptByPilotResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Aviator", DbType="NVarChar(55)")]
		public string Aviator
		{
			get
			{
				return this._Aviator;
			}
			set
			{
				if ((this._Aviator != value))
				{
					this._Aviator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Glider", DbType="VarChar(25)")]
		public string Glider
		{
			get
			{
				return this._Glider;
			}
			set
			{
				if ((this._Glider != value))
				{
					this._Glider = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(20)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this._Role = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Flight Hours]", Storage="_Flight_Hours", DbType="Decimal(17,6)")]
		public System.Nullable<decimal> Flight_Hours
		{
			get
			{
				return this._Flight_Hours;
			}
			set
			{
				if ((this._Flight_Hours != value))
				{
					this._Flight_Hours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGlider", DbType="VarChar(1)")]
		public string SubGlider
		{
			get
			{
				return this._SubGlider;
			}
			set
			{
				if ((this._SubGlider != value))
				{
					this._SubGlider = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubYear", DbType="VarChar(1)")]
		public string SubYear
		{
			get
			{
				return this._SubYear;
			}
			set
			{
				if ((this._SubYear != value))
				{
					this._SubYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubAviator", DbType="VarChar(1)")]
		public string SubAviator
		{
			get
			{
				return this._SubAviator;
			}
			set
			{
				if ((this._SubAviator != value))
				{
					this._SubAviator = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="VarChar(1)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
	
	public partial class sp_StatsRptByGliderResult
	{
		
		private string _Glider___Owner;
		
		private System.Nullable<int> _Year;
		
		private System.Nullable<decimal> _Flight_Hours;
		
		private string _SubGlider;
		
		private string _Total;
		
		public sp_StatsRptByGliderResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Glider - Owner]", Storage="_Glider___Owner", DbType="VarChar(78)")]
		public string Glider___Owner
		{
			get
			{
				return this._Glider___Owner;
			}
			set
			{
				if ((this._Glider___Owner != value))
				{
					this._Glider___Owner = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int")]
		public System.Nullable<int> Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this._Year = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Flight Hours]", Storage="_Flight_Hours", DbType="Decimal(17,6)")]
		public System.Nullable<decimal> Flight_Hours
		{
			get
			{
				return this._Flight_Hours;
			}
			set
			{
				if ((this._Flight_Hours != value))
				{
					this._Flight_Hours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubGlider", DbType="VarChar(1)")]
		public string SubGlider
		{
			get
			{
				return this._SubGlider;
			}
			set
			{
				if ((this._SubGlider != value))
				{
					this._SubGlider = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="VarChar(1)")]
		public string Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this._Total = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
