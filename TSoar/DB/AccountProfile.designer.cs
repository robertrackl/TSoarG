#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class AccountProfileDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSETTING(SETTING instance);
    partial void UpdateSETTING(SETTING instance);
    partial void DeleteSETTING(SETTING instance);
    #endregion
		
		public AccountProfileDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AccountProfileDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountProfileDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountProfileDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountProfileDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SETTING> SETTINGs
		{
			get
			{
				return this.GetTable<SETTING>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETTINGS")]
	public partial class SETTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sSettingName;
		
		private string _sExplanation;
		
		private string _sSettingValue;
		
		private string _sInTable;
		
		private string _sComments;
		
		private bool _bUserSelectable;
		
		private char _cSettingType;
		
		private System.Nullable<decimal> _dLow;
		
		private System.Nullable<decimal> _dHigh;
		
		private string _sSelectStmnt;
		
		private string _sDataValueField;
		
		private string _sDataTextField;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsSettingNameChanging(string value);
    partial void OnsSettingNameChanged();
    partial void OnsExplanationChanging(string value);
    partial void OnsExplanationChanged();
    partial void OnsSettingValueChanging(string value);
    partial void OnsSettingValueChanged();
    partial void OnsInTableChanging(string value);
    partial void OnsInTableChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    partial void OnbUserSelectableChanging(bool value);
    partial void OnbUserSelectableChanged();
    partial void OncSettingTypeChanging(char value);
    partial void OncSettingTypeChanged();
    partial void OndLowChanging(System.Nullable<decimal> value);
    partial void OndLowChanged();
    partial void OndHighChanging(System.Nullable<decimal> value);
    partial void OndHighChanged();
    partial void OnsSelectStmntChanging(string value);
    partial void OnsSelectStmntChanged();
    partial void OnsDataValueFieldChanging(string value);
    partial void OnsDataValueFieldChanged();
    partial void OnsDataTextFieldChanging(string value);
    partial void OnsDataTextFieldChanged();
    #endregion
		
		public SETTING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sSettingName
		{
			get
			{
				return this._sSettingName;
			}
			set
			{
				if ((this._sSettingName != value))
				{
					this.OnsSettingNameChanging(value);
					this.SendPropertyChanging();
					this._sSettingName = value;
					this.SendPropertyChanged("sSettingName");
					this.OnsSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sExplanation", DbType="NVarChar(MAX)")]
		public string sExplanation
		{
			get
			{
				return this._sExplanation;
			}
			set
			{
				if ((this._sExplanation != value))
				{
					this.OnsExplanationChanging(value);
					this.SendPropertyChanging();
					this._sExplanation = value;
					this.SendPropertyChanged("sExplanation");
					this.OnsExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSettingValue", DbType="NVarChar(MAX)")]
		public string sSettingValue
		{
			get
			{
				return this._sSettingValue;
			}
			set
			{
				if ((this._sSettingValue != value))
				{
					this.OnsSettingValueChanging(value);
					this.SendPropertyChanging();
					this._sSettingValue = value;
					this.SendPropertyChanged("sSettingValue");
					this.OnsSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInTable", DbType="NVarChar(MAX)")]
		public string sInTable
		{
			get
			{
				return this._sInTable;
			}
			set
			{
				if ((this._sInTable != value))
				{
					this.OnsInTableChanging(value);
					this.SendPropertyChanging();
					this._sInTable = value;
					this.SendPropertyChanged("sInTable");
					this.OnsInTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bUserSelectable", DbType="Bit NOT NULL")]
		public bool bUserSelectable
		{
			get
			{
				return this._bUserSelectable;
			}
			set
			{
				if ((this._bUserSelectable != value))
				{
					this.OnbUserSelectableChanging(value);
					this.SendPropertyChanging();
					this._bUserSelectable = value;
					this.SendPropertyChanged("bUserSelectable");
					this.OnbUserSelectableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cSettingType", DbType="NChar(1) NOT NULL")]
		public char cSettingType
		{
			get
			{
				return this._cSettingType;
			}
			set
			{
				if ((this._cSettingType != value))
				{
					this.OncSettingTypeChanging(value);
					this.SendPropertyChanging();
					this._cSettingType = value;
					this.SendPropertyChanged("cSettingType");
					this.OncSettingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dLow", DbType="Decimal(12,4)")]
		public System.Nullable<decimal> dLow
		{
			get
			{
				return this._dLow;
			}
			set
			{
				if ((this._dLow != value))
				{
					this.OndLowChanging(value);
					this.SendPropertyChanging();
					this._dLow = value;
					this.SendPropertyChanged("dLow");
					this.OndLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dHigh", DbType="Decimal(12,4)")]
		public System.Nullable<decimal> dHigh
		{
			get
			{
				return this._dHigh;
			}
			set
			{
				if ((this._dHigh != value))
				{
					this.OndHighChanging(value);
					this.SendPropertyChanging();
					this._dHigh = value;
					this.SendPropertyChanged("dHigh");
					this.OndHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSelectStmnt", DbType="NVarChar(MAX)")]
		public string sSelectStmnt
		{
			get
			{
				return this._sSelectStmnt;
			}
			set
			{
				if ((this._sSelectStmnt != value))
				{
					this.OnsSelectStmntChanging(value);
					this.SendPropertyChanging();
					this._sSelectStmnt = value;
					this.SendPropertyChanged("sSelectStmnt");
					this.OnsSelectStmntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDataValueField", DbType="NVarChar(50)")]
		public string sDataValueField
		{
			get
			{
				return this._sDataValueField;
			}
			set
			{
				if ((this._sDataValueField != value))
				{
					this.OnsDataValueFieldChanging(value);
					this.SendPropertyChanging();
					this._sDataValueField = value;
					this.SendPropertyChanged("sDataValueField");
					this.OnsDataValueFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDataTextField", DbType="NVarChar(MAX)")]
		public string sDataTextField
		{
			get
			{
				return this._sDataTextField;
			}
			set
			{
				if ((this._sDataTextField != value))
				{
					this.OnsDataTextFieldChanging(value);
					this.SendPropertyChanging();
					this._sDataTextField = value;
					this.SendPropertyChanged("sDataTextField");
					this.OnsDataTextFieldChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
