#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TSoar.AdminPages.DBMaint
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SoarDB")]
	public partial class DataIntegrityDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEQUIPTYPE(EQUIPTYPE instance);
    partial void UpdateEQUIPTYPE(EQUIPTYPE instance);
    partial void DeleteEQUIPTYPE(EQUIPTYPE instance);
    partial void InsertLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void UpdateLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void DeleteLAUNCHMETHOD(LAUNCHMETHOD instance);
    partial void InsertAVIATORROLE(AVIATORROLE instance);
    partial void UpdateAVIATORROLE(AVIATORROLE instance);
    partial void DeleteAVIATORROLE(AVIATORROLE instance);
    partial void InsertRATE(RATE instance);
    partial void UpdateRATE(RATE instance);
    partial void DeleteRATE(RATE instance);
    partial void InsertINVOICESOURCE(INVOICESOURCE instance);
    partial void UpdateINVOICESOURCE(INVOICESOURCE instance);
    partial void DeleteINVOICESOURCE(INVOICESOURCE instance);
    partial void InsertQUALIFICATION(QUALIFICATION instance);
    partial void UpdateQUALIFICATION(QUALIFICATION instance);
    partial void DeleteQUALIFICATION(QUALIFICATION instance);
    partial void InsertCERTIFICATION(CERTIFICATION instance);
    partial void UpdateCERTIFICATION(CERTIFICATION instance);
    partial void DeleteCERTIFICATION(CERTIFICATION instance);
    partial void InsertRATING(RATING instance);
    partial void UpdateRATING(RATING instance);
    partial void DeleteRATING(RATING instance);
    partial void InsertEQUIPOPERDATA(EQUIPOPERDATA instance);
    partial void UpdateEQUIPOPERDATA(EQUIPOPERDATA instance);
    partial void DeleteEQUIPOPERDATA(EQUIPOPERDATA instance);
    partial void InsertEQUIPMENT(EQUIPMENT instance);
    partial void UpdateEQUIPMENT(EQUIPMENT instance);
    partial void DeleteEQUIPMENT(EQUIPMENT instance);
    partial void InsertPEOPLE(PEOPLE instance);
    partial void UpdatePEOPLE(PEOPLE instance);
    partial void DeletePEOPLE(PEOPLE instance);
    partial void InsertMEMBERFROMTO(MEMBERFROMTO instance);
    partial void UpdateMEMBERFROMTO(MEMBERFROMTO instance);
    partial void DeleteMEMBERFROMTO(MEMBERFROMTO instance);
    partial void Insertaspnet_Role(aspnet_Role instance);
    partial void Updateaspnet_Role(aspnet_Role instance);
    partial void Deleteaspnet_Role(aspnet_Role instance);
    partial void InsertSETTINGSROLESBRIDGE(SETTINGSROLESBRIDGE instance);
    partial void UpdateSETTINGSROLESBRIDGE(SETTINGSROLESBRIDGE instance);
    partial void DeleteSETTINGSROLESBRIDGE(SETTINGSROLESBRIDGE instance);
    partial void InsertEQUIPAGINGITEM(EQUIPAGINGITEM instance);
    partial void UpdateEQUIPAGINGITEM(EQUIPAGINGITEM instance);
    partial void DeleteEQUIPAGINGITEM(EQUIPAGINGITEM instance);
    partial void InsertOPSCALNAME(OPSCALNAME instance);
    partial void UpdateOPSCALNAME(OPSCALNAME instance);
    partial void DeleteOPSCALNAME(OPSCALNAME instance);
    partial void InsertSETTING(SETTING instance);
    partial void UpdateSETTING(SETTING instance);
    partial void DeleteSETTING(SETTING instance);
    partial void InsertFA_ITEM(FA_ITEM instance);
    partial void UpdateFA_ITEM(FA_ITEM instance);
    partial void DeleteFA_ITEM(FA_ITEM instance);
    partial void InsertFA_PMTTERM(FA_PMTTERM instance);
    partial void UpdateFA_PMTTERM(FA_PMTTERM instance);
    partial void DeleteFA_PMTTERM(FA_PMTTERM instance);
    partial void InsertEQUIPCOMPONENT(EQUIPCOMPONENT instance);
    partial void UpdateEQUIPCOMPONENT(EQUIPCOMPONENT instance);
    partial void DeleteEQUIPCOMPONENT(EQUIPCOMPONENT instance);
    partial void InsertOPSCALTIME(OPSCALTIME instance);
    partial void UpdateOPSCALTIME(OPSCALTIME instance);
    partial void DeleteOPSCALTIME(OPSCALTIME instance);
    #endregion
		
		public DataIntegrityDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SqlConn"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataIntegrityDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataIntegrityDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataIntegrityDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataIntegrityDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EQUIPTYPE> EQUIPTYPEs
		{
			get
			{
				return this.GetTable<EQUIPTYPE>();
			}
		}
		
		public System.Data.Linq.Table<LAUNCHMETHOD> LAUNCHMETHODs
		{
			get
			{
				return this.GetTable<LAUNCHMETHOD>();
			}
		}
		
		public System.Data.Linq.Table<AVIATORROLE> AVIATORROLEs
		{
			get
			{
				return this.GetTable<AVIATORROLE>();
			}
		}
		
		public System.Data.Linq.Table<RATE> RATEs
		{
			get
			{
				return this.GetTable<RATE>();
			}
		}
		
		public System.Data.Linq.Table<INVOICESOURCE> INVOICESOURCEs
		{
			get
			{
				return this.GetTable<INVOICESOURCE>();
			}
		}
		
		public System.Data.Linq.Table<QUALIFICATION> QUALIFICATIONs
		{
			get
			{
				return this.GetTable<QUALIFICATION>();
			}
		}
		
		public System.Data.Linq.Table<CERTIFICATION> CERTIFICATIONs
		{
			get
			{
				return this.GetTable<CERTIFICATION>();
			}
		}
		
		public System.Data.Linq.Table<RATING> RATINGs
		{
			get
			{
				return this.GetTable<RATING>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPOPERDATA> EQUIPOPERDATAs
		{
			get
			{
				return this.GetTable<EQUIPOPERDATA>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPMENT> EQUIPMENTs
		{
			get
			{
				return this.GetTable<EQUIPMENT>();
			}
		}
		
		public System.Data.Linq.Table<PEOPLE> PEOPLEs
		{
			get
			{
				return this.GetTable<PEOPLE>();
			}
		}
		
		public System.Data.Linq.Table<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this.GetTable<MEMBERFROMTO>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
		{
			get
			{
				return this.GetTable<aspnet_Role>();
			}
		}
		
		public System.Data.Linq.Table<SETTINGSROLESBRIDGE> SETTINGSROLESBRIDGEs
		{
			get
			{
				return this.GetTable<SETTINGSROLESBRIDGE>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPAGINGITEM> EQUIPAGINGITEMs
		{
			get
			{
				return this.GetTable<EQUIPAGINGITEM>();
			}
		}
		
		public System.Data.Linq.Table<OPSCALNAME> OPSCALNAMEs
		{
			get
			{
				return this.GetTable<OPSCALNAME>();
			}
		}
		
		public System.Data.Linq.Table<SETTING> SETTINGs
		{
			get
			{
				return this.GetTable<SETTING>();
			}
		}
		
		public System.Data.Linq.Table<FA_ITEM> FA_ITEMs
		{
			get
			{
				return this.GetTable<FA_ITEM>();
			}
		}
		
		public System.Data.Linq.Table<FA_PMTTERM> FA_PMTTERMs
		{
			get
			{
				return this.GetTable<FA_PMTTERM>();
			}
		}
		
		public System.Data.Linq.Table<EQUIPCOMPONENT> EQUIPCOMPONENTs
		{
			get
			{
				return this.GetTable<EQUIPCOMPONENT>();
			}
		}
		
		public System.Data.Linq.Table<OPSCALTIME> OPSCALTIMEs
		{
			get
			{
				return this.GetTable<OPSCALTIME>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCheck4PeopleFromToOverlaps")]
		public int spCheck4PeopleFromToOverlaps([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(700)")] ref string suStatus)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), suStatus);
			suStatus = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spSettingsCheck")]
		public int spSettingsCheck([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string sTable, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(80)")] string sField, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string sRequiredValue, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> iHits, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] ref string sMsg)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sTable, sField, sRequiredValue, iHits, sMsg);
			iHits = ((System.Nullable<int>)(result.GetParameterValue(3)));
			sMsg = ((string)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TNPF_LinkBeginEnd", IsComposable=true)]
		public IQueryable<TNPF_LinkBeginEndResult> TNPF_LinkBeginEnd([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> iComponent)
		{
			return this.CreateMethodCallQuery<TNPF_LinkBeginEndResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iComponent);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPTYPES")]
	public partial class EQUIPTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sEquipmentType;
		
		private EntitySet<RATE> _RATEs;
		
		private EntitySet<EQUIPMENT> _EQUIPMENTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsEquipmentTypeChanging(string value);
    partial void OnsEquipmentTypeChanged();
    #endregion
		
		public EQUIPTYPE()
		{
			this._RATEs = new EntitySet<RATE>(new Action<RATE>(this.attach_RATEs), new Action<RATE>(this.detach_RATEs));
			this._EQUIPMENTs = new EntitySet<EQUIPMENT>(new Action<EQUIPMENT>(this.attach_EQUIPMENTs), new Action<EQUIPMENT>(this.detach_EQUIPMENTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sEquipmentType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sEquipmentType
		{
			get
			{
				return this._sEquipmentType;
			}
			set
			{
				if ((this._sEquipmentType != value))
				{
					this.OnsEquipmentTypeChanging(value);
					this.SendPropertyChanging();
					this._sEquipmentType = value;
					this.SendPropertyChanged("sEquipmentType");
					this.OnsEquipmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_RATE", Storage="_RATEs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<RATE> RATEs
		{
			get
			{
				return this._RATEs;
			}
			set
			{
				this._RATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPMENT", Storage="_EQUIPMENTs", ThisKey="ID", OtherKey="iEquipType")]
		public EntitySet<EQUIPMENT> EQUIPMENTs
		{
			get
			{
				return this._EQUIPMENTs;
			}
			set
			{
				this._EQUIPMENTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_RATEs(RATE entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
		
		private void attach_EQUIPMENTs(EQUIPMENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = this;
		}
		
		private void detach_EQUIPMENTs(EQUIPMENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPTYPE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAUNCHMETHODS")]
	public partial class LAUNCHMETHOD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sLaunchMethod;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsLaunchMethodChanging(string value);
    partial void OnsLaunchMethodChanged();
    #endregion
		
		public LAUNCHMETHOD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLaunchMethod", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sLaunchMethod
		{
			get
			{
				return this._sLaunchMethod;
			}
			set
			{
				if ((this._sLaunchMethod != value))
				{
					this.OnsLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._sLaunchMethod = value;
					this.SendPropertyChanged("sLaunchMethod");
					this.OnsLaunchMethodChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AVIATORROLES")]
	public partial class AVIATORROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sAviatorRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsAviatorRoleChanging(string value);
    partial void OnsAviatorRoleChanged();
    #endregion
		
		public AVIATORROLE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAviatorRole", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string sAviatorRole
		{
			get
			{
				return this._sAviatorRole;
			}
			set
			{
				if ((this._sAviatorRole != value))
				{
					this.OnsAviatorRoleChanging(value);
					this.SendPropertyChanging();
					this._sAviatorRole = value;
					this.SendPropertyChanged("sAviatorRole");
					this.OnsAviatorRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RATES")]
	public partial class RATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sShortName;
		
		private System.DateTimeOffset _Dfrom;
		
		private System.DateTimeOffset _DTo;
		
		private int _iEquipType;
		
		private int _iLaunchMethod;
		
		private string _sChargeCodes;
		
		private decimal _mSingleDpUse;
		
		private int _iNoChrg1stFt;
		
		private decimal _mAltDiffDpFt;
		
		private int _iNoChrg1stMin;
		
		private decimal _mDurationDpMin;
		
		private string _sComment;
		
		private int _iQBO_ItemName;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsShortNameChanging(string value);
    partial void OnsShortNameChanged();
    partial void OnDfromChanging(System.DateTimeOffset value);
    partial void OnDfromChanged();
    partial void OnDToChanging(System.DateTimeOffset value);
    partial void OnDToChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OniLaunchMethodChanging(int value);
    partial void OniLaunchMethodChanged();
    partial void OnsChargeCodesChanging(string value);
    partial void OnsChargeCodesChanged();
    partial void OnmSingleDpUseChanging(decimal value);
    partial void OnmSingleDpUseChanged();
    partial void OniNoChrg1stFtChanging(int value);
    partial void OniNoChrg1stFtChanged();
    partial void OnmAltDiffDpFtChanging(decimal value);
    partial void OnmAltDiffDpFtChanged();
    partial void OniNoChrg1stMinChanging(int value);
    partial void OniNoChrg1stMinChanged();
    partial void OnmDurationDpMinChanging(decimal value);
    partial void OnmDurationDpMinChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniQBO_ItemNameChanging(int value);
    partial void OniQBO_ItemNameChanged();
    #endregion
		
		public RATE()
		{
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortName", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string sShortName
		{
			get
			{
				return this._sShortName;
			}
			set
			{
				if ((this._sShortName != value))
				{
					this.OnsShortNameChanging(value);
					this.SendPropertyChanging();
					this._sShortName = value;
					this.SendPropertyChanged("sShortName");
					this.OnsShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dfrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset Dfrom
		{
			get
			{
				return this._Dfrom;
			}
			set
			{
				if ((this._Dfrom != value))
				{
					this.OnDfromChanging(value);
					this.SendPropertyChanging();
					this._Dfrom = value;
					this.SendPropertyChanged("Dfrom");
					this.OnDfromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this.OnDToChanging(value);
					this.SendPropertyChanging();
					this._DTo = value;
					this.SendPropertyChanged("DTo");
					this.OnDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLaunchMethod", DbType="Int NOT NULL")]
		public int iLaunchMethod
		{
			get
			{
				return this._iLaunchMethod;
			}
			set
			{
				if ((this._iLaunchMethod != value))
				{
					this.OniLaunchMethodChanging(value);
					this.SendPropertyChanging();
					this._iLaunchMethod = value;
					this.SendPropertyChanged("iLaunchMethod");
					this.OniLaunchMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sChargeCodes", DbType="VarChar(26) NOT NULL", CanBeNull=false)]
		public string sChargeCodes
		{
			get
			{
				return this._sChargeCodes;
			}
			set
			{
				if ((this._sChargeCodes != value))
				{
					this.OnsChargeCodesChanging(value);
					this.SendPropertyChanging();
					this._sChargeCodes = value;
					this.SendPropertyChanged("sChargeCodes");
					this.OnsChargeCodesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mSingleDpUse", DbType="Money NOT NULL")]
		public decimal mSingleDpUse
		{
			get
			{
				return this._mSingleDpUse;
			}
			set
			{
				if ((this._mSingleDpUse != value))
				{
					this.OnmSingleDpUseChanging(value);
					this.SendPropertyChanging();
					this._mSingleDpUse = value;
					this.SendPropertyChanged("mSingleDpUse");
					this.OnmSingleDpUseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stFt", DbType="Int NOT NULL")]
		public int iNoChrg1stFt
		{
			get
			{
				return this._iNoChrg1stFt;
			}
			set
			{
				if ((this._iNoChrg1stFt != value))
				{
					this.OniNoChrg1stFtChanging(value);
					this.SendPropertyChanging();
					this._iNoChrg1stFt = value;
					this.SendPropertyChanged("iNoChrg1stFt");
					this.OniNoChrg1stFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mAltDiffDpFt", DbType="Money NOT NULL")]
		public decimal mAltDiffDpFt
		{
			get
			{
				return this._mAltDiffDpFt;
			}
			set
			{
				if ((this._mAltDiffDpFt != value))
				{
					this.OnmAltDiffDpFtChanging(value);
					this.SendPropertyChanging();
					this._mAltDiffDpFt = value;
					this.SendPropertyChanged("mAltDiffDpFt");
					this.OnmAltDiffDpFtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iNoChrg1stMin", DbType="Int NOT NULL")]
		public int iNoChrg1stMin
		{
			get
			{
				return this._iNoChrg1stMin;
			}
			set
			{
				if ((this._iNoChrg1stMin != value))
				{
					this.OniNoChrg1stMinChanging(value);
					this.SendPropertyChanging();
					this._iNoChrg1stMin = value;
					this.SendPropertyChanged("iNoChrg1stMin");
					this.OniNoChrg1stMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mDurationDpMin", DbType="Money NOT NULL")]
		public decimal mDurationDpMin
		{
			get
			{
				return this._mDurationDpMin;
			}
			set
			{
				if ((this._mDurationDpMin != value))
				{
					this.OnmDurationDpMinChanging(value);
					this.SendPropertyChanging();
					this._mDurationDpMin = value;
					this.SendPropertyChanged("mDurationDpMin");
					this.OnmDurationDpMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iQBO_ItemName", DbType="Int NOT NULL")]
		public int iQBO_ItemName
		{
			get
			{
				return this._iQBO_ItemName;
			}
			set
			{
				if ((this._iQBO_ItemName != value))
				{
					this.OniQBO_ItemNameChanging(value);
					this.SendPropertyChanging();
					this._iQBO_ItemName = value;
					this.SendPropertyChanged("iQBO_ItemName");
					this.OniQBO_ItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_RATE", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.RATEs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.RATEs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INVOICESOURCES")]
	public partial class INVOICESOURCE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sInvoiceSource;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsInvoiceSourceChanging(string value);
    partial void OnsInvoiceSourceChanged();
    #endregion
		
		public INVOICESOURCE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInvoiceSource", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sInvoiceSource
		{
			get
			{
				return this._sInvoiceSource;
			}
			set
			{
				if ((this._sInvoiceSource != value))
				{
					this.OnsInvoiceSourceChanging(value);
					this.SendPropertyChanging();
					this._sInvoiceSource = value;
					this.SendPropertyChanged("sInvoiceSource");
					this.OnsInvoiceSourceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUALIFICATIONS")]
	public partial class QUALIFICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sQualification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsQualificationChanging(string value);
    partial void OnsQualificationChanged();
    #endregion
		
		public QUALIFICATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sQualification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sQualification
		{
			get
			{
				return this._sQualification;
			}
			set
			{
				if ((this._sQualification != value))
				{
					this.OnsQualificationChanging(value);
					this.SendPropertyChanging();
					this._sQualification = value;
					this.SendPropertyChanged("sQualification");
					this.OnsQualificationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CERTIFICATIONS")]
	public partial class CERTIFICATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sCertification;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsCertificationChanging(string value);
    partial void OnsCertificationChanged();
    #endregion
		
		public CERTIFICATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCertification", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string sCertification
		{
			get
			{
				return this._sCertification;
			}
			set
			{
				if ((this._sCertification != value))
				{
					this.OnsCertificationChanging(value);
					this.SendPropertyChanging();
					this._sCertification = value;
					this.SendPropertyChanged("sCertification");
					this.OnsCertificationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RATINGS")]
	public partial class RATING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sRating;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsRatingChanging(string value);
    partial void OnsRatingChanged();
    #endregion
		
		public RATING()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRating", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sRating
		{
			get
			{
				return this._sRating;
			}
			set
			{
				if ((this._sRating != value))
				{
					this.OnsRatingChanging(value);
					this.SendPropertyChanging();
					this._sRating = value;
					this.SendPropertyChanged("sRating");
					this.OnsRatingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPOPERDATA")]
	public partial class EQUIPOPERDATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iEquipComponent;
		
		private System.DateTimeOffset _DFrom;
		
		private System.DateTimeOffset _DTo;
		
		private decimal _dHours;
		
		private char _cSource;
		
		private decimal _dDistance;
		
		private string _sDistanceUnits;
		
		private string _sComment;
		
		private EntityRef<EQUIPCOMPONENT> _EQUIPCOMPONENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniEquipComponentChanging(int value);
    partial void OniEquipComponentChanged();
    partial void OnDFromChanging(System.DateTimeOffset value);
    partial void OnDFromChanged();
    partial void OnDToChanging(System.DateTimeOffset value);
    partial void OnDToChanged();
    partial void OndHoursChanging(decimal value);
    partial void OndHoursChanged();
    partial void OncSourceChanging(char value);
    partial void OncSourceChanged();
    partial void OndDistanceChanging(decimal value);
    partial void OndDistanceChanged();
    partial void OnsDistanceUnitsChanging(string value);
    partial void OnsDistanceUnitsChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPOPERDATA()
		{
			this._EQUIPCOMPONENT = default(EntityRef<EQUIPCOMPONENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipComponent", DbType="Int NOT NULL")]
		public int iEquipComponent
		{
			get
			{
				return this._iEquipComponent;
			}
			set
			{
				if ((this._iEquipComponent != value))
				{
					if (this._EQUIPCOMPONENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipComponentChanging(value);
					this.SendPropertyChanging();
					this._iEquipComponent = value;
					this.SendPropertyChanged("iEquipComponent");
					this.OniEquipComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DFrom", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DFrom
		{
			get
			{
				return this._DFrom;
			}
			set
			{
				if ((this._DFrom != value))
				{
					this.OnDFromChanging(value);
					this.SendPropertyChanging();
					this._DFrom = value;
					this.SendPropertyChanged("DFrom");
					this.OnDFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DTo", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DTo
		{
			get
			{
				return this._DTo;
			}
			set
			{
				if ((this._DTo != value))
				{
					this.OnDToChanging(value);
					this.SendPropertyChanging();
					this._DTo = value;
					this.SendPropertyChanged("DTo");
					this.OnDToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dHours", DbType="Decimal(12,4) NOT NULL")]
		public decimal dHours
		{
			get
			{
				return this._dHours;
			}
			set
			{
				if ((this._dHours != value))
				{
					this.OndHoursChanging(value);
					this.SendPropertyChanging();
					this._dHours = value;
					this.SendPropertyChanged("dHours");
					this.OndHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cSource", DbType="NChar(1) NOT NULL")]
		public char cSource
		{
			get
			{
				return this._cSource;
			}
			set
			{
				if ((this._cSource != value))
				{
					this.OncSourceChanging(value);
					this.SendPropertyChanging();
					this._cSource = value;
					this.SendPropertyChanged("cSource");
					this.OncSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dDistance", DbType="Decimal(12,2) NOT NULL")]
		public decimal dDistance
		{
			get
			{
				return this._dDistance;
			}
			set
			{
				if ((this._dDistance != value))
				{
					this.OndDistanceChanging(value);
					this.SendPropertyChanging();
					this._dDistance = value;
					this.SendPropertyChanged("dDistance");
					this.OndDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDistanceUnits", DbType="NVarChar(8) NOT NULL", CanBeNull=false)]
		public string sDistanceUnits
		{
			get
			{
				return this._sDistanceUnits;
			}
			set
			{
				if ((this._sDistanceUnits != value))
				{
					this.OnsDistanceUnitsChanging(value);
					this.SendPropertyChanging();
					this._sDistanceUnits = value;
					this.SendPropertyChanged("sDistanceUnits");
					this.OnsDistanceUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPCOMPONENT_EQUIPOPERDATA", Storage="_EQUIPCOMPONENT", ThisKey="iEquipComponent", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPCOMPONENT EQUIPCOMPONENT
		{
			get
			{
				return this._EQUIPCOMPONENT.Entity;
			}
			set
			{
				EQUIPCOMPONENT previousValue = this._EQUIPCOMPONENT.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPCOMPONENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPCOMPONENT.Entity = null;
						previousValue.EQUIPOPERDATAs.Remove(this);
					}
					this._EQUIPCOMPONENT.Entity = value;
					if ((value != null))
					{
						value.EQUIPOPERDATAs.Add(this);
						this._iEquipComponent = value.ID;
					}
					else
					{
						this._iEquipComponent = default(int);
					}
					this.SendPropertyChanged("EQUIPCOMPONENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPMENT")]
	public partial class EQUIPMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iEquipType;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private string _sShortEquipName;
		
		private string _sDescription;
		
		private string _sRegistrationId;
		
		private string _sOwner;
		
		private string _sModelNum;
		
		private System.Nullable<decimal> _AcquisitionCost;
		
		private string _sComment;
		
		private EntitySet<EQUIPCOMPONENT> _EQUIPCOMPONENTs;
		
		private EntityRef<EQUIPTYPE> _EQUIPTYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniEquipTypeChanging(int value);
    partial void OniEquipTypeChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OnsShortEquipNameChanging(string value);
    partial void OnsShortEquipNameChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    partial void OnsRegistrationIdChanging(string value);
    partial void OnsRegistrationIdChanged();
    partial void OnsOwnerChanging(string value);
    partial void OnsOwnerChanged();
    partial void OnsModelNumChanging(string value);
    partial void OnsModelNumChanged();
    partial void OnAcquisitionCostChanging(System.Nullable<decimal> value);
    partial void OnAcquisitionCostChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPMENT()
		{
			this._EQUIPCOMPONENTs = new EntitySet<EQUIPCOMPONENT>(new Action<EQUIPCOMPONENT>(this.attach_EQUIPCOMPONENTs), new Action<EQUIPCOMPONENT>(this.detach_EQUIPCOMPONENTs));
			this._EQUIPTYPE = default(EntityRef<EQUIPTYPE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipType", DbType="Int NOT NULL")]
		public int iEquipType
		{
			get
			{
				return this._iEquipType;
			}
			set
			{
				if ((this._iEquipType != value))
				{
					if (this._EQUIPTYPE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipTypeChanging(value);
					this.SendPropertyChanging();
					this._iEquipType = value;
					this.SendPropertyChanged("iEquipType");
					this.OniEquipTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sShortEquipName", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string sShortEquipName
		{
			get
			{
				return this._sShortEquipName;
			}
			set
			{
				if ((this._sShortEquipName != value))
				{
					this.OnsShortEquipNameChanging(value);
					this.SendPropertyChanging();
					this._sShortEquipName = value;
					this.SendPropertyChanged("sShortEquipName");
					this.OnsShortEquipNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="VarChar(MAX)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sRegistrationId", DbType="VarChar(20)")]
		public string sRegistrationId
		{
			get
			{
				return this._sRegistrationId;
			}
			set
			{
				if ((this._sRegistrationId != value))
				{
					this.OnsRegistrationIdChanging(value);
					this.SendPropertyChanging();
					this._sRegistrationId = value;
					this.SendPropertyChanged("sRegistrationId");
					this.OnsRegistrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sOwner", DbType="VarChar(50)")]
		public string sOwner
		{
			get
			{
				return this._sOwner;
			}
			set
			{
				if ((this._sOwner != value))
				{
					this.OnsOwnerChanging(value);
					this.SendPropertyChanging();
					this._sOwner = value;
					this.SendPropertyChanged("sOwner");
					this.OnsOwnerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sModelNum", DbType="VarChar(20)")]
		public string sModelNum
		{
			get
			{
				return this._sModelNum;
			}
			set
			{
				if ((this._sModelNum != value))
				{
					this.OnsModelNumChanging(value);
					this.SendPropertyChanging();
					this._sModelNum = value;
					this.SendPropertyChanged("sModelNum");
					this.OnsModelNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AcquisitionCost", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> AcquisitionCost
		{
			get
			{
				return this._AcquisitionCost;
			}
			set
			{
				if ((this._AcquisitionCost != value))
				{
					this.OnAcquisitionCostChanging(value);
					this.SendPropertyChanging();
					this._AcquisitionCost = value;
					this.SendPropertyChanged("AcquisitionCost");
					this.OnAcquisitionCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_EQUIPCOMPONENT", Storage="_EQUIPCOMPONENTs", ThisKey="ID", OtherKey="iEquipment")]
		public EntitySet<EQUIPCOMPONENT> EQUIPCOMPONENTs
		{
			get
			{
				return this._EQUIPCOMPONENTs;
			}
			set
			{
				this._EQUIPCOMPONENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPTYPE_EQUIPMENT", Storage="_EQUIPTYPE", ThisKey="iEquipType", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPTYPE EQUIPTYPE
		{
			get
			{
				return this._EQUIPTYPE.Entity;
			}
			set
			{
				EQUIPTYPE previousValue = this._EQUIPTYPE.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPTYPE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPTYPE.Entity = null;
						previousValue.EQUIPMENTs.Remove(this);
					}
					this._EQUIPTYPE.Entity = value;
					if ((value != null))
					{
						value.EQUIPMENTs.Add(this);
						this._iEquipType = value.ID;
					}
					else
					{
						this._iEquipType = default(int);
					}
					this.SendPropertyChanged("EQUIPTYPE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EQUIPCOMPONENTs(EQUIPCOMPONENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = this;
		}
		
		private void detach_EQUIPCOMPONENTs(EQUIPCOMPONENT entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PEOPLE")]
	public partial class PEOPLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.DateTime _PiTRecordEntered;
		
		private int _iRecordEnteredBy;
		
		private string _sTitle;
		
		private string _sFirstName;
		
		private string _sMiddleName;
		
		private string _sLastName;
		
		private string _sSuffix;
		
		private string _sDisplayName;
		
		private string _sNotes;
		
		private System.Nullable<System.DateTime> _DateOfBirth;
		
		private string _sUserName;
		
		private string _sIdQBO;
		
		private System.DateTimeOffset _DAcceptedAUP;
		
		private EntitySet<MEMBERFROMTO> _MEMBERFROMTOs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.DateTime value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(int value);
    partial void OniRecordEnteredByChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsFirstNameChanging(string value);
    partial void OnsFirstNameChanged();
    partial void OnsMiddleNameChanging(string value);
    partial void OnsMiddleNameChanged();
    partial void OnsLastNameChanging(string value);
    partial void OnsLastNameChanged();
    partial void OnsSuffixChanging(string value);
    partial void OnsSuffixChanged();
    partial void OnsDisplayNameChanging(string value);
    partial void OnsDisplayNameChanged();
    partial void OnsNotesChanging(string value);
    partial void OnsNotesChanged();
    partial void OnDateOfBirthChanging(System.Nullable<System.DateTime> value);
    partial void OnDateOfBirthChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsIdQBOChanging(string value);
    partial void OnsIdQBOChanged();
    partial void OnDAcceptedAUPChanging(System.DateTimeOffset value);
    partial void OnDAcceptedAUPChanged();
    #endregion
		
		public PEOPLE()
		{
			this._MEMBERFROMTOs = new EntitySet<MEMBERFROMTO>(new Action<MEMBERFROMTO>(this.attach_MEMBERFROMTOs), new Action<MEMBERFROMTO>(this.detach_MEMBERFROMTOs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2 NOT NULL")]
		public System.DateTime PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int NOT NULL")]
		public int iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(20)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFirstName", DbType="NVarChar(50)")]
		public string sFirstName
		{
			get
			{
				return this._sFirstName;
			}
			set
			{
				if ((this._sFirstName != value))
				{
					this.OnsFirstNameChanging(value);
					this.SendPropertyChanging();
					this._sFirstName = value;
					this.SendPropertyChanged("sFirstName");
					this.OnsFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sMiddleName", DbType="NVarChar(50)")]
		public string sMiddleName
		{
			get
			{
				return this._sMiddleName;
			}
			set
			{
				if ((this._sMiddleName != value))
				{
					this.OnsMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._sMiddleName = value;
					this.SendPropertyChanged("sMiddleName");
					this.OnsMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sLastName", DbType="NVarChar(50)")]
		public string sLastName
		{
			get
			{
				return this._sLastName;
			}
			set
			{
				if ((this._sLastName != value))
				{
					this.OnsLastNameChanging(value);
					this.SendPropertyChanging();
					this._sLastName = value;
					this.SendPropertyChanged("sLastName");
					this.OnsLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSuffix", DbType="NVarChar(20)")]
		public string sSuffix
		{
			get
			{
				return this._sSuffix;
			}
			set
			{
				if ((this._sSuffix != value))
				{
					this.OnsSuffixChanging(value);
					this.SendPropertyChanging();
					this._sSuffix = value;
					this.SendPropertyChanged("sSuffix");
					this.OnsSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDisplayName", DbType="NVarChar(55) NOT NULL", CanBeNull=false)]
		public string sDisplayName
		{
			get
			{
				return this._sDisplayName;
			}
			set
			{
				if ((this._sDisplayName != value))
				{
					this.OnsDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._sDisplayName = value;
					this.SendPropertyChanged("sDisplayName");
					this.OnsDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sNotes", DbType="NVarChar(MAX)")]
		public string sNotes
		{
			get
			{
				return this._sNotes;
			}
			set
			{
				if ((this._sNotes != value))
				{
					this.OnsNotesChanging(value);
					this.SendPropertyChanging();
					this._sNotes = value;
					this.SendPropertyChanged("sNotes");
					this.OnsNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date")]
		public System.Nullable<System.DateTime> DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(256)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sIdQBO", DbType="NVarChar(20)")]
		public string sIdQBO
		{
			get
			{
				return this._sIdQBO;
			}
			set
			{
				if ((this._sIdQBO != value))
				{
					this.OnsIdQBOChanging(value);
					this.SendPropertyChanging();
					this._sIdQBO = value;
					this.SendPropertyChanged("sIdQBO");
					this.OnsIdQBOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAcceptedAUP", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DAcceptedAUP
		{
			get
			{
				return this._DAcceptedAUP;
			}
			set
			{
				if ((this._DAcceptedAUP != value))
				{
					this.OnDAcceptedAUPChanging(value);
					this.SendPropertyChanging();
					this._DAcceptedAUP = value;
					this.SendPropertyChanged("DAcceptedAUP");
					this.OnDAcceptedAUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_MEMBERFROMTOs", ThisKey="ID", OtherKey="iPerson")]
		public EntitySet<MEMBERFROMTO> MEMBERFROMTOs
		{
			get
			{
				return this._MEMBERFROMTOs;
			}
			set
			{
				this._MEMBERFROMTOs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = this;
		}
		
		private void detach_MEMBERFROMTOs(MEMBERFROMTO entity)
		{
			this.SendPropertyChanging();
			entity.PEOPLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MEMBERFROMTO")]
	public partial class MEMBERFROMTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPerson;
		
		private int _iMemberCategory;
		
		private System.DateTimeOffset _DMembershipBegin;
		
		private System.DateTimeOffset _DMembershipEnd;
		
		private string _sAdditionalInfo;
		
		private EntityRef<PEOPLE> _PEOPLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPersonChanging(int value);
    partial void OniPersonChanged();
    partial void OniMemberCategoryChanging(int value);
    partial void OniMemberCategoryChanged();
    partial void OnDMembershipBeginChanging(System.DateTimeOffset value);
    partial void OnDMembershipBeginChanged();
    partial void OnDMembershipEndChanging(System.DateTimeOffset value);
    partial void OnDMembershipEndChanged();
    partial void OnsAdditionalInfoChanging(string value);
    partial void OnsAdditionalInfoChanged();
    #endregion
		
		public MEMBERFROMTO()
		{
			this._PEOPLE = default(EntityRef<PEOPLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPerson", DbType="Int NOT NULL")]
		public int iPerson
		{
			get
			{
				return this._iPerson;
			}
			set
			{
				if ((this._iPerson != value))
				{
					if (this._PEOPLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPersonChanging(value);
					this.SendPropertyChanging();
					this._iPerson = value;
					this.SendPropertyChanged("iPerson");
					this.OniPersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMemberCategory", DbType="Int NOT NULL")]
		public int iMemberCategory
		{
			get
			{
				return this._iMemberCategory;
			}
			set
			{
				if ((this._iMemberCategory != value))
				{
					this.OniMemberCategoryChanging(value);
					this.SendPropertyChanging();
					this._iMemberCategory = value;
					this.SendPropertyChanged("iMemberCategory");
					this.OniMemberCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipBegin
		{
			get
			{
				return this._DMembershipBegin;
			}
			set
			{
				if ((this._DMembershipBegin != value))
				{
					this.OnDMembershipBeginChanging(value);
					this.SendPropertyChanging();
					this._DMembershipBegin = value;
					this.SendPropertyChanged("DMembershipBegin");
					this.OnDMembershipBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DMembershipEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DMembershipEnd
		{
			get
			{
				return this._DMembershipEnd;
			}
			set
			{
				if ((this._DMembershipEnd != value))
				{
					this.OnDMembershipEndChanging(value);
					this.SendPropertyChanging();
					this._DMembershipEnd = value;
					this.SendPropertyChanged("DMembershipEnd");
					this.OnDMembershipEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sAdditionalInfo", DbType="VarChar(MAX)")]
		public string sAdditionalInfo
		{
			get
			{
				return this._sAdditionalInfo;
			}
			set
			{
				if ((this._sAdditionalInfo != value))
				{
					this.OnsAdditionalInfoChanging(value);
					this.SendPropertyChanging();
					this._sAdditionalInfo = value;
					this.SendPropertyChanged("sAdditionalInfo");
					this.OnsAdditionalInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PEOPLE_MEMBERFROMTO", Storage="_PEOPLE", ThisKey="iPerson", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PEOPLE PEOPLE
		{
			get
			{
				return this._PEOPLE.Entity;
			}
			set
			{
				PEOPLE previousValue = this._PEOPLE.Entity;
				if (((previousValue != value) 
							|| (this._PEOPLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PEOPLE.Entity = null;
						previousValue.MEMBERFROMTOs.Remove(this);
					}
					this._PEOPLE.Entity = value;
					if ((value != null))
					{
						value.MEMBERFROMTOs.Add(this);
						this._iPerson = value.ID;
					}
					else
					{
						this._iPerson = default(int);
					}
					this.SendPropertyChanged("PEOPLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
	public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _RoleId;
		
		private string _RoleName;
		
		private string _LoweredRoleName;
		
		private string _Description;
		
		private EntitySet<SETTINGSROLESBRIDGE> _SETTINGSROLESBRIDGEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public aspnet_Role()
		{
			this._SETTINGSROLESBRIDGEs = new EntitySet<SETTINGSROLESBRIDGE>(new Action<SETTINGSROLESBRIDGE>(this.attach_SETTINGSROLESBRIDGEs), new Action<SETTINGSROLESBRIDGE>(this.detach_SETTINGSROLESBRIDGEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredRoleName
		{
			get
			{
				return this._LoweredRoleName;
			}
			set
			{
				if ((this._LoweredRoleName != value))
				{
					this.OnLoweredRoleNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredRoleName = value;
					this.SendPropertyChanged("LoweredRoleName");
					this.OnLoweredRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_SETTINGSROLESBRIDGE", Storage="_SETTINGSROLESBRIDGEs", ThisKey="RoleId", OtherKey="uiRole")]
		public EntitySet<SETTINGSROLESBRIDGE> SETTINGSROLESBRIDGEs
		{
			get
			{
				return this._SETTINGSROLESBRIDGEs;
			}
			set
			{
				this._SETTINGSROLESBRIDGEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SETTINGSROLESBRIDGEs(SETTINGSROLESBRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = this;
		}
		
		private void detach_SETTINGSROLESBRIDGEs(SETTINGSROLESBRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.aspnet_Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETTINGSROLESBRIDGE")]
	public partial class SETTINGSROLESBRIDGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iSetting;
		
		private System.Guid _uiRole;
		
		private string _sComments;
		
		private EntityRef<aspnet_Role> _aspnet_Role;
		
		private EntityRef<SETTING> _SETTING;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniSettingChanging(int value);
    partial void OniSettingChanged();
    partial void OnuiRoleChanging(System.Guid value);
    partial void OnuiRoleChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    #endregion
		
		public SETTINGSROLESBRIDGE()
		{
			this._aspnet_Role = default(EntityRef<aspnet_Role>);
			this._SETTING = default(EntityRef<SETTING>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iSetting", DbType="Int NOT NULL")]
		public int iSetting
		{
			get
			{
				return this._iSetting;
			}
			set
			{
				if ((this._iSetting != value))
				{
					if (this._SETTING.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniSettingChanging(value);
					this.SendPropertyChanging();
					this._iSetting = value;
					this.SendPropertyChanged("iSetting");
					this.OniSettingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uiRole", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid uiRole
		{
			get
			{
				return this._uiRole;
			}
			set
			{
				if ((this._uiRole != value))
				{
					if (this._aspnet_Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuiRoleChanging(value);
					this.SendPropertyChanging();
					this._uiRole = value;
					this.SendPropertyChanged("uiRole");
					this.OnuiRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_SETTINGSROLESBRIDGE", Storage="_aspnet_Role", ThisKey="uiRole", OtherKey="RoleId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public aspnet_Role aspnet_Role
		{
			get
			{
				return this._aspnet_Role.Entity;
			}
			set
			{
				aspnet_Role previousValue = this._aspnet_Role.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Role.Entity = null;
						previousValue.SETTINGSROLESBRIDGEs.Remove(this);
					}
					this._aspnet_Role.Entity = value;
					if ((value != null))
					{
						value.SETTINGSROLESBRIDGEs.Add(this);
						this._uiRole = value.RoleId;
					}
					else
					{
						this._uiRole = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SETTING_SETTINGSROLESBRIDGE", Storage="_SETTING", ThisKey="iSetting", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public SETTING SETTING
		{
			get
			{
				return this._SETTING.Entity;
			}
			set
			{
				SETTING previousValue = this._SETTING.Entity;
				if (((previousValue != value) 
							|| (this._SETTING.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SETTING.Entity = null;
						previousValue.SETTINGSROLESBRIDGEs.Remove(this);
					}
					this._SETTING.Entity = value;
					if ((value != null))
					{
						value.SETTINGSROLESBRIDGEs.Add(this);
						this._iSetting = value.ID;
					}
					else
					{
						this._iSetting = default(int);
					}
					this.SendPropertyChanged("SETTING");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPAGINGITEMS")]
	public partial class EQUIPAGINGITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private string _sName;
		
		private int _iEquipComponent;
		
		private int _iParam;
		
		private int _iOpCal;
		
		private System.DateTimeOffset _DStart;
		
		private System.DateTimeOffset _DEnd;
		
		private decimal _dEstRunDays;
		
		private bool _bRunExtrap;
		
		private decimal _dEstCycleDays;
		
		private bool _bCyclExtrap;
		
		private decimal _dEstDistDays;
		
		private bool _bDistExtrap;
		
		private decimal _dEstDuration;
		
		private string _sComment;
		
		private EntityRef<OPSCALNAME> _OPSCALNAME;
		
		private EntityRef<EQUIPCOMPONENT> _EQUIPCOMPONENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    partial void OniEquipComponentChanging(int value);
    partial void OniEquipComponentChanged();
    partial void OniParamChanging(int value);
    partial void OniParamChanged();
    partial void OniOpCalChanging(int value);
    partial void OniOpCalChanged();
    partial void OnDStartChanging(System.DateTimeOffset value);
    partial void OnDStartChanged();
    partial void OnDEndChanging(System.DateTimeOffset value);
    partial void OnDEndChanged();
    partial void OndEstRunDaysChanging(decimal value);
    partial void OndEstRunDaysChanged();
    partial void OnbRunExtrapChanging(bool value);
    partial void OnbRunExtrapChanged();
    partial void OndEstCycleDaysChanging(decimal value);
    partial void OndEstCycleDaysChanged();
    partial void OnbCyclExtrapChanging(bool value);
    partial void OnbCyclExtrapChanged();
    partial void OndEstDistDaysChanging(decimal value);
    partial void OndEstDistDaysChanged();
    partial void OnbDistExtrapChanging(bool value);
    partial void OnbDistExtrapChanged();
    partial void OndEstDurationChanging(decimal value);
    partial void OndEstDurationChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public EQUIPAGINGITEM()
		{
			this._OPSCALNAME = default(EntityRef<OPSCALNAME>);
			this._EQUIPCOMPONENT = default(EntityRef<EQUIPCOMPONENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipComponent", DbType="Int NOT NULL")]
		public int iEquipComponent
		{
			get
			{
				return this._iEquipComponent;
			}
			set
			{
				if ((this._iEquipComponent != value))
				{
					if (this._EQUIPCOMPONENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipComponentChanging(value);
					this.SendPropertyChanging();
					this._iEquipComponent = value;
					this.SendPropertyChanged("iEquipComponent");
					this.OniEquipComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iParam", DbType="Int NOT NULL")]
		public int iParam
		{
			get
			{
				return this._iParam;
			}
			set
			{
				if ((this._iParam != value))
				{
					this.OniParamChanging(value);
					this.SendPropertyChanging();
					this._iParam = value;
					this.SendPropertyChanged("iParam");
					this.OniParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOpCal", DbType="Int NOT NULL")]
		public int iOpCal
		{
			get
			{
				return this._iOpCal;
			}
			set
			{
				if ((this._iOpCal != value))
				{
					if (this._OPSCALNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOpCalChanging(value);
					this.SendPropertyChanging();
					this._iOpCal = value;
					this.SendPropertyChanged("iOpCal");
					this.OniOpCalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DStart", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DStart
		{
			get
			{
				return this._DStart;
			}
			set
			{
				if ((this._DStart != value))
				{
					this.OnDStartChanging(value);
					this.SendPropertyChanging();
					this._DStart = value;
					this.SendPropertyChanged("DStart");
					this.OnDStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this.OnDEndChanging(value);
					this.SendPropertyChanging();
					this._DEnd = value;
					this.SendPropertyChanged("DEnd");
					this.OnDEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEstRunDays", DbType="Decimal(12,4) NOT NULL")]
		public decimal dEstRunDays
		{
			get
			{
				return this._dEstRunDays;
			}
			set
			{
				if ((this._dEstRunDays != value))
				{
					this.OndEstRunDaysChanging(value);
					this.SendPropertyChanging();
					this._dEstRunDays = value;
					this.SendPropertyChanged("dEstRunDays");
					this.OndEstRunDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bRunExtrap", DbType="Bit NOT NULL")]
		public bool bRunExtrap
		{
			get
			{
				return this._bRunExtrap;
			}
			set
			{
				if ((this._bRunExtrap != value))
				{
					this.OnbRunExtrapChanging(value);
					this.SendPropertyChanging();
					this._bRunExtrap = value;
					this.SendPropertyChanged("bRunExtrap");
					this.OnbRunExtrapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEstCycleDays", DbType="Decimal(12,4) NOT NULL")]
		public decimal dEstCycleDays
		{
			get
			{
				return this._dEstCycleDays;
			}
			set
			{
				if ((this._dEstCycleDays != value))
				{
					this.OndEstCycleDaysChanging(value);
					this.SendPropertyChanging();
					this._dEstCycleDays = value;
					this.SendPropertyChanged("dEstCycleDays");
					this.OndEstCycleDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bCyclExtrap", DbType="Bit NOT NULL")]
		public bool bCyclExtrap
		{
			get
			{
				return this._bCyclExtrap;
			}
			set
			{
				if ((this._bCyclExtrap != value))
				{
					this.OnbCyclExtrapChanging(value);
					this.SendPropertyChanging();
					this._bCyclExtrap = value;
					this.SendPropertyChanged("bCyclExtrap");
					this.OnbCyclExtrapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEstDistDays", DbType="Decimal(12,4) NOT NULL")]
		public decimal dEstDistDays
		{
			get
			{
				return this._dEstDistDays;
			}
			set
			{
				if ((this._dEstDistDays != value))
				{
					this.OndEstDistDaysChanging(value);
					this.SendPropertyChanging();
					this._dEstDistDays = value;
					this.SendPropertyChanged("dEstDistDays");
					this.OndEstDistDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bDistExtrap", DbType="Bit NOT NULL")]
		public bool bDistExtrap
		{
			get
			{
				return this._bDistExtrap;
			}
			set
			{
				if ((this._bDistExtrap != value))
				{
					this.OnbDistExtrapChanging(value);
					this.SendPropertyChanging();
					this._bDistExtrap = value;
					this.SendPropertyChanged("bDistExtrap");
					this.OnbDistExtrapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dEstDuration", DbType="Decimal(12,4) NOT NULL")]
		public decimal dEstDuration
		{
			get
			{
				return this._dEstDuration;
			}
			set
			{
				if ((this._dEstDuration != value))
				{
					this.OndEstDurationChanging(value);
					this.SendPropertyChanging();
					this._dEstDuration = value;
					this.SendPropertyChanged("dEstDuration");
					this.OndEstDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPSCALNAME_EQUIPAGINGITEM", Storage="_OPSCALNAME", ThisKey="iOpCal", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPSCALNAME OPSCALNAME
		{
			get
			{
				return this._OPSCALNAME.Entity;
			}
			set
			{
				OPSCALNAME previousValue = this._OPSCALNAME.Entity;
				if (((previousValue != value) 
							|| (this._OPSCALNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPSCALNAME.Entity = null;
						previousValue.EQUIPAGINGITEMs.Remove(this);
					}
					this._OPSCALNAME.Entity = value;
					if ((value != null))
					{
						value.EQUIPAGINGITEMs.Add(this);
						this._iOpCal = value.ID;
					}
					else
					{
						this._iOpCal = default(int);
					}
					this.SendPropertyChanged("OPSCALNAME");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPCOMPONENT_EQUIPAGINGITEM", Storage="_EQUIPCOMPONENT", ThisKey="iEquipComponent", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPCOMPONENT EQUIPCOMPONENT
		{
			get
			{
				return this._EQUIPCOMPONENT.Entity;
			}
			set
			{
				EQUIPCOMPONENT previousValue = this._EQUIPCOMPONENT.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPCOMPONENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPCOMPONENT.Entity = null;
						previousValue.EQUIPAGINGITEMs.Remove(this);
					}
					this._EQUIPCOMPONENT.Entity = value;
					if ((value != null))
					{
						value.EQUIPAGINGITEMs.Add(this);
						this._iEquipComponent = value.ID;
					}
					else
					{
						this._iEquipComponent = default(int);
					}
					this.SendPropertyChanged("EQUIPCOMPONENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPSCALNAMES")]
	public partial class OPSCALNAME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sOpsCalName;
		
		private bool _bStandard;
		
		private EntitySet<EQUIPAGINGITEM> _EQUIPAGINGITEMs;
		
		private EntitySet<OPSCALTIME> _OPSCALTIMEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsOpsCalNameChanging(string value);
    partial void OnsOpsCalNameChanged();
    partial void OnbStandardChanging(bool value);
    partial void OnbStandardChanged();
    #endregion
		
		public OPSCALNAME()
		{
			this._EQUIPAGINGITEMs = new EntitySet<EQUIPAGINGITEM>(new Action<EQUIPAGINGITEM>(this.attach_EQUIPAGINGITEMs), new Action<EQUIPAGINGITEM>(this.detach_EQUIPAGINGITEMs));
			this._OPSCALTIMEs = new EntitySet<OPSCALTIME>(new Action<OPSCALTIME>(this.attach_OPSCALTIMEs), new Action<OPSCALTIME>(this.detach_OPSCALTIMEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sOpsCalName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sOpsCalName
		{
			get
			{
				return this._sOpsCalName;
			}
			set
			{
				if ((this._sOpsCalName != value))
				{
					this.OnsOpsCalNameChanging(value);
					this.SendPropertyChanging();
					this._sOpsCalName = value;
					this.SendPropertyChanged("sOpsCalName");
					this.OnsOpsCalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bStandard", DbType="Bit NOT NULL")]
		public bool bStandard
		{
			get
			{
				return this._bStandard;
			}
			set
			{
				if ((this._bStandard != value))
				{
					this.OnbStandardChanging(value);
					this.SendPropertyChanging();
					this._bStandard = value;
					this.SendPropertyChanged("bStandard");
					this.OnbStandardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPSCALNAME_EQUIPAGINGITEM", Storage="_EQUIPAGINGITEMs", ThisKey="ID", OtherKey="iOpCal")]
		public EntitySet<EQUIPAGINGITEM> EQUIPAGINGITEMs
		{
			get
			{
				return this._EQUIPAGINGITEMs;
			}
			set
			{
				this._EQUIPAGINGITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPSCALNAME_OPSCALTIME", Storage="_OPSCALTIMEs", ThisKey="ID", OtherKey="iOpsCal")]
		public EntitySet<OPSCALTIME> OPSCALTIMEs
		{
			get
			{
				return this._OPSCALTIMEs;
			}
			set
			{
				this._OPSCALTIMEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EQUIPAGINGITEMs(EQUIPAGINGITEM entity)
		{
			this.SendPropertyChanging();
			entity.OPSCALNAME = this;
		}
		
		private void detach_EQUIPAGINGITEMs(EQUIPAGINGITEM entity)
		{
			this.SendPropertyChanging();
			entity.OPSCALNAME = null;
		}
		
		private void attach_OPSCALTIMEs(OPSCALTIME entity)
		{
			this.SendPropertyChanging();
			entity.OPSCALNAME = this;
		}
		
		private void detach_OPSCALTIMEs(OPSCALTIME entity)
		{
			this.SendPropertyChanging();
			entity.OPSCALNAME = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SETTINGS")]
	public partial class SETTING : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sSettingName;
		
		private string _sExplanation;
		
		private string _sSettingValue;
		
		private string _sInTable;
		
		private string _sComments;
		
		private bool _bUserSelectable;
		
		private char _cSettingType;
		
		private System.Nullable<decimal> _dLow;
		
		private System.Nullable<decimal> _dHigh;
		
		private string _sSelectStmnt;
		
		private string _sDataValueField;
		
		private string _sDataTextField;
		
		private EntitySet<SETTINGSROLESBRIDGE> _SETTINGSROLESBRIDGEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsSettingNameChanging(string value);
    partial void OnsSettingNameChanged();
    partial void OnsExplanationChanging(string value);
    partial void OnsExplanationChanged();
    partial void OnsSettingValueChanging(string value);
    partial void OnsSettingValueChanged();
    partial void OnsInTableChanging(string value);
    partial void OnsInTableChanged();
    partial void OnsCommentsChanging(string value);
    partial void OnsCommentsChanged();
    partial void OnbUserSelectableChanging(bool value);
    partial void OnbUserSelectableChanged();
    partial void OncSettingTypeChanging(char value);
    partial void OncSettingTypeChanged();
    partial void OndLowChanging(System.Nullable<decimal> value);
    partial void OndLowChanged();
    partial void OndHighChanging(System.Nullable<decimal> value);
    partial void OndHighChanged();
    partial void OnsSelectStmntChanging(string value);
    partial void OnsSelectStmntChanged();
    partial void OnsDataValueFieldChanging(string value);
    partial void OnsDataValueFieldChanged();
    partial void OnsDataTextFieldChanging(string value);
    partial void OnsDataTextFieldChanged();
    #endregion
		
		public SETTING()
		{
			this._SETTINGSROLESBRIDGEs = new EntitySet<SETTINGSROLESBRIDGE>(new Action<SETTINGSROLESBRIDGE>(this.attach_SETTINGSROLESBRIDGEs), new Action<SETTINGSROLESBRIDGE>(this.detach_SETTINGSROLESBRIDGEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSettingName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sSettingName
		{
			get
			{
				return this._sSettingName;
			}
			set
			{
				if ((this._sSettingName != value))
				{
					this.OnsSettingNameChanging(value);
					this.SendPropertyChanging();
					this._sSettingName = value;
					this.SendPropertyChanged("sSettingName");
					this.OnsSettingNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sExplanation", DbType="NVarChar(MAX)")]
		public string sExplanation
		{
			get
			{
				return this._sExplanation;
			}
			set
			{
				if ((this._sExplanation != value))
				{
					this.OnsExplanationChanging(value);
					this.SendPropertyChanging();
					this._sExplanation = value;
					this.SendPropertyChanged("sExplanation");
					this.OnsExplanationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSettingValue", DbType="NVarChar(MAX)")]
		public string sSettingValue
		{
			get
			{
				return this._sSettingValue;
			}
			set
			{
				if ((this._sSettingValue != value))
				{
					this.OnsSettingValueChanging(value);
					this.SendPropertyChanging();
					this._sSettingValue = value;
					this.SendPropertyChanged("sSettingValue");
					this.OnsSettingValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sInTable", DbType="NVarChar(MAX)")]
		public string sInTable
		{
			get
			{
				return this._sInTable;
			}
			set
			{
				if ((this._sInTable != value))
				{
					this.OnsInTableChanging(value);
					this.SendPropertyChanging();
					this._sInTable = value;
					this.SendPropertyChanged("sInTable");
					this.OnsInTableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComments", DbType="NVarChar(MAX)")]
		public string sComments
		{
			get
			{
				return this._sComments;
			}
			set
			{
				if ((this._sComments != value))
				{
					this.OnsCommentsChanging(value);
					this.SendPropertyChanging();
					this._sComments = value;
					this.SendPropertyChanged("sComments");
					this.OnsCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bUserSelectable", DbType="Bit NOT NULL")]
		public bool bUserSelectable
		{
			get
			{
				return this._bUserSelectable;
			}
			set
			{
				if ((this._bUserSelectable != value))
				{
					this.OnbUserSelectableChanging(value);
					this.SendPropertyChanging();
					this._bUserSelectable = value;
					this.SendPropertyChanged("bUserSelectable");
					this.OnbUserSelectableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cSettingType", DbType="NChar(1) NOT NULL")]
		public char cSettingType
		{
			get
			{
				return this._cSettingType;
			}
			set
			{
				if ((this._cSettingType != value))
				{
					this.OncSettingTypeChanging(value);
					this.SendPropertyChanging();
					this._cSettingType = value;
					this.SendPropertyChanged("cSettingType");
					this.OncSettingTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dLow", DbType="Decimal(12,4)")]
		public System.Nullable<decimal> dLow
		{
			get
			{
				return this._dLow;
			}
			set
			{
				if ((this._dLow != value))
				{
					this.OndLowChanging(value);
					this.SendPropertyChanging();
					this._dLow = value;
					this.SendPropertyChanged("dLow");
					this.OndLowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dHigh", DbType="Decimal(12,4)")]
		public System.Nullable<decimal> dHigh
		{
			get
			{
				return this._dHigh;
			}
			set
			{
				if ((this._dHigh != value))
				{
					this.OndHighChanging(value);
					this.SendPropertyChanging();
					this._dHigh = value;
					this.SendPropertyChanged("dHigh");
					this.OndHighChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sSelectStmnt", DbType="NVarChar(MAX)")]
		public string sSelectStmnt
		{
			get
			{
				return this._sSelectStmnt;
			}
			set
			{
				if ((this._sSelectStmnt != value))
				{
					this.OnsSelectStmntChanging(value);
					this.SendPropertyChanging();
					this._sSelectStmnt = value;
					this.SendPropertyChanged("sSelectStmnt");
					this.OnsSelectStmntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDataValueField", DbType="NVarChar(50)")]
		public string sDataValueField
		{
			get
			{
				return this._sDataValueField;
			}
			set
			{
				if ((this._sDataValueField != value))
				{
					this.OnsDataValueFieldChanging(value);
					this.SendPropertyChanging();
					this._sDataValueField = value;
					this.SendPropertyChanged("sDataValueField");
					this.OnsDataValueFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDataTextField", DbType="NVarChar(MAX)")]
		public string sDataTextField
		{
			get
			{
				return this._sDataTextField;
			}
			set
			{
				if ((this._sDataTextField != value))
				{
					this.OnsDataTextFieldChanging(value);
					this.SendPropertyChanging();
					this._sDataTextField = value;
					this.SendPropertyChanged("sDataTextField");
					this.OnsDataTextFieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SETTING_SETTINGSROLESBRIDGE", Storage="_SETTINGSROLESBRIDGEs", ThisKey="ID", OtherKey="iSetting")]
		public EntitySet<SETTINGSROLESBRIDGE> SETTINGSROLESBRIDGEs
		{
			get
			{
				return this._SETTINGSROLESBRIDGEs;
			}
			set
			{
				this._SETTINGSROLESBRIDGEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SETTINGSROLESBRIDGEs(SETTINGSROLESBRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.SETTING = this;
		}
		
		private void detach_SETTINGSROLESBRIDGEs(SETTINGSROLESBRIDGE entity)
		{
			this.SendPropertyChanging();
			entity.SETTING = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FA_ITEMS")]
	public partial class FA_ITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _sFA_ItemCode;
		
		private string _sItemDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsFA_ItemCodeChanging(string value);
    partial void OnsFA_ItemCodeChanged();
    partial void OnsItemDescriptionChanging(string value);
    partial void OnsItemDescriptionChanged();
    #endregion
		
		public FA_ITEM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sFA_ItemCode", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string sFA_ItemCode
		{
			get
			{
				return this._sFA_ItemCode;
			}
			set
			{
				if ((this._sFA_ItemCode != value))
				{
					this.OnsFA_ItemCodeChanging(value);
					this.SendPropertyChanging();
					this._sFA_ItemCode = value;
					this.SendPropertyChanged("sFA_ItemCode");
					this.OnsFA_ItemCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sItemDescription", DbType="NVarChar(200)")]
		public string sItemDescription
		{
			get
			{
				return this._sItemDescription;
			}
			set
			{
				if ((this._sItemDescription != value))
				{
					this.OnsItemDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sItemDescription = value;
					this.SendPropertyChanged("sItemDescription");
					this.OnsItemDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FA_PMTTERMS")]
	public partial class FA_PMTTERM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _iPmtTermsCode;
		
		private string _sDescription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OniPmtTermsCodeChanging(int value);
    partial void OniPmtTermsCodeChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public FA_PMTTERM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPmtTermsCode", DbType="Int NOT NULL")]
		public int iPmtTermsCode
		{
			get
			{
				return this._iPmtTermsCode;
			}
			set
			{
				if ((this._iPmtTermsCode != value))
				{
					this.OniPmtTermsCodeChanging(value);
					this.SendPropertyChanging();
					this._iPmtTermsCode = value;
					this.SendPropertyChanged("iPmtTermsCode");
					this.OniPmtTermsCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EQUIPCOMPONENTS")]
	public partial class EQUIPCOMPONENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iEquipment;
		
		private string _sComponent;
		
		private bool _bEntire;
		
		private System.DateTimeOffset _DLinkBegin;
		
		private System.DateTimeOffset _DLinkEnd;
		
		private string _sComment;
		
		private int _iParentComponent;
		
		private EntitySet<EQUIPOPERDATA> _EQUIPOPERDATAs;
		
		private EntitySet<EQUIPAGINGITEM> _EQUIPAGINGITEMs;
		
		private EntityRef<EQUIPMENT> _EQUIPMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniEquipmentChanging(int value);
    partial void OniEquipmentChanged();
    partial void OnsComponentChanging(string value);
    partial void OnsComponentChanged();
    partial void OnbEntireChanging(bool value);
    partial void OnbEntireChanged();
    partial void OnDLinkBeginChanging(System.DateTimeOffset value);
    partial void OnDLinkBeginChanged();
    partial void OnDLinkEndChanging(System.DateTimeOffset value);
    partial void OnDLinkEndChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    partial void OniParentComponentChanging(int value);
    partial void OniParentComponentChanged();
    #endregion
		
		public EQUIPCOMPONENT()
		{
			this._EQUIPOPERDATAs = new EntitySet<EQUIPOPERDATA>(new Action<EQUIPOPERDATA>(this.attach_EQUIPOPERDATAs), new Action<EQUIPOPERDATA>(this.detach_EQUIPOPERDATAs));
			this._EQUIPAGINGITEMs = new EntitySet<EQUIPAGINGITEM>(new Action<EQUIPAGINGITEM>(this.attach_EQUIPAGINGITEMs), new Action<EQUIPAGINGITEM>(this.detach_EQUIPAGINGITEMs));
			this._EQUIPMENT = default(EntityRef<EQUIPMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEquipment", DbType="Int NOT NULL")]
		public int iEquipment
		{
			get
			{
				return this._iEquipment;
			}
			set
			{
				if ((this._iEquipment != value))
				{
					if (this._EQUIPMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniEquipmentChanging(value);
					this.SendPropertyChanging();
					this._iEquipment = value;
					this.SendPropertyChanged("iEquipment");
					this.OniEquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComponent", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string sComponent
		{
			get
			{
				return this._sComponent;
			}
			set
			{
				if ((this._sComponent != value))
				{
					this.OnsComponentChanging(value);
					this.SendPropertyChanging();
					this._sComponent = value;
					this.SendPropertyChanged("sComponent");
					this.OnsComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bEntire", DbType="Bit NOT NULL")]
		public bool bEntire
		{
			get
			{
				return this._bEntire;
			}
			set
			{
				if ((this._bEntire != value))
				{
					this.OnbEntireChanging(value);
					this.SendPropertyChanging();
					this._bEntire = value;
					this.SendPropertyChanged("bEntire");
					this.OnbEntireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLinkBegin", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DLinkBegin
		{
			get
			{
				return this._DLinkBegin;
			}
			set
			{
				if ((this._DLinkBegin != value))
				{
					this.OnDLinkBeginChanging(value);
					this.SendPropertyChanging();
					this._DLinkBegin = value;
					this.SendPropertyChanged("DLinkBegin");
					this.OnDLinkBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DLinkEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DLinkEnd
		{
			get
			{
				return this._DLinkEnd;
			}
			set
			{
				if ((this._DLinkEnd != value))
				{
					this.OnDLinkEndChanging(value);
					this.SendPropertyChanging();
					this._DLinkEnd = value;
					this.SendPropertyChanged("DLinkEnd");
					this.OnDLinkEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iParentComponent", DbType="Int NOT NULL")]
		public int iParentComponent
		{
			get
			{
				return this._iParentComponent;
			}
			set
			{
				if ((this._iParentComponent != value))
				{
					this.OniParentComponentChanging(value);
					this.SendPropertyChanging();
					this._iParentComponent = value;
					this.SendPropertyChanged("iParentComponent");
					this.OniParentComponentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPCOMPONENT_EQUIPOPERDATA", Storage="_EQUIPOPERDATAs", ThisKey="ID", OtherKey="iEquipComponent")]
		public EntitySet<EQUIPOPERDATA> EQUIPOPERDATAs
		{
			get
			{
				return this._EQUIPOPERDATAs;
			}
			set
			{
				this._EQUIPOPERDATAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPCOMPONENT_EQUIPAGINGITEM", Storage="_EQUIPAGINGITEMs", ThisKey="ID", OtherKey="iEquipComponent")]
		public EntitySet<EQUIPAGINGITEM> EQUIPAGINGITEMs
		{
			get
			{
				return this._EQUIPAGINGITEMs;
			}
			set
			{
				this._EQUIPAGINGITEMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EQUIPMENT_EQUIPCOMPONENT", Storage="_EQUIPMENT", ThisKey="iEquipment", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EQUIPMENT EQUIPMENT
		{
			get
			{
				return this._EQUIPMENT.Entity;
			}
			set
			{
				EQUIPMENT previousValue = this._EQUIPMENT.Entity;
				if (((previousValue != value) 
							|| (this._EQUIPMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EQUIPMENT.Entity = null;
						previousValue.EQUIPCOMPONENTs.Remove(this);
					}
					this._EQUIPMENT.Entity = value;
					if ((value != null))
					{
						value.EQUIPCOMPONENTs.Add(this);
						this._iEquipment = value.ID;
					}
					else
					{
						this._iEquipment = default(int);
					}
					this.SendPropertyChanged("EQUIPMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EQUIPOPERDATAs(EQUIPOPERDATA entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPCOMPONENT = this;
		}
		
		private void detach_EQUIPOPERDATAs(EQUIPOPERDATA entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPCOMPONENT = null;
		}
		
		private void attach_EQUIPAGINGITEMs(EQUIPAGINGITEM entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPCOMPONENT = this;
		}
		
		private void detach_EQUIPAGINGITEMs(EQUIPAGINGITEM entity)
		{
			this.SendPropertyChanging();
			entity.EQUIPCOMPONENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPSCALTIMES")]
	public partial class OPSCALTIME : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<System.DateTime> _PiTRecordEntered;
		
		private System.Nullable<int> _iRecordEnteredBy;
		
		private int _iOpsCal;
		
		private System.DateTimeOffset _DStart;
		
		private bool _bOpStatus;
		
		private string _sComment;
		
		private EntityRef<OPSCALNAME> _OPSCALNAME;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPiTRecordEnteredChanging(System.Nullable<System.DateTime> value);
    partial void OnPiTRecordEnteredChanged();
    partial void OniRecordEnteredByChanging(System.Nullable<int> value);
    partial void OniRecordEnteredByChanged();
    partial void OniOpsCalChanging(int value);
    partial void OniOpsCalChanged();
    partial void OnDStartChanging(System.DateTimeOffset value);
    partial void OnDStartChanged();
    partial void OnbOpStatusChanging(bool value);
    partial void OnbOpStatusChanged();
    partial void OnsCommentChanging(string value);
    partial void OnsCommentChanged();
    #endregion
		
		public OPSCALTIME()
		{
			this._OPSCALNAME = default(EntityRef<OPSCALNAME>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiTRecordEntered", DbType="DateTime2")]
		public System.Nullable<System.DateTime> PiTRecordEntered
		{
			get
			{
				return this._PiTRecordEntered;
			}
			set
			{
				if ((this._PiTRecordEntered != value))
				{
					this.OnPiTRecordEnteredChanging(value);
					this.SendPropertyChanging();
					this._PiTRecordEntered = value;
					this.SendPropertyChanged("PiTRecordEntered");
					this.OnPiTRecordEnteredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iRecordEnteredBy", DbType="Int")]
		public System.Nullable<int> iRecordEnteredBy
		{
			get
			{
				return this._iRecordEnteredBy;
			}
			set
			{
				if ((this._iRecordEnteredBy != value))
				{
					this.OniRecordEnteredByChanging(value);
					this.SendPropertyChanging();
					this._iRecordEnteredBy = value;
					this.SendPropertyChanged("iRecordEnteredBy");
					this.OniRecordEnteredByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iOpsCal", DbType="Int NOT NULL")]
		public int iOpsCal
		{
			get
			{
				return this._iOpsCal;
			}
			set
			{
				if ((this._iOpsCal != value))
				{
					if (this._OPSCALNAME.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniOpsCalChanging(value);
					this.SendPropertyChanging();
					this._iOpsCal = value;
					this.SendPropertyChanged("iOpsCal");
					this.OniOpsCalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DStart", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset DStart
		{
			get
			{
				return this._DStart;
			}
			set
			{
				if ((this._DStart != value))
				{
					this.OnDStartChanging(value);
					this.SendPropertyChanging();
					this._DStart = value;
					this.SendPropertyChanged("DStart");
					this.OnDStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bOpStatus", DbType="Bit NOT NULL")]
		public bool bOpStatus
		{
			get
			{
				return this._bOpStatus;
			}
			set
			{
				if ((this._bOpStatus != value))
				{
					this.OnbOpStatusChanging(value);
					this.SendPropertyChanging();
					this._bOpStatus = value;
					this.SendPropertyChanged("bOpStatus");
					this.OnbOpStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sComment", DbType="NVarChar(MAX)")]
		public string sComment
		{
			get
			{
				return this._sComment;
			}
			set
			{
				if ((this._sComment != value))
				{
					this.OnsCommentChanging(value);
					this.SendPropertyChanging();
					this._sComment = value;
					this.SendPropertyChanged("sComment");
					this.OnsCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPSCALNAME_OPSCALTIME", Storage="_OPSCALNAME", ThisKey="iOpsCal", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OPSCALNAME OPSCALNAME
		{
			get
			{
				return this._OPSCALNAME.Entity;
			}
			set
			{
				OPSCALNAME previousValue = this._OPSCALNAME.Entity;
				if (((previousValue != value) 
							|| (this._OPSCALNAME.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPSCALNAME.Entity = null;
						previousValue.OPSCALTIMEs.Remove(this);
					}
					this._OPSCALNAME.Entity = value;
					if ((value != null))
					{
						value.OPSCALTIMEs.Add(this);
						this._iOpsCal = value.ID;
					}
					else
					{
						this._iOpsCal = default(int);
					}
					this.SendPropertyChanged("OPSCALNAME");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class TNPF_LinkBeginEndResult
	{
		
		private System.Nullable<System.DateTimeOffset> _DBegin;
		
		private System.Nullable<System.DateTimeOffset> _DEnd;
		
		public TNPF_LinkBeginEndResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBegin", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DBegin
		{
			get
			{
				return this._DBegin;
			}
			set
			{
				if ((this._DBegin != value))
				{
					this._DBegin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEnd", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> DEnd
		{
			get
			{
				return this._DEnd;
			}
			set
			{
				if ((this._DEnd != value))
				{
					this._DEnd = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
